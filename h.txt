    1  ll
    2  exit
    3  cd ll
    4  ll
    5  ls -la
    6  vi .zsh
    7  vi .zshrc
    8  exit
    9  cd dev
   10  ll
   11  cd kubeflow
   12  ll
   13  cd test_
   14  cd test_s3
   15  ll
   16  fish
   17  ll
   18  cd 
   19  ls -la
   20  vi .zshrc
   21  fish
   22  exit
   23  zsh
   24  ls
   25  cd 
   26  cd .oh-my-zsh
   27  ll
   28  fish
   29  zsh
   30  exit
   31  zsh
   32  exit
   33  fish
   34  exit
   35  ls
   36  ll
   37  exit
   38  git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
   39  source ~/pon
   40  git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
   41  vi ~/.zshrc
   42  exit
   43  ll
   44  la
   45  cd ..
   46  ll
   47  git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
   48  source ~/pon
   49  git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
   50  vi ~/.zshrc
   51  exit
   52  ll
   53  cd Dev/
   54  cd
   55  cd Dev/kubeflow
   56  ll
   57  exit
   58  ll
   59  cd Dev/kubeflow
   60  ll
   61  kubectl apply
   62  ll
   63  cd 
   64  vi .zshrc
   65  cat .zshrc
   66  vi .zshrc
   67  exit
   68  k apply
   69  kgp
   70  kgpo
   71  kgp -o yaml
   72  clear
   73  kgs
   74  kgs -n kube-system
   75  kgs -n istio-system
   76  cd Dev/kubeflow
   77  ll
   78  cd install-de-di
   79  ll
   80  cd kubeflow-core
   81  ll
   82  git diff
   83  ll
   84  pwd
   85  cd ..
   86  ll
   87  code .
   88  git diff
   89  cd kubeflow-core
   90  git diff
   91  git remote 
   92  git remote ls
   93  git remote show
   94  git remote show -v
   95  git remote -v show 
   96  ll
   97  find . -name model.sav
   98  cd ..
   99  find . -name model.sav
  100  cd ..
  101  find . -name model.sav
  102  cd test_s3
  103  ll
  104  cd src
  105  ll
  106  cd template_model
  107  ll
  108  cd ../../../mon_model/mon-pipeline/my_predic_standalone/model.sav .
  109  cd ../..
  110  ll
  111  cd kubeflow
  112  cp mon_model/mon-pipeline/my_predic_standalone/model.sav test_s3/src/template_model
  113  ll
  114  cd test_s3
  115  ll
  116  cd sa
  117  cd src
  118  ll
  119  seldon-core-microservice mymodel REST
  120  seldon-core-microservice mymodels3 REST
  121  seldon-core-microservice Models3 REST
  122  ll
  123  seldon-core-microservice Models3 REST
  124  curl http://localhost:5000/predict
  125  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'
  126  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}' | jq
  127  seldon-core-microservice Models3 REST
  128  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}' | jq
  129  ls -ltr /var/logs
  130  ls -ltr /var/log
  131  cd /var/log
  132  ll
  133  grep Entering *
  134  cd 
  135  cd Dev/kubeflow/test_s3/src
  136  ll
  137  seldon-core-microservice Models3 REST
  138  seldon-core-microservice Models3 REST -d
  139  seldon-core-microservice Models3 REST --log-level DEBUG
  140  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}' | jq
  141  seldon-core-microservice Models3 REST --log-level DEBUG
  142  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}' | jq
  143  seldon-core-microservice Models3 REST --log-level DEBUG
  144  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}' | jq
  145  seldon-core-microservice Models3 REST --log-level DEBUG
  146  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}' | jq
  147  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": { "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}' | jq
  148  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324]]}}' | jq
  149  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324]],[1 2 3 4]}}' | jq
  150  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324]][1 2 3 4]}}' | jq
  151  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324][1 2 3 4]]}}' | jq
  152  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324][1, 2, 3, 4]]}}' | jq
  153  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324],[1, 2, 3, 4]]}}' | jq
  154  seldon-core-microservice Models3 REST --log-level DEBUG
  155  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324],[1, 2, 3, 4]]}}' | jq
  156  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324],[1, 2, 3, 4]]}}' | jq
  157  seldon-core-microservice Models3 REST --log-level DEBUG
  158  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324],[1, 2, 3, 4]], "meta": "vs=toto"}}' | jq
  159  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324],[1, 2, 3, 4]]}, "meta": "vs=toto"}' | jq
  160  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324],[1, 2, 3, 4]]}}' | jq
  161  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324],[1, 2, 3, 4]]}, "tag": {"vs=toto"}}' | jq
  162  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324],[1, 2, 3, 4]]}, "tag": {"vs" : "toto"}}' | jq
  163  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324],[1, 2, 3, 4]]}, "tag": {"meta" : "toto"}}' | jq
  164  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}' | jq
  165  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324]]}}' | jq
  166  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"meta": {"tags": {"vs: "toto}}, "data": {"ndarray": [[7.233, 4.652, 7.39, 0.324]]}}' | jq
  167  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"meta": {"tags": {"vs: "toto}}, "data": {"ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'
  168  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"meta": {}, "data": {"ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'
  169  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"meta": {}, "data": {"ndarray": [[7.233, 4.652, 7.39, 0.324]]}}' | jq
  170  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"meta": {"vs": "toto"}, "data": {"ndarray": [[7.233, 4.652, 7.39, 0.324]]}}' | jq
  171  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"meta": {"tags": "toto"}, "data": {"ndarray": [[7.233, 4.652, 7.39, 0.324]]}}' | jq
  172  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"meta": {"tags": {"toto"}}, "data": {"ndarray": [[7.233, 4.652, 7.39, 0.324]]}}' | jq
  173  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"meta": {"tags": {vs = toto}}, "data": {"ndarray": [[7.233, 4.652, 7.39, 0.324]]}}' | jq
  174  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"meta": {"tags": {vs : toto}}, "data": {"ndarray": [[7.233, 4.652, 7.39, 0.324]]}}' | jq
  175  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"meta": {"tags":"" }, "data": {"ndarray": [[7.233, 4.652, 7.39, 0.324]]}}' | jq
  176  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"meta": {"tags":[] }, "data": {"ndarray": [[7.233, 4.652, 7.39, 0.324]]}}' | jq
  177  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"meta": {"tags": "toto",tata }, "data": {"ndarray": [[7.233, 4.652, 7.39, 0.324]]}}' | jq
  178  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"meta": {"tags": {} }, "data": {"ndarray": [[7.233, 4.652, 7.39, 0.324]]}}' | jq
  179  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"meta": {"tags": {"label": "toto"} }, "data": {"ndarray": [[7.233, 4.652, 7.39, 0.324]]}}' | jq
  180  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"meta": {"tags": {"vs": "monvs36"} }, "data": {"ndarray": [[7.233, 4.652, 7.39, 0.324]]}}' | jq
  181  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"meta": {"tags": {"vs": "monvs36", "ts": "monts48"} }, "data": {"ndarray": [[7.233, 4.652, 7.39, 0.324]]}}' | jq
  182  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"meta": {"tags": {"vs": "monvs36", "ts": "monts48"} }, "data": {"ndarray": [["data hour", 50]]}}' | jq
  183  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"meta": {"tags": {"vs": "monvs36", "ts": "monts48"} }, "data": {"ndarray": [["data hour", 50,1,2]]}}' | jq
  184  seldon-core-microservice Models3 REST --log-level DEBUG
  185  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"meta": {"tags": {"vs": "monvs36", "ts": "monts48"} }, "data": {"ndarray": [["data hour", 50,1,2]]}}' | jq
  186  seldon-core-microservice Models3 REST --log-level DEBUG
  187  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"meta": {"tags": {"vs": "monvs36", "ts": "monts48"} }, "data": {"ndarray": [["data hour", 50,1,2]]}}' | jq
  188  seldon-core-microservice Models3 REST --log-level DEBUG
  189  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"meta": {"tags": {"vs": "monvs36", "ts": "monts48"} }, "data": {"ndarray": [["data hour", 50,1,2]]}}' | jq
  190  seldon-core-microservice Models3 REST --log-level DEBUG
  191  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"meta": {"tags": {"vs": "monvs36", "ts": "monts48"} }, "data": {"ndarray": [["data hour", 50,1,2]]}}' | jq
  192  seldon-core-microservice Models3 REST --log-level DEBUG
  193  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"meta": {"tags": {"vs": "monvs36", "ts": "monts48"} }, "data": {"ndarray": [["data hour", 50,1,2]]}}' | jq
  194  seldon-core-microservice Models3 REST --log-level DEBUG
  195  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"meta": {"tags": {"vs": "monvs36", "ts": "monts48"} }, "data": {"ndarray": [["data hour", 50,1,2]]}}' | jq
  196  seldon-core-microservice Models3 REST --log-level DEBUG
  197  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"meta": {"tags": {"vs": "monvs36", "ts": "monts48"} }, "data": {"ndarray": [["data hour", 50,1,2]]}}' | jq
  198  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"meta": {"tags": {"vs": "monvs36", "ts": "monts48"} }, "data": {"ndarray": [["data hour", 50],["datehour2, 25]]}}' | jq
  199  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"meta": {"tags": {"vs": "monvs36", "ts": "monts48"} }, "data": {"ndarray": [["data hour", 50],["datehour2", 25]]}}' | jq
  200  seldon-core-microservice Models3 REST --log-level DEBUG
  201  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"meta": {"tags": {"vs": "monvs36", "ts": "monts48"} }, "data": {"ndarray": [["data hour", 50],["datehour2", 25]]}}' | jq
  202  seldon-core-microservice Models3 REST --log-level DEBUG
  203  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"meta": {"tags": {"vs": "monvs36", "ts": "monts48"} }, "data": {"ndarray": [["data hour", 50],["datehour2", 25]]}}' | jq
  204  seldon-core-microservice Models3 REST --log-level DEBUG
  205  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"meta": {"tags": {"vs": "monvs36", "ts": "monts48"} }, "data": {"ndarray": [["data hour", 50],["datehour2", 25]]}}' | jq
  206  seldon-core-microservice Models3 REST --log-level DEBUG
  207  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"meta": {"tags": {"vs": "monvs36", "ts": "monts48"} }, "data": {"ndarray": [["data hour", 50],["datehour2", 25]]}}' | jq
  208  seldon-core-microservice Models3 REST --log-level DEBUG
  209  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"meta": {"tags": {"vs": "monvs36", "ts": "monts48"} }, "data": {"ndarray": [["data hour", 50],["datehour2", 25]]}}' | jq
  210  seldon-core-microservice Models3 REST --log-level DEBUG
  211  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"meta": {"tags": {"vs": "monvs36", "ts": "monts48"} }, "data": {"ndarray": [["data hour", 50],["datehour2", 25]]}}' | jq
  212  cd Dev/kubeflow/test_s3/src
  213  ll
  214  cd ..
  215  ll
  216  cd ..
  217  ll
  218  cd test_s3
  219  ll
  220  cd ../
  221  ll
  222  cd install-
  223  cd install-de-di
  224  ll
  225  cd influxDB
  226  ll
  227  testDB
  228  mkdir testDB
  229  docker run -p 8086:8086 -v ./testDB:/var/lib/influxdb influxdb
  230  docker run -p 8086:8086 -v $PWD/testDB:/var/lib/influxdb influxdb
  231  ll
  232  cd ../
  233  ll
  234  cd temp
  235  ll
  236  cd ..
  237  cd mon_test_ES
  238  ll
  239  cd wassup
  240  ll
  241  cd ..
  242  cd data_wassup
  243  ll
  244  python load_inject.py
  245  python3 load_inject.py
  246  ll
  247  python3 req_data2.py
  248  cd ..
  249  cd .;
  250  cd ..
  251  cd test_s3
  252  ll
  253  cd src
  254  ll
  255  python3 from_tsdb\ _to_predict.py
  256  python3 req_data2.py
  257  python3 from_tsdb\ _to_predict.py
  258  python3 from_tsdb\ _to_predict.py | jq .
  259  python3 from_tsdb\ _to_predict.py
  260  python3 from_tsdb\ _to_predict.py | jq
  261  python3 from_tsdb\ _to_predict.py
  262  cd ..
  263  ll
  264  cd ...
  265  cd ..
  266  cd
  267  ll
  268  cd Documents
  269  k
  270  ll
  271  cd Perso
  272  ll
  273  cd CDU
  274  ll
  275  cd Docto
  276  ll
  277  cd Divers
  278  ll
  279  cd ..
  280  cd Spec
  281  ll
  282  cd ../..
  283  ll
  284  cd 
  285  cd Dev
  286  ll
  287  cd Sante
  288  ll
  289  cd TestXML-Vidal
  290  ll
  291  cat TestXML.1.py
  292  python3 from_tsdb\ _to_predict.py
  293  cat TestXML.1.py
  294  python3 from_tsdb\ _to_predict.py
  295  python3 from_tsdb_to_predict.py
  296  ll
  297  python3 from_tsdb_to_predict.py
  298  seldon-core-microservice Models3 REST --log-level DEBUG
  299  python3 from_tsdb_to_predict.py
  300  pip3 update pip
  301  pip3 
  302  pip 
  303  pip3 install --update pip
  304  pip3 installpip
  305  pip3 install pip
  306  pip3 install pip3
  307  source ~/pon
  308  pip3 install pip3
  309  pip3 install pip
  310  pip list
  311  pip3 list
  312  pip3 install seldon-core
  313  pip3 install seldon-core--update
  314  pip3 install seldon-core --update
  315  cd
  316  ll
  317  cd temp
  318  ll
  319  cd tmp
  320  lll
  321  ll
  322  pip install seldon-core
  323  pip3 install seldon-core
  324  pip3 install seldon-core=0.4
  325  pip3 install --upgrade seldon-core
  326  source ~/pon
  327  pip3 install --upgrade seldon-core
  328  exit
  329  python3 from_tsdb_to_predict.py
  330  kubectl get sdep
  331  python3 from_tsdb_to_predict.py
  332  kubectl get sdep
  333  python3 from_tsdb_to_predict.py
  334  curl -g http://di-kubeflow-ambassador.service.sd.diod.tech/seldon/seldon/my-predict/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'\n\n
  335  curl -g http://di-diod-kubeflow.itn.intraorange/seldon/default/seldon/my-predict/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'\n\n
  336  curl -g http://di-diod-kubeflow.itn.intraorange/seldon/default/seldon/my-predict/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}' -v\n\n
  337  fish
  338  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
  339  curl -g https://di-diod-kubeflow.itn.intraorange/seldon/default/seldon/my-predict/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'\n\n
  340  source ~/poff
  341  curl -g https://di-diod-kubeflow.itn.intraorange/seldon/default/seldon/my-predict/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'\n\n
  342  curl -g https://di-diod-kubeflow.itn.intraorange/seldon/default/seldon/my-predict/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}' -v\n\n
  343  kubectl get sdep
  344  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
  345  curl -g https://di-diod-kubeflow.itn.intraorange/seldon/default/my-predict/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'
  346  python3 from_tsdb_to_predict.py
  347  curl -g https://di-diod-kubeflow.itn.intraorange:443/seldon/default/my-predict/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'
  348  python3 from_tsdb_to_predict.py
  349  curl -g https://di-diod-kubeflow.itn.intraorange/seldon/default/my-predict/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'
  350  python3 from_tsdb_to_predict.py
  351  kgp
  352  kgd
  353  klist
  354  k logs test-deployment-my-predict-5b3eeb2
  355  k logs dep/test-deployment-my-predict-5b3eeb2
  356  k logs deploy/test-deployment-my-predict-5b3eeb2
  357  k logs deploy/test-deployment-my-predict-5b3eeb2 -c classifier
  358  python3 from_tsdb_to_predict.py
  359  python3 load_inject.py
  360  python3 from_tsdb_to_predict.py
  361  k logs deploy/test-deployment-my-predict-5b3eeb2 -c classifier
  362  pwd
  363  ll
  364  cp test_s3 test_ts
  365  cp -R test_s3 test_ts
  366  ll
  367  cd test_ts
  368  ll
  369  cd src
  370  ll
  371  code .
  372  cd ..
  373  code .
  374  ll
  375  ./build_image.sh
  376  kaf deploy/inference.yaml
  377  kgp
  378  kgpw
  379  kubectl logs test-ts-my-predict-7b4c24e-7cff7c5bd7-jhlcz  
  380  kubectl logs test-ts-my-predict-7b4c24e-7cff7c5bd7-jhlcz  -c classifier
  381  kgd
  382  kubectl logs test-ts-my-predict-7b4c24e 
  383  kubectl logs deploy/test-ts-my-predict-7b4c24e -c classifier
  384  ./build_image.sh
  385  kaf deploy/inference.yaml
  386  ll
  387  kgd
  388  kubectl get sdep 
  389  kubectl delete sdep/my-test-ts 
  390  kubectl get sdep 
  391  kgd
  392  kubectl delete deploy/est-ts-my-predict-7b4c24e 
  393  kgd
  394  kaf deploy/inference.yaml
  395  kgd
  396  kgpw
  397  kubectl get sdep
  398  curl -g https://di-diod-kubeflow.itn.intraorange/seldon/default/my-test-ts/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'
  399  curl -g https://di-diod-kubeflow.itn.intraorange/seldon/default/my-test-ts/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 1],[4.652, 2]]}}'
  400  curl -g https://di-diod-kubeflow.itn.intraorange/seldon/default/my-test-ts/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 1],[4.652, 21]]}}'
  401  cd src
  402  python3 from_tsdb_to_predict.py
  403  kgd
  404  kubectl logs deploy/test-ts-my-predict-a8ee22c -c classifier
  405  python3 from_tsdb_to_predict.py
  406  kubectl logs deploy/test-ts-my-predict-a8ee22c -c classifier
  407  kubectl logs deploy/test-ts-my-predict-a8ee22c
  408  kubectl logs deploy/test-ts-my-predict-a8ee22c -s seldon-container-engine
  409  kubectl logs deploy/test-ts-my-predict-a8ee22c -c seldon-container-engine
  410  python3 from_tsdb_to_predict.py
  411  kubectl logs deploy/test-ts-my-predict-a8ee22c -c seldon-container-engine
  412  python3 from_tsdb_to_predict.py
  413  kubectl logs deploy/test-ts-my-predict-a8ee22c -c seldon-container-engine
  414  kaf deploy/inference.yaml
  415  kaf ../deploy/inference.yaml
  416  kgp
  417  kgd
  418  kgp
  419  kubectl logs pod/test-ts-my-predict-a8ee22c-8495c854c6-msxtl 
  420  kubectl logs pod/test-ts-my-predict-a8ee22c-8495c854c6-msxtl -c classifier
  421  python3 from_tsdb_to_predict.py
  422  kubectl logs pod/test-ts-my-predict-a8ee22c-8495c854c6-msxtl -c classifier
  423  python3 from_tsdb_to_predict.py
  424  kubectl logs pod/test-ts-my-predict-a8ee22c-8495c854c6-msxtl -c classifier
  425  kubectl logs pod/test-ts-my-predict-a8ee22c-8495c854c6-msxtl -c
  426  kubectl logs pod/test-ts-my-predict-a8ee22c-8495c854c6-msxtl
  427  kubectl logs pod/test-ts-my-predict-a8ee22c-8495c854c6-msxtl -c seldon-container-engine
  428  kubectl logs pod/test-ts-my-predict-a8ee22c-8495c854c6-msxtl -c seldon-container-engine -w
  429  kubectl logs pod/test-ts-my-predict-a8ee22c-8495c854c6-msxtl -c seldon-container-engine --tail=-1
  430  kubectl logs pod/test-ts-my-predict-a8ee22c-8495c854c6-msxtl -c seldon-container-engine --tail=0
  431  kubectl logs pod/test-ts-my-predict-a8ee22c-8495c854c6-msxtl -c seldon-container-engine --tail=100
  432  kubectl logs pod/test-ts-my-predict-a8ee22c-8495c854c6-msxtl -c seldon-container-engine -w
  433  kubectl logs pod/test-ts-my-predict-a8ee22c-8495c854c6-msxtl -c seldon-container-engine -f
  434  kubectl logs pod/test-ts-my-predict-a8ee22c-8495c854c6-msxtl -c seldon-container-engine --all-container -f
  435  kubectl logs pod/test-ts-my-predict-a8ee22c-8495c854c6-msxtl -c seldon-container-engine --all-container=True -f
  436  kubectl logs pod/test-ts-my-predict-a8ee22c-8495c854c6-msxtl -c seldon-container-engine --all-container=true -f
  437  kubectl logs pod/test-ts-my-predict-a8ee22c-8495c854c6-msxtl -c seldon-container-engine --all-containers=true -f
  438  kubectl logs pod/test-ts-my-predict-a8ee22c-8495c854c6-msxtl --all-containers=true -f
  439  ll
  440  pwd
  441  cd ..//../test_ts
  442  cd src
  443  python3 from_tsdb_to_predict.py
  444  kubectl logs pod/test-ts-my-predict-a8ee22c-8495c854c6-msxtl --all-containers=true -f
  445  python3 from_tsdb_to_predict.py
  446  kubectl logs pod/test-ts-my-predict-a8ee22c-8495c854c6-msxtl --all-containers=true -f
  447  python3 from_tsdb_to_predict.py
  448  cd ..
  449  cd ??
  450  cd ..
  451  grep -R -i tread *.py
  452  grep -R -i tread '*.py'
  453  grep --help
  454  grep -r -i tread .
  455  grep -r -i thread .
  456  python3 from_tsdb_to_predict.py
  457  seldon-core-microservice modelts REST --log-level DEBUG
  458  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"meta": {"tags": {"vs": "monvs36", "ts": "monts48"} }, "data": {"ndarray": [["data hour", 50,1,2]]}}'
  459  curl http://localhost:5000/predict -H "Content-Type: application/json" --data '{"meta": {"tags": {"vs": "monvs36", "ts": "monts48"} }, "data": {"ndarray": [[1213, 20],[23232,50]]}}'
  460  ll
  461  touch contract.json
  462  seldon-core-microservice-tester contract.json localhost 5000 
  463  seldon-core-microservice-tester contract.json localhost 5000 -p
  464  seldon-core-microservice-tester contract.json localhost 5000 -p -N 10
  465  seldon-core-microservice-tester contract.json localhost 5000 -p -n 10
  466  seldon-core-microservice-tester contract.json localhost 5000 -p -b 10
  467  seldon-core-microservice-tester contract1.json localhost 5000 -p -b 10
  468  seldon-core-api-tester contract.json di-diod-kubeflow.itn.intraorange 443 -p my-test-ts
  469  seldon-core-api-tester contract.json di-diod-kubeflow.itn.intraorange 443 -p 'my-test-ts'
  470  seldon-core-api-tester -p contract.json di-diod-kubeflow.itn.intraorange 443 'my-test-ts'
  471  seldon-core-api-tester -p contract.json https://di-diod-kubeflow.itn.intraorange 443 'my-test-ts'
  472  pip3 config list
  473  pip config list
  474  exit
  475  exit
  476  curl -g https://di-diod-kubeflow.itn.intraorange/seldon/default/my-test-ts/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'
  477  exit
  478  python3 load_inject.py
  479  code .
  480  python3 load_inject.py
  481  curl http://localhost:8086/debug/pprof/
  482  curl http://localhost:8086/debug/pprof/all?cpu=true
  483  curl 'http://localhost:8086/debug/pprof/all?cpu=true'
  484  curl 'http://localhost:8086/debug/vars' | jq
  485  python3 load_inject.py
  486  curl http://localhost:8086/api/v1/prom/write\?db\=prometheus 
  487  curl (http://localhost:8086/api/v1/prom/write?db=prometheus' 
  488  curl 'http://localhost:8086/api/v1/prom/write?db=prometheus' 
  489  curl 'http://localhost:8086/api/v1/prom/read?db=prometheus' 
  490  curl 'http://localhost:8086/api/v1/prom/read' 
  491  curl 'http://localhost:8086/api/v1/prom' 
  492  curl 'http://localhost:8086/api/v1/prom/metrics' 
  493  curl 'http://localhost:8086/api/v1/prom/metrics/' 
  494  curl 'http://localhost:8086/debug/vars' | jq
  495  curl 'http://localhost:8086/debug/vars' | jq > influx-stat.json
  496  curl 'http://localhost:8086/debug/vars' | jq '...[database=example]
  497  curl 'http://localhost:8086/debug/vars' | jq '...[database=example]'
  498  curl 'http://localhost:8086/debug/vars' | jq '.'
  499  curl 'http://localhost:8086/debug/vars' | jq '.[*].tags'
  500  jq
  501  jq '.' < influx-stat.json
  502  jq '.[*]' < influx-stat.json
  503  jq '[*]' < influx-stat.json
  504  jq '.[]' < influx-stat.json
  505  jq '.[]tags' < influx-stat.json
  506  jq '.[].tags' < influx-stat.json
  507  jq '.[].[tags]' < influx-stat.json
  508  jq '.[][tags]' < influx-stat.json
  509  jq '.[]["tags"]' < influx-stat.json
  510  jq '.[].tags' < influx-stat.json
  511  jq '.tags' < influx-stat.json
  512  ll
  513  cd ..///
  514  cd ../..
  515  cd kubeflow
  516  cd test_ts
  517  ll
  518  cd src
  519  ll
  520  python3 from_tsdb_to_predict.py
  521  kgp
  522  cd ..
  523  ll
  524  cd wassup
  525  ll
  526  cd ..
  527  ll
  528  find . -name inflx
  529  find . -name influx
  530  find . | grep influx
  531  cd install-de-di
  532  ll
  533  cd influxDB
  534  ll
  535  cd t
  536  cd testDB
  537  ll
  538  du . 
  539  du -k . 
  540  ll
  541  cd ..
  542  ll
  543  cd tick-charts
  544  l
  545  ll
  546  kubectl run 
  547  kubectl run tmp-shell --rm -i --tty --image pyhton -- bash
  548  kubectl run tmp-shell --rm -i --tty --image python -- bash
  549  kubectl delete pod/tmp-shell
  550  kubectl run tmp-shell --rm -i --tty --image python -- bash
  551  kgp
  552  kubectl delete deploy/tmp-shell
  553  kubectl run tmp-shell --rm -i --tty --image python -- bash
  554  kubectl delete deploy/tmp-shell
  555  kgp
  556  kubectl run tmp-shell --rm -i --tty --image python 
  557  kubectl run tmp-shell --rm -i --tty --image ubuntu
  558  kubectl run tmp-shell --rm -i --tty --image nicolaka/netshoot
  559  cat inject_data.py
  560  HTTP_PROXY=172.24.3.9:3128\nHTTPS_PROXY=172.24.3.9:3128\nNO_PROXY=localhost,cluster.local,192.168.0.0/16,172.16.0.0/12\n\nhttp_proxy=172.24.3.9:3128\nhttps_proxy=172.24.3.9:3128\nno_proxy=localhost,cluster.local,192.168.0.0/16,172.16.0.0/12\n\n
  561  exit
  562  cd ../..
  563  ll
  564  cd install-de-di
  565  cd influxDB/
  566  ll
  567  kubectl run tmp-shell --rm -i --tty --image nicolaka/netshoot
  568  cd ..
  569  code .
  570  curl -s https://api.github.com/repos/kubeflow/kubeflow/releases/latest
  571  curl -s https://api.github.com/repos/kubeflow/kubeflow/releases/latest -v
  572  source ~/pon
  573  curl -s https://api.github.com/repos/kubeflow/kubeflow/releases/latest -v
  574  curl -s https://api.github.com/repos/kubeflow/kubeflow/releases/latest 
  575  kubectl config view
  576  nslookup diod.tech.orange
  577  R
  578  conda
  579  kubectl get all -n istio-system
  580  source ~/poff
  581  kubectl get all -n istio-system
  582  ll
  583  cd 
  584  ll
  585  openssl req -new -key ~/.ssh/id_rsa -out osbi7352.csr -subj "/CN=osbi7352/O=test"
  586  ll
  587  mkdir .kube/rbac
  588  mv osbi7352.csr .kube/rbac
  589  cd .kube/rbac
  590  ll
  591  cat osbi7352.csr
  592  ll
  593  vi osbi7352-csr.cnf
  594  vi build-csr.sh
  595  ll ~/.ssh
  596  . ./build-csr.sh
  597  vi build-csr.sh
  598  . ./build-csr.sh
  599  ll
  600  ls -ltr
  601  cat osbi7352csr
  602  cat osbi7352.csr
  603  vi signrequest.yaml
  604  ll
  605  cat osbi7352.csr
  606  cat osbi7352.csr | base64 
  607  cat osbi7352.csr | base64 | tr -d '\n'
  608  vi signrequest.yaml
  609  cat signrequest.yaml
  610  kaf ./signrequest.yaml
  611  kubectl get scr
  612  kubectl get csr
  613  kubectl certificate approve osbi7352-csr
  614  kubectl get csr
  615  kubectl get csr osbi7352-csr 
  616  kubectl get csr osbi7352-csr -o yaml
  617  kubectl get csr osbi7352-csr -o jsonpath='{.status.certificate}'
  618  kubectl get crt osbi7352-csr -o jsonpath='{.status.certificate}'
  619  kubectl get csr
  620  kubectl certificate 
  621  kubectl certificate approve osbi7352-csr
  622  kubectl get csr
  623  kubectl get all -n kube-system
  624  kubectl describe crt osbi7352-csr
  625  kubectl describe csr osbi7352-csr
  626  kubectl get csr
  627  kubectl get all -n istio-system
  628  kubectl get svc/istio-ingressgateway -n istio-system
  629  kubectl get svc/istio-ingressgateway -n istio-system -o yaml
  630  kubectl describe svc/istio-ingressgateway -n istio-system
  631  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
  632  exit
  633  echo docker run -p 8086:8086 -v $PWD/testDB:/var/lib/influxdb influxdb >> start-influxdb.sh
  634  ll
  635  exit
  636  kubectl get all -n kube-system
  637  kubectl proxy
  638  kubectl get secrets -n kube-system kubernetes-dashboard-token-8rmq7 -o jsonpath='{.data.token}' | base64 -D
  639  kubectl get secrets -n kube-system
  640  kubectl get secrets --all-namespaces
  641  kubectl get secrets -n kubernetes-dashboard kubernetes-dashboard-token-2wkq5 -o jsonpath='{.data.token}' | base64 -D
  642  kubectl get secrets --all-namespaces
  643  kubectl get secrets -n kube-system
  644  kubectl get secrets -n kube-system admin-user-token-gljf5 -o jsonpath='{.data.token}' | base64 -D
  645  kubectl get pods --all-namespaces --field-selector 'status.phase==Failed' -o json | kubectl delete -f -
  646  kgs 
  647  kgs -n seldon
  648  kubectl get vs 
  649  kubectl get vs --all-namespaes
  650  kubectl get vs --all-namespaces
  651  kubectl get vs --all-namespaces grafana-prom -o yaml
  652  kubectl get vs -n seldon grafana-prom -o yaml
  653  kgs -n seldon
  654  helm 
  655  helm list
  656  cd Dev/kubeflow/install-de-di
  657  ll
  658  cd kubeflow-core
  659  ll
  660  helm upgrade --install seldon-core-analytics seldon/seldon-core-analytics -f conf_seldon/values-analytics.yaml --namespace seldon
  661  helm repo add seldon https://storage.googleapis.com/seldon-charts 
  662  source ~/pon
  663  helm repo add seldon https://storage.googleapis.com/seldon-charts 
  664  helm repo update
  665  helm upgrade --install seldon-core-analytics seldon/seldon-core-analytics -f conf_seldon/values-analytics.yaml --namespace seldon
  666  helm list
  667  helm delete seldon-core-a nalytics 
  668  helm delete seldon-core-analytics 
  669  helm upgrade --install seldon-core-analytics seldon/seldon-core-analytics -f conf_seldon/values-analytics.yaml --namespace seldon
  670  helm list
  671  helm repo add seldon https://storage.googleapis.com/seldon-charts 
  672  helm upgrade --install seldon-core-analytics seldon/seldon-core-analytics -f conf_seldon/values-analytics.yaml --namespace seldon
  673  helm upgrade 
  674  helm upgrade  --help
  675  helm upgrade seldon-core-analytics seldon/seldon-core-analytics -i -f conf_seldon/values-analytics.yaml --namespace seldon
  676  helm upgrade seldon-core-analytics seldon/seldon-core-analytics --install -f conf_seldon/values-analytics.yaml --namespace seldon
  677  helm delete seldon-core-analytics --purge
  678  helm upgrade seldon-core-analytics seldon/seldon-core-analytics --install -f conf_seldon/values-analytics.yaml --namespace seldon
  679  cd ../..
  680  ll
  681  cd test_ts
  682  ll
  683  cd test_service
  684  ll
  685  cat Test_service.py
  686  python3 Test_service.py
  687  cd ..
  688  ll
  689  cd ..
  690  ll
  691  cd ..
  692  ll
  693  cd influxDB
  694  ll
  695  cd ..
  696  cd kubeflow
  697  ll
  698  cd mon_
  699  cd mon_test_ES
  700  ll
  701  cd wassup
  702  ll
  703  cd ../
  704  ll
  705  cd data_wassup
  706  l
  707  cd ..
  708  ll
  709  cd ..
  710  ll
  711  cd test_s3
  712  ll
  713  cd ../..
  714  ll
  715  find . | grep influx
  716  cd install-de-di
  717  cd influxDB
  718  ll
  719  cd ..
  720  l
  721  cd kubeflow/install-de-di/influxDB
  722  ll
  723  cat start-influxdb.sh
  724  docker run -p 8086:8086 -v /Users/seb/Dev/kubeflow/install-de-di/influxDB/testDB:/var/lib/influxdb influxdb
  725  ll
  726  python3 Test_service.py
  727  cd ..
  728  ll
  729  cd src
  730  ll
  731  python from_tsdb_to_predict.py
  732  python3 from_tsdb_to_predict.py
  733  cd ../
  734  ll
  735  cd ../
  736  ll
  737  cd mon_test_ES
  738  ll
  739  cd data_wassup
  740  ll
  741  python3 load_inject.py
  742  python3 from_tsdb_to_predict.py
  743  cd ..
  744  ll
  745  cd test_service
  746  ll
  747  python3 Test_service.py
  748  python3 from_tsdb_to_predict.py
  749  kubectl get csr
  750  kubectl get event 
  751  ll
  752  cd ..
  753  lll
  754  ll
  755  pip3 install bandit
  756  source ~/pon
  757  pip3 install bandit
  758  bandit -r .
  759  kubectl get crd -n istio-system
  760  kubectl get crd -n istio-systemkubectl get crds | grep 'istio.io\|certmanager.k8s.io' | wc -l
  761  kubectl get crds | grep 'istio.io\|certmanager.k8s.io' | wc -l
  762  kubectl get crds | grep 'istio.io\|certmanager.k8s.io' 
  763  kubectl get crds -o wide | grep 'istio.io\|certmanager.k8s.io' 
  764  kubectl get crds -n istio-system -o wide | grep 'istio.io\|certmanager.k8s.io' 
  765  cd ..
  766  ll
  767  cd kubeflow
  768  mm
  769  ll
  770  cd ..
  771  ll
  772  cd ..
  773  find . | grep 'ks-install'
  774  cd Dev/kubeflow
  775  git clone git@gitlab.forge.orange-labs.fr:kubeflow/kf-install.git
  776  ll
  777  cd kf-install
  778  ll
  779  code .
  780  brew install derailed/k9s/k9s
  781  k9s
  782  k9s info
  783  k9s
  784  k9s -n all
  785  ll
  786  cd ../..
  787  ll
  788  cd kubeflow
  789  mkdir ci-templates
  790  cd ci-templates
  791  git clone git@gitlab.forge.orange-labs.fr:kubeflow/ci-templates/s2i.git
  792  ll
  793  code .
  794  cd ..
  795  mkdir tools
  796  ll
  797  mkdir git-rep
  798  ll
  799  cd git-rep
  800  ll
  801  cd tools
  802  ll
  803  git clone https://github.com/xrowgmbh/docker-s2i.git
  804  ll
  805  cd docker-s2i
  806  ll
  807  git
  808  git remote
  809  git remote -v show 
  810  git remote origin 
  811  git remote set-url origin git@gitlab.forge.orange-labs.fr:kubeflow/tools/build-container.git
  812  git remote origin 
  813  git remote -v show 
  814  git push
  815  git pull 
  816  git push --force
  817  cd ..
  818  ll
  819  ls -la
  820  git clone git@gitlab.forge.orange-labs.fr:kubeflow/tools/build-container.git
  821  cd build-container
  822  ll
  823  cat Dockerfile
  824  ll
  825  cat digicert.crt
  826  git commit -m "1st commit"
  827  git add *
  828  git commit -m "1st commit"
  829  cd ..
  830  ll
  831  rm -rf docker-s2i
  832  code .
  833  ll
  834  cd build-container
  835  ll
  836  docker build
  837  docker build .
  838  source ~/poff
  839  docker build .
  840  docket images
  841  docker images
  842  docker login dockerfactory-unstable-iva.si.francetelecom.fr --username AKCp5cbwjx3oT6t4xDnuQci5VfbYoPr7s5BEQ5UpfJbCuLu7kVCRJNK5NCXoauRJ8R3wLPB1y 
  843  docker login dockerfactory-unstable-iva.si.francetelecom.fr --username osbi7352
  844  docker build . -tag dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:unstable
  845  docker build -tag dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:unstable .
  846  docker build -t dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:unstable .
  847  docker push dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:unstable 
  848  docker images
  849  ll
  850  ll bin
  851  code .
  852  ll
  853  cat Dockerfile
  854  docker images
  855  docker run dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:unstable
  856  docker run dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:unstable ls
  857  docker run dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:unstable -- ls
  858  docker run dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:unstable -v -- ls 
  859  docker run dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:unstable -v -- bash
  860  docker run dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:unstable -v -- oc
  861  docker build -t dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.1 .
  862  docker run dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.1 -v -- oc
  863  docker run dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.1 -- oc
  864  docker run dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.1 oc
  865  docker build -t dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.2 .
  866  docker run dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.2 oc
  867  docker build -t dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.3 .
  868  docker run dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.3 oc
  869  docker build -t dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.4 .
  870  source ~/pon
  871  docker build -t dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.4 .
  872  docker build -t dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.4 --build-arg http_proxy="$http_proxy" --build-arg https_proxy="$https_proxy " --build-arg no_proxy="$no_proxy" . 
  873  ls /root/.docker
  874  env
  875  cd
  876  ll
  877  cat *
  878  docker config ls
  879  docker config
  880  docker config inspect
  881  docker config inspect config.json
  882  docker run dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.4 oc
  883  docker build -t dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 --build-arg http_proxy="$http_proxy" --build-arg https_proxy="$https_proxy " --build-arg no_proxy="$no_proxy" . 
  884  docker run dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 oc
  885  docker build -t dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 --build-arg http_proxy --build-arg https_proxy --build-arg no_proxy . 
  886  docker run dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 oc
  887  docker build -t dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 --build-arg http_proxy --build-arg https_proxy --build-arg no_proxy . 
  888  docker run dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 oc
  889  docker build -t dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 --build-arg http_proxy --build-arg https_proxy --build-arg no_proxy . 
  890  docker run dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 oc
  891  docker build -t dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 --build-arg http_proxy --build-arg https_proxy --build-arg no_proxy . 
  892  docker run dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 oc
  893  code ~/.docker/config.json
  894  docker build -t dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 . 
  895  ll ~..docker
  896  ll ~/.docker
  897  exit
  898  code ~/.pon
  899  code ~/pon
  900  ln -h
  901  code ~/poff
  902  ll
  903  cp config.json config.json.pon
  904  cp config.json config.json.poff
  905  rm -f config.json
  906  code config.json.pon
  907  code config.json.poff
  908  source ~/pon
  909  ll
  910  . ~/pon
  911  source ~/pon
  912  ll
  913  source ~/poff
  914  ln -h
  915  ln --help
  916  help ln
  917  ln -?
  918  ln ?
  919  man ln
  920  source ~/poff
  921  ll
  922  source ~/pon
  923  ll
  924  docker build -t dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 . 
  925  docker run dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 oc
  926  docker build -t dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 . 
  927  docker run dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 oc
  928  docker build -t dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 . 
  929  docker run dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 oc
  930  docker build -t dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 . 
  931  docker run dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 bash
  932  docker run it dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 bash
  933  docker run -it dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 bash
  934  docker build -t dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 . 
  935  chown --help
  936  man chown
  937  docker build -t dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 . 
  938  docker run -it dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 oc
  939  docker run -it dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 bash
  940  docker run -it dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 ls
  941  docker run -it dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 pwd
  942  docker build -t dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 . 
  943  docker run -it dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 pwd
  944  docker build -t dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 . 
  945  docker run -it dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 pwd
  946  docker build -t dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 . 
  947  docker run -it dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 pwd
  948  docker build -t dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 . 
  949  docker run -it dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 s2i 
  950  docker build -t dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 . 
  951  docker run -it dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 s2i 
  952  docker run -it dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/build-container:0.5 whoami
  953  kubectl ger csr
  954  kubectl get csr
  955  cd ../..
  956  ll
  957  cd test_s3
  958  ll
  959  git config
  960  git 
  961  git remote -v show 
  962  git push
  963  echo 1 2
  964  kubectl get svc/istio-ingressgateway -n istio-system -o yaml
  965  exit
  966  cd Documents
  967  ll
  968  brew install monetdb
  969  brew update R
  970  brew install  R
  971  cd .. 
  972  cd Downloads
  973  ll
  974  ls -ltr
  975  cp MonetDB-11.33.11-x86_64-Darwin-17-bin.tar.bz2 ../Documents/DSO/Support\ Formation/Jour\ 1/Lab-20190916
  976  sudo brew install monetdb
  977  brew install monetdb
  978  brew reinstall monetdb
  979  cd ../Documents
  980  cd DSO/Support\ Formation/Jour\ 1/Lab-20190916
  981  ll
  982  R script.R
  983  /Users/Shared/openvpn/MENU/TCPVPN ; exit;
  984  /Users/Shared/openvpn/MENU/INTVPN ; exit;
  985  cd /var/log
  986  ll
  987  tail -f system.log
  988  /Users/Shared/openvpn/MENU/TCPVPN ; exit;
  989  cd /Users/Shared
  990  cd openvpn
  991  ll
  992  cd MENU
  993  ll
  994  cat TCPVPN
  995  cat /usr/local/bin/orange-vpn-client
  996  cat /usr/local/bin/orange-vpn-clientsudo /usr/local/bin/orange-vpn-client -t -e
  997  sudo /usr/local/bin/orange-vpn-client -t -e -d
  998  sudo /usr/local/bin/orange-vpn-client -t -e -d 10
  999  cd /usr/local
 1000  ll
 1001  cd Cellar
 1002  ll
 1003  cd openssl
 1004  ll
 1005  cd 1.0.2r
 1006  ll
 1007  cd lib
 1008  ll
 1009  cd /usr/local/opt/openssl/lib
 1010  ll
 1011  ls -l
 1012  ls -la
 1013  ll
 1014  cd ../..
 1015  ll
 1016  cp 1.0.2r 1.0.2l
 1017  cp -r 1.0.2r 1.0.2l
 1018  ll
 1019  /Users/Shared/openvpn/MENU/TCPVPN ; exit;
 1020  kubectl certificate approve --help 
 1021  cd Dev/kubeflow
 1022  ll
 1023  cd install-de-di
 1024  ll
 1025  cd kubeflow-core/
 1026  ll
 1027  git push
 1028  c
 1029  dig diodlab.bigdata.intraorange
 1030  git push
 1031  kubectl run tmp-shell --rm -i --tty --image nicolaka/netshoot
 1032  source ~/pon
 1033  kubectl run tmp-shell --rm -i --tty --image nicolaka/netshoot
 1034  curl -s https://api.github.com/repos/kubeflow/kubeflow/releases/latest 
 1035  dig di-diod-kubeflow-cce-api.itn.intraorange
 1036  curl di-diod-kubeflow-cce-api.itn.intraorange
 1037  curl https://di-diod-kubeflow-cce-api.itn.intraorange -v
 1038  kubectl cluster-info
 1039  /Users/Shared/openvpn/MENU/TCPVPN ; exit;
 1040  kubectl cluster-info
 1041  kubectl run tmp-shell --rm -i --tty --image nicolaka/netshoot
 1042  kubectl get svc -n istio-system
 1043  exit
 1044  cd Dev/immo
 1045  ll
 1046  jupyter notebook
 1047  pip3 install ggplot
 1048  pip install ggplot
 1049  jupyter notebook
 1050  exit
 1051  exit
 1052  cd Dev/immo
 1053  ll
 1054  cd data
 1055  ll
 1056  head valeursfoncieres-2018.txt
 1057  cd ..
 1058  ll
 1059  jupyter notebook
 1060  pip install mathplotlib
 1061  pip install matplotlib
 1062  pip install pandas
 1063  cd
 1064  ll
 1065  cd pwd
 1066  pwd
 1067  cd /
 1068  ll
 1069  cd Library
 1070  ll
 1071  cd /
 1072  ll
 1073  cd /tmp
 1074  ll
 1075  cd /
 1076  find . -name ggplot
 1077  cd /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/
 1078  cd ggplot
 1079  ll
 1080  cd stats/
 1081  ll
 1082  vi smoothers.py
 1083  exit
 1084  vi /Users/seb/anaconda3/lib/python3.7/site-packages/ggplot/stats/smoothers.py
 1085  conda install -c conda-forge ggplot 
 1086  pip install --upgrade ggplot
 1087  pip3 install --upgrade ggplot
 1088  conda install --upgrade  ggplot 
 1089  conda install  ggplot 
 1090  conda
 1091  conda update
 1092  conda upgrade
 1093  conda update --prefix /Users/seb/anaconda3 anaconda
 1094  jupyter notebook
 1095  conda update --prefix /Users/seb/anaconda3 *
 1096  conda update --prefix /Users/seb/anaconda3 
 1097  conda update --prefix /Users/seb/anaconda3 anaconda3
 1098  conda update --prefix /Users/seb/anaconda3 anaconda
 1099  jupyter notebook
 1100  vi ~/anaconda3/lib/python3.7/site-packages/ggplot/utils.py
 1101  jupyter notebook
 1102  vi ~/anaconda3/lib/python3.7/site-packages/ggplot/stats/smoothers.py
 1103  vi ~/anaconda3/lib/python3.7/site-packages/ggplot/ggplot.py
 1104  jupyter notebook
 1105  vi ~/anaconda3/lib/python3.7/site-packages/ggplot/stats/stat_smooth.py
 1106  ll
 1107  grep -r sort  ~/anaconda3/lib/python3.7/site-packages/ggplot
 1108  jupyter notebook
 1109  vi ~/anaconda3/lib/python3.7/site-packages/ggplot/stats/stat_smooth.py
 1110  jupyter notebook
 1111  pip3 install --upgrade 'plotnine[all]'
 1112  conda install -c conda-forge plotnine
 1113  conda install plotnine
 1114  jupyter 
 1115  jupyter notebook
 1116  exit
 1117  cd Dev/immo
 1118  ll
 1119  jupyter notebook
 1120  ll
 1121  cd data
 1122  ll
 1123  cat valeursfoncieres-2014.txt
 1124  head valeursfoncieres-2018.txt
 1125  cd .././.
 1126  cd ..///
 1127  cd ../..
 1128  ll
 1129  cd Documents/
 1130  ll
 1131  d
 1132  cd Documents/
 1133  cd
 1134  cd Documents/DSO
 1135  cd Support\ Formation/Jour\ 5
 1136  ll
 1137  cd Accidents-20190920
 1138  git remote -v show 
 1139  git remote add 
 1140  git remote add origin https://github.com/daclave/datacamp1.git
 1141  git push
 1142  git branch
 1143  git push
 1144  git 
 1145  git branch
 1146  git branch list
 1147  git branch master 
 1148  git push
 1149  git push --set-upstream origin master
 1150  /Users/Shared/openvpn/MENU/TCPVPN ; exit;
 1151  exit
 1152  /Users/Shared/openvpn/MENU/TCPVPN ; exit;
 1153  cd /usr/lib
 1154  find . -name libeTPkcs11.dylib
 1155  find . -name '*TPk*'
 1156  cd /
 1157  find . -name '*TPk*'
 1158  cd Downloads
 1159  cd 
 1160  cd Downloads
 1161  ll -ltr
 1162  unzip SafeNetAuthenticationClient.10.1.44.0.dmg
 1163  cd 
 1164  ll
 1165  cd Desktop
 1166  ll
 1167  ls -la
 1168  cd /mnt
 1169  cd /Volumes
 1170  ll
 1171  cd SafeNet\ Authentication\ Client\ 10.1\ 
 1172  ll
 1173  unzip SafeNet\ Authentication\ Client\ 10.1\ .pkg /tmp
 1174  pkgutil --expand SafeNet\ Authentication\ Client\ 10.1\ .pkg /tmp/S
 1175  cd /tmp/S
 1176  ll
 1177  cd Resources
 1178  ll
 1179  cat en.lproj
 1180  cd en.lproj
 1181  ll
 1182  cd /Library/Frameworks/eToken.framework/Versions/
 1183  ll
 1184  cd A
 1185  ll
 1186  ls -la
 1187  cd ..
 1188  ll
 1189  cd ..
 1190  ll
 1191  cd etoken
 1192  cd etoken.pkg
 1193  ll
 1194  cd ..
 1195  tree
 1196  ll
 1197  /tmp/S/etoken.pkg/Scripts/preupgrade ; exit;
 1198  ls
 1199  l
 1200  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 1201  cd Dev
 1202  ll
 1203  cd kubeflow/
 1204  ll
 1205  cd install-de-di
 1206  ll
 1207  cd temp
 1208  ll
 1209  cd Dev/kubeflow
 1210  ll
 1211  cd kf-install
 1212  ll
 1213  code .
 1214  ll
 1215  cd ..
 1216  ll
 1217  cd mon_model
 1218  ll
 1219  cd mon-pipeline
 1220  ll
 1221  cd ../..
 1222  ll
 1223  cd Demo-CU
 1224  ll
 1225  code .
 1226  ll
 1227  git init
 1228  git remote add origin git@gitlab.forge.orange-labs.fr:kubeflow/demo-cu.git
 1229  git add .
 1230  git fetch
 1231  git push
 1232  git push --set-upstream origin master\n
 1233  ll
 1234  ls -la
 1235  cd .git
 1236  ll
 1237  cd ..
 1238  git remote
 1239  git remote delete origin
 1240  git remote remove  origin
 1241  git remote add origin https://gitlab.forge.orange-labs.fr/kubeflow/demo-cu.git
 1242  git commit -m "1st commit"
 1243  git push
 1244  git push --set-upstream origin master\n
 1245  git fetch 
 1246  git push --set-upstream origin master\n
 1247  git pull \n
 1248  git pull origin\n
 1249  git pull origin master \n
 1250  git
 1251  git branch
 1252  git show
 1253  ll
 1254  git remove
 1255  git rm
 1256  git rm --help
 1257  ll
 1258  ks -la
 1259  ls -la
 1260  rm -rm .git
 1261  rm -rf .git
 1262  ll
 1263  git clone git@gitlab.forge.orange-labs.fr:kubeflow/demo-cu.git
 1264  ll
 1265  cd ..
 1266  git clone git@gitlab.forge.orange-labs.fr:kubeflow/demo-cu.git
 1267  ll
 1268  git clone git@gitlab.forge.orange-labs.fr:kubeflow/demo-cu.git -f
 1269  ll
 1270  mv Demo-CU demo-cu2
 1271  git clone git@gitlab.forge.orange-labs.fr:kubeflow/demo-cu.git 
 1272  cd demo-cu
 1273  ll
 1274  git add .
 1275  ll
 1276  git show
 1277  ls -la
 1278  git add *
 1279  git commit -m "1st commit"
 1280  git push
 1281  \tgit rm --cached demo-cu
 1282  ll
 1283  git commit -m "remove cache"
 1284  git push
 1285  code ..
 1286  cd 1-\ train
 1287  ll
 1288  cd src
 1289  ls
 1290  python3 train.py
 1291  pwd
 1292  python3 train.py
 1293  python3 train.py --help
 1294  python3 train.py -p demo-cu -f modelcu.sav
 1295  source ~/pon
 1296  python3 train.py -p demo-cu -f modelcu.sav
 1297  LL
 1298  ll
 1299  cd ..
 1300  ll
 1301  cd -
 1302  cd 
 1303  cd Dev/kubeflow/demo-cu
 1304  ll
 1305  cd 1-\ train
 1306  ll
 1307  cd ..
 1308  cd 2-\ create\ container
 1309  ll
 1310  jupyter notebook
 1311  ll
 1312  cd src
 1313  ll
 1314  ls -la
 1315  ll
 1316  cd ..
 1317  ll
 1318  chmod 755 build-images.sh
 1319  ll
 1320  ./build_image.sh
 1321  ll
 1322  ./build_image.sh
 1323  sh ./build-images.sh
 1324  source ~/pon
 1325  sh ./build-images.sh
 1326  source ~/poff
 1327  sh ./build-images.sh
 1328  source ~/pon
 1329  curl google.fe
 1330  curl google.fr
 1331  source ~/poff
 1332  curl google.fe
 1333  curl google.fr
 1334  source ~/pon
 1335  curl google.fr
 1336  ll
 1337  source ~/pon
 1338  curl google.fr
 1339  source ~/pon
 1340  env
 1341  exit
 1342  vi ~/pon
 1343  source ~/pon
 1344  env
 1345  cat pon
 1346  vi ~/pon
 1347  source ~/pon
 1348  env
 1349  exit
 1350  vi pon
 1351  source ~/pon
 1352  env
 1353  curl google.fr
 1354  source ~/pon
 1355  vi pon
 1356  source ~/pon
 1357  curl google.fr
 1358  cd Dev
 1359  cd kubeflow
 1360  l
 1361  cd demo-cu
 1362  ll
 1363  cd 2-\ create\ container
 1364  ll
 1365  source ~/pon
 1366  sh build-images.sh
 1367  source ~/pon
 1368  env
 1369  sh build-images.sh
 1370  ll
 1371  docker images
 1372  ll
 1373  /Users/Shared/openvpn/MENU/TCPVPN ; exit;
 1374  cd Dev/kubeflow/demo-cu
 1375  ll
 1376  cd 2-\ create\ container
 1377  ll
 1378  cd src
 1379  ll
 1380  seldon-core-microservice model_cu REST
 1381  which seldon-core-microservice
 1382  conda
 1383  seldon-core-microservice --help
 1384  pip install seldon-core
 1385  pip3 install seldon-core
 1386  seldon-core-microservice model_cu REST
 1387  pip3 install flask
 1388  pip3 install flask_cors
 1389  conda install flask_cors
 1390  pip3 install flask-cors --upgrade
 1391  seldon-core-microservice model_cu REST
 1392  code ..
 1393  pip3 install -r requirements.txt
 1394  source ~/pon
 1395  pip3 install -r requirements.txt
 1396  seldon-core-microservice model_cu REST
 1397  pip3 install --update pip3 -r requirements.txt
 1398  conda install -r requirements.txt
 1399  ll
 1400  seldon-core-microservice model_cu REST
 1401  head /Users/seb/anaconda3/bin/seldon-core-microservice
 1402  conda
 1403  conda update 
 1404  source ~/pon
 1405  conda update 
 1406  source ~/poff
 1407  conda update 
 1408  conda update all
 1409  conda update 
 1410  conda update --prefix /Users/seb/anaconda3 anaconda
 1411  conda
 1412  conda list
 1413  seldon-core-microservice model_cu REST
 1414  pip3 install -r requirements.txt
 1415  seldon-core-microservice model_cu REST
 1416  pip3 install flask
 1417  pip3 install flask-core
 1418  pip install flask-core
 1419  pip install --upgrade pi
 1420  pipenv
 1421  conda
 1422  conda env
 1423  conda env list
 1424  conda install -r requirements.txt
 1425  conda install flask
 1426  conda install flask-flask
 1427  conda search flask
 1428  conda --version
 1429  conda update conda
 1430  conda env list
 1431  seldon-core-microservice model_cu REST
 1432  conda info 
 1433  conda info --env
 1434  python --version
 1435  seldon-core-microservice model_cu REST
 1436  which python
 1437  conda activate
 1438  conda activate base 
 1439  conda source 
 1440  conda info --envs
 1441  conda activate mlpipeline
 1442  conda init zsh
 1443  exit
 1444  cd Dev/kubeflow/demo-cu
 1445  cd 2-\ create\ container
 1446  ll
 1447  cd src/
 1448  ll
 1449  seldon-core-microservice model_cu REST
 1450  conda activate 
 1451  seldon-core-microservice model_cu REST
 1452  conda activate base
 1453  ll
 1454  seldon-core-microservice model_cu REST
 1455  ll
 1456  ls -ltr
 1457  ls -latr
 1458  s2i
 1459  s2i build 
 1460  ll
 1461  which seldon-core-microservice
 1462  vi /Users/seb/anaconda3/bin/seldon-core-microservice
 1463  seldon-core-microservice model_cu REST
 1464  pip install -U flask-cors
 1465  pip3 install -U flask-cors
 1466  seldon-core-microservice model_cu REST
 1467  seldon-core-microservice-tester contract.json 0.0.0.0 5000
 1468  ll
 1469  code ../../..
 1470  code ../..
 1471  cd ../tet
 1472  cd ../test
 1473  seldon-core-microservice-tester contract.json 0.0.0.0 5000
 1474  seldon-core-microservice-tester contract.json 0.0.0.0 5000 -v
 1475  seldon-core-microservice-tester contract.json 0.0.0.0 5000 -p
 1476  seldon-core-microservice model_cu REST
 1477  seldon-core-microservice-tester contract.json 0.0.0.0 5000 -p
 1478  seldon-core-microservice-tester contract.json 0.0.0.0 5000 
 1479  seldon-core-microservice-tester contract.json 0.0.0.0 5000 - 
 1480  seldon-core-microservice-tester contract.json 0.0.0.0 5000 -h
 1481  seldon-core-microservice-tester contract.json 0.0.0.0 5000 -p
 1482  seldon-core-microservice-tester contract.json 0.0.0.0 5000 -p -b 5
 1483  ll
 1484  cd ..
 1485  ll
 1486  sh ./build-images.sh
 1487  docker images
 1488  ll
 1489  docker run --name "model_cu" -d --rm -p 5000:5000 model_cu:1.0
 1490  docker images
 1491  docker run --name "model-cu" -d --rm -p 5000:5000 model-cu:1.0
 1492  docker 
 1493  docker container 
 1494  docker container ls
 1495  docker stop model-cu
 1496  docker container ls
 1497  docker run --name "model-cu" --rm -p 5000:5000 model-cu:1.0
 1498  cd ../test
 1499  seldon-core-microservice-tester contract.json 0.0.0.0 5000 -p -b 5
 1500  cd ../..
 1501  cd 3-\ deploy\ model
 1502  ll
 1503  docker run --name "model-cu" --rm --env-file env.list -p 5000:5000 model-cu:1.0
 1504  cd test/
 1505  ll
 1506  docker run --name "model-cu" --rm --env-file env.list -p 5000:5000 model-cu:1.0
 1507  cd ..
 1508  cd 2-\ create\ container
 1509  ll
 1510  sh ./build-images.sh
 1511  docker run --name "model-cu" --rm --env-file env.list -p 5000:5000 model-cu:1.0
 1512  source ~/poff
 1513  docker run --name "model-cu" --rm --env-file env.list -p 5000:5000 model-cu:1.0
 1514  sh ./build-images.sh
 1515  source ~/poff
 1516  sh ./build-images.sh
 1517  /Users/Shared/openvpn/MENU/TCPVPN ; exit;
 1518  sh ./build-images.sh
 1519  docker run --name "model-cu" --rm --env-file env.list -p 5000:5000 model-cu:1.0
 1520  source ~/pon
 1521  docker run --name "model-cu" --rm --env-file env.list -p 5000:5000 model-cu:1.0
 1522  sh ./build-images.sh
 1523  docker run --name "model-cu" --rm --env-file env.list -p 5000:5000 model-cu:1.0
 1524  sh ./build-images.sh
 1525  docker run --name "model-cu" --rm --env-file env.list -p 5000:5000 model-cu:1.0
 1526  cd test/
 1527  seldon-core-microservice-tester contract.json 0.0.0.0 5000 -p -b 5
 1528  seldon-core-microservice-tester contract.json 0.0.0.0 5000 -p 
 1529  sh ./build-images.sh
 1530  cd ..
 1531  sh ./build-images.sh
 1532  seldon-core-microservice-tester test/contract.json 0.0.0.0 5000 -p 
 1533  docker run --name "model-cu" --rm --env-file env.list -p 5000:5000 model-cu:1.0
 1534  docker run --name "model-cu" --rm --env-file test/env.list -p 5000:5000 model-cu:1.0
 1535  seldon-core-microservice-tester contract.json 0.0.0.0 5000 -p 
 1536  sh ./build-images.sh
 1537  docker run --name "model-cu" --rm --env-file test/env.list -p 5000:5000 model-cu:1.0
 1538  seldon-core-microservice-tester contract.json 0.0.0.0 5000 -p 
 1539  sh ./build-images.sh
 1540  docker run --name "model-cu" --rm --env-file test/env.list -p 5000:5000 model-cu:1.0
 1541  seldon-core-microservice-tester contract.json 0.0.0.0 5000 -p 
 1542  seldon-core-microservice-tester contract.json 0.0.0.0 5000 -p
 1543  sh ./build-images.sh
 1544  docker run --name "model-cu" --rm --env-file test/env.list -p 5000:5000 model-cu:1.0
 1545  seldon-core-microservice-tester contract.json 0.0.0.0 5000 -p
 1546  docker run --name "model-cu" --rm --env-file test/env.list -p 5000:5000 model-cu:1.0
 1547  seldon-core-microservice-tester contract.json 0.0.0.0 5000 -p
 1548  seldon-core-microservice-tester contract.json 0.0.0.0 5000 -p -b 6
 1549  sh ./build-images.sh
 1550  docker run --name "model-cu" --rm --env-file test/env.list -p 5000:5000 model-cu:1.0
 1551  seldon-core-microservice-tester contract.json 0.0.0.0 5000 -p -b 3
 1552  source ~/poff
 1553  seldon-core-microservice-tester contract.json 0.0.0.0 5000 -p -b 3
 1554  sh ./build-images.sh
 1555  docker run --name "model-cu" --rm --env-file test/env.list -p 5000:5000 model-cu:1.0
 1556  seldon-core-microservice-tester contract.json 0.0.0.0 5000 -p -b 3
 1557  cd 
 1558  cd Downloads
 1559  ls -ltr
 1560  cat modelcu.sav
 1561  cat model.sav
 1562  cd 
 1563  cd Dev
 1564  cd kubeflow
 1565  ll
 1566  cd mon_model
 1567  ll
 1568  cd
 1569  cd Dev/kubeflow/demo-cu
 1570  ll
 1571  cd 99-\ temp
 1572  ll
 1573  python3 test.py
 1574  ll
 1575  cat IrisClassifier.sav
 1576  python3 test2.py
 1577  python3 test.py
 1578  python3 test2.py
 1579  cd ../1-\ train
 1580  ll
 1581  python3 train.py -p demo-cu -f modelcu2.sav
 1582  source ~/pon
 1583  python3 train.py -p demo-cu -f modelcu2.sav
 1584  cd ../2-\ create\ container
 1585  ll
 1586  cd src/
 1587  cd ..
 1588  ll
 1589  sh ./build-images.sh
 1590  docker images
 1591  ll
 1592  seldon-core-microservice-tester contract.json 0.0.0.0 5000 -p -b 3
 1593  docker run --name "model-cu" --rm --env-file test/env.list -p 5000:5000 model-cu:1.0
 1594  seldon-core-microservice-tester contract.json 0.0.0.0 5000 -p -b 3
 1595  seldon-core-microservice-tester contract.json 0.0.0.0 5000 -b 3
 1596  seldon-core-microservice-tester contract.json 0.0.0.0 5000 -b 9
 1597  seldon-core-microservice-tester contract.json 0.0.0.0 5000 -b 9 -p
 1598  cd ..
 1599  ll
 1600  docker login dockerfactory-unstable-iva.si.francetelecom.fr --username osbi7352
 1601  sh ./build-images.sh
 1602  cd ..
 1603  cd 3-\ deploy\ model
 1604  ll
 1605  kubectl run tmp-shell --rm -i --tty --image nicolaka/netshoot
 1606  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 1607  kubectl run tmp-shell --rm -i --tty --image nicolaka/netshoot
 1608  ll
 1609  kubectl apply -f inference.yaml
 1610  kubectl get sdep
 1611  kubectl get sdep/model-cu
 1612  kubectl get sdep/model-cu -o yaml 
 1613  kubectl logs  sdep/model-cu 
 1614  kgp
 1615  kubectl logs pod/demo-cu-model-cu-af67851-74d5c58fc4-bjvfc 
 1616  kubectl logs pod/demo-cu-model-cu-af67851-74d5c58fc4-bjvfc -c classifier 
 1617  curl -g
 1618  curl -g https://di-diod-kubeflow.itn.intraorange/seldon/default/my-test-ts/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'
 1619  curl -g https://di-diod-kubeflow.itn.intraorange/seldon/default/model-cu/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'
 1620  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/default/model-cu/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'
 1621  seldon-core-api-tester --namespace default --endpoint predict contract.json di-diod-kubeflow.itn.intraorange 443 model-cu
 1622  ll
 1623  cd ..
 1624  ll
 1625  cd 4-\ request\ model
 1626  seldon-core-api-tester --namespace default --endpoint predict contract.json di-diod-kubeflow.itn.intraorange 443 model-cu
 1627  seldon-core-api-tester --namespace default --endpoint predict contract.json di-diod-kubeflow.itn.intraorange 443 model-cu -p
 1628  seldon-core-api-tester --namespace default --endpoint predict contract.json di-diod-kubeflow.itn.intraorange 443 model-cu -p --log-level DEBUG
 1629  seldon-core-api-tester --namespace default --endpoint predict contract.json https://di-diod-kubeflow.itn.intraorange 443 model-cu -p --log-level DEBUG
 1630  seldon-core-api-tester --namespace default --endpoint predict contract.json di-diod-kubeflow.itn.intraorange 443 model-cu -p --log-level DEBUG
 1631  seldon-core-api-tester --namespace default --endpoint predict contract.json https://di-diod-kubeflow.itn.intraorange 443 model-cu -p --log-level DEBUG
 1632  which seldon-core-api-tester
 1633  code /Users/seb/anaconda3/bin/seldon-core-api-tester
 1634  pip install -U seldon-core
 1635  source ~/pon
 1636  pip install -U seldon-core
 1637  seldon-core-api-tester --namespace default --endpoint predict contract.json https://di-diod-kubeflow.itn.intraorange 443 model-cu -p --log-level DEBUG
 1638  seldon-core-api-tester --namespace default --endpoint predict contract.json di-diod-kubeflow.itn.intraorange 443 model-cu -p --log-level DEBUG
 1639  ll
 1640  python3 Test_service.py
 1641  kubectl get pods
 1642  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/default/model-cu/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'
 1643  python3 Test_service.py
 1644  python3 Test_service.py\n
 1645  cd ../5-\ KPI
 1646  cd ../6-\ update\ model
 1647  ll
 1648  kubectl apply -f inference-abtest.yaml
 1649  lgp
 1650  kgp
 1651  kubectl delete -f inference-abtest.yaml
 1652  kgp
 1653  kubectl apply -f inference-abtest.yaml
 1654  kgp
 1655  cd ../4-\ request\ model
 1656  ll
 1657  python3 Test_service.py\n
 1658  cd ..
 1659  ll
 1660  cd 1-\ train
 1661  ll
 1662  python3 train.py -p demo-cu -f modelcu3.pkl
 1663  source ~/pon
 1664  python3 train.py -p demo-cu -f modelcu3.pkl
 1665  ll
 1666  cd ../2-\ create\ container
 1667  ll
 1668  cd src
 1669  ll
 1670  seldon-core-microservice model_cu REST
 1671  seldon-core-microservice-tester contract.json 0.0.0.0 5000 -p -b 3
 1672  cd ../test
 1673  seldon-core-microservice-tester contract.json 0.0.0.0 5000 -p -b 3
 1674  docker login dockerfactory-unstable-iva.si.francetelecom.fr --username osbi7352
 1675  cd ..
 1676  ll
 1677  sh build-images.sh
 1678  cd ../3-\ deploy\ model
 1679  kaf inference.yaml
 1680  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/default/model-cu/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'
 1681  kgp
 1682  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/default/model-cu/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'
 1683  kgp
 1684  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/default/model-cu/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'
 1685  /Users/Shared/openvpn/MENU/TCPVPN ; exit;
 1686  cd ../2
 1687  cd ../2-\ create\ container
 1688  ll
 1689  sh ./build_image.sh
 1690  ll
 1691  sh ./build_image.
 1692  \tc
 1693  ll
 1694  sh ./build-images.sh
 1695  kubectl get crd
 1696  kubectl get crd seldondeployments.machinelearning.seldon.io
 1697  kubectl get crd seldondeployments.machinelearning.seldon.io -o yaml 
 1698  cd ../..
 1699  cd ..
 1700  cd gitlab/indusgitlab
 1701  cd ..
 1702  ll
 1703  gitlab project list --all
 1704  python3 analyse-gitlab.py
 1705  pip3 install --upgrade python-gitlab
 1706  source ~/pon
 1707  pip3 install --upgrade python-gitlab
 1708  python3 analyse-gitlab.py
 1709  conda deactivate
 1710  python3 analyse-gitlab.py
 1711  python3 analyse-gitlab.py | jq
 1712  python3 analyse-gitlab.py
 1713  python3 analyse-gitlab.py > res.tsv
 1714  jupyter notebook
 1715  ll
 1716  jupyter notebook .
 1717  jupyter 
 1718  jupyter -h
 1719  jupyter lab
 1720  jupyter -h
 1721  jupyter run
 1722  cd 
 1723  cd Dev/gitlab
 1724  ll
 1725  pip3 install -U jupyter
 1726  source ~/pon
 1727  pip3 install -U jupyter
 1728  jupyter notebook
 1729  conda activate 
 1730  jupyter notebook
 1731  conda deactivate
 1732  jupyter notebook
 1733  conda update anaconda3
 1734  conda update
 1735  conda update -h
 1736  conda update Anaconda3
 1737  conda update conda
 1738  jupyter notebook
 1739  sudo jupyter notebook
 1740  sudo jupyter notebook --allow-root
 1741  conda install -c conda-forge jupyterlab
 1742  jupyter notebook
 1743  python3 -m pip install --upgrade pip
 1744  python3 -m pip install jupyter
 1745  jupyter notebook
 1746  jupyter kernelspec list
 1747  python3 -m jupyter kernelspec install-self
 1748  python3 -m IPython kernelspec install-self
 1749  pip install ipykernel
 1750  pip3 install ipykernel
 1751  pip install ipykernel --user
 1752  jupyter notebook
 1753  jupyter kernelspec list
 1754  head res.tsv
 1755  /Users/Shared/openvpn/MENU/TCPVPN ; exit;
 1756  cd Dev/gitlab
 1757  ll
 1758  python3 analyse-diolab.py
 1759  conda deactivate
 1760  python3 analyse-diolab.py
 1761  pip install --upgrade certifi
 1762  pip install --upgrade certifi --user
 1763  pip3 install --upgrade certifi
 1764  python3 analyse-diolab.py
 1765  open /Applications/Python\ 3.7/Install\ Certificates.command
 1766  /Applications/Python\ 3.7/Install\ Certificates.command ; exit;
 1767  python3 analyse-diolab.py
 1768  conda config --show ssl_verify
 1769  pip config list
 1770  pip3 config list
 1771  cd Dev/cert
 1772  cd 
 1773  cd cert
 1774  ll
 1775  openssl x509 -inform der -in Orange\ Internal\ G2\ Server\ CA.cer -out Orange\ Internal\ G2\ Server\ CA.pem
 1776  ll
 1777  env | sort
 1778  export REQUESTS_CA_BUNDLE
 1779  pwd
 1780  export REQUESTS_CA_BUNDLE=/Users/seb/cert/Orange\ Internal\ G2\ Server\ CA.pem
 1781  python3 analyse-diolab.py
 1782  env | sort
 1783  python3 analyse-diolab.py
 1784  ll
 1785  cd Dev/certcll
 1786  ll
 1787  mv Orange\ Internal\ G2\ Server\ CA.pem orange_g2.pem
 1788  ll
 1789  export REQUESTS_CA_BUNDLE=/Users/seb/cert/orange_g2.pem
 1790  python3 analyse-diolab.py
 1791  python3 analyse-diolab.py | tee diodlab.tsv
 1792  ipconfig
 1793  ifconfig
 1794  ping diodlab.itn.intraorange
 1795  exit
 1796  cd Dev/certcll
 1797  cd Dev
 1798  cd gitlab
 1799  ll
 1800  python3 analyse-diolab.py | tee diodlab.tsv
 1801  conda install gitlab
 1802  source ~/pon
 1803  conda install gitlab
 1804  conda deactivate
 1805  python3 analyse-diolab.py | tee diodlab.tsv
 1806  cd Dev/kubeflow/demo-cu
 1807  ll
 1808  cd 4-\ request\ model
 1809  ll
 1810  python3 Test_service.py
 1811  code ..
 1812  docker run -it dockerproxy-iva.si.francetelecom.fr/python:3.6
 1813  docker run -it dockerproxy-iva.si.francetelecom.fr/python:3.6 -- bash
 1814  docker run -it dockerproxy-iva.si.francetelecom.fr/python:3.6 bash
 1815  ll
 1816  python3 Test_service.py
 1817  helm list
 1818  kubectl get pods --all-namespaces
 1819  source ~/pon
 1820  kubectl get pods --all-namespaces
 1821  kubectl get pods --all-namespaces -v
 1822  kubectl get pods --all-namespaces
 1823  env | sort
 1824  ls ~/cert
 1825  cd ~/cert
 1826  ll 
 1827  cd -
 1828  export REQUESTS_CA_BUNDLE=/Users/seb/cert/orange_g2.pem
 1829  env | sort
 1830  ll
 1831  python3 analyse-diolab.py | tee diodlab.tsv
 1832  ll
 1833  cd ../6-\ update\ model
 1834  ll
 1835  kgp
 1836  env | sort
 1837  kubectl config
 1838  kubectl config view
 1839  cd  ~/.kub
 1840  cd  ~/.kube
 1841  ll
 1842  ls -ltr
 1843  vi config
 1844  kgp
 1845  ll
 1846  kubectl apply -f inference-abtest.yaml
 1847  kgp
 1848  cd ../4-\ request\ model
 1849  ll
 1850  python3 Test_service.py
 1851  find $HOME/.local/lib/python* -name cacert.pem
 1852  ls -la  ~
 1853  ls -la  ~/.local
 1854  ls /etc/ssl/certs
 1855  ls -la  /etc/ssl/certs
 1856  ls -la  /etc/ssl
 1857  cat   /etc/ssl/cert.pem
 1858  ls /usr/local/share/
 1859  ls -l /usr/local/share/
 1860  code .
 1861  ll
 1862  head res.tsv
 1863  python3 analyse-gitlab.py > res.tsv
 1864  source ~/pon
 1865  python3 analyse-gitlab.py > res.tsv
 1866  conda activate 
 1867  python3 analyse-gitlab.py > res.tsv
 1868  conda update conda
 1869  conda install gitlab
 1870  source ~/poff
 1871  conda install gitlab
 1872  source ~/pon
 1873  conda install gitlab
 1874  curl www.google.fr
 1875  pip install --upgrade gitlab
 1876  source ~/pon
 1877  pip install --upgrade gitlab
 1878  exit
 1879  pip install --upgrade gitlab
 1880  env
 1881  env | sort
 1882  pip install --upgrade gitlab
 1883  source ~/pon
 1884  env | sort
 1885  source ~/pon
 1886  pip install --upgrade gitlab
 1887  cd Dev/gitlab
 1888  python3 analyse-gitlab.py > res.tsv
 1889  pip install --upgrade python-gitlab
 1890  python3 analyse-gitlab.py > res.tsv
 1891  nc
 1892  wc res.tsv
 1893  wc -l res.tsv
 1894  ll
 1895  grep ubicode *
 1896  python3 analyse-gitlab.py
 1897  python3 analyse-gitlab.py > res2.tsv
 1898  wc -l res2.tsv
 1899  python3 analyse-diolab.py | tee diodlab.tsv
 1900  cd
 1901  cd anaconda3
 1902  ll
 1903  find . -name '*.pem'
 1904  find . -name '*.crt'
 1905  ls /etc/ssl/certs
 1906  certtool y k=login.keychain
 1907  certtool 
 1908  certtool y 
 1909  certtool 
 1910  certtool y k=login.keychain x=S
 1911  certtool 
 1912  certtool y k=login.keychain x=S o=toto.prem
 1913  certtool y k=login.keychain x=S 
 1914  certtool y k=login.keychain x=S > toto
 1915  ll
 1916  vi tot
 1917  vi toto
 1918  env | sort
 1919  cd
 1920  cd Dev/kubeflow/demo-cu
 1921  cd 4-\ request\ model
 1922  ll
 1923  python
 1924  python Test_service.py
 1925  find . -name cacert.pem
 1926  cat ./ssl/cacert.pem
 1927  for bundl in $(find . -name cacert.pem)  ; do\nls -l $bundl\ndone
 1928  for bundl in $(find . -name cacert.pem)  ; do\ncat /Users/seb/cert/orange_g2.pem >> $bundl\ndone
 1929  cd 
 1930  cd Dev/gitlab
 1931  python analyse-diolab.py
 1932  find . -name cacert.pem
 1933  cat /Users/seb/cert/orange_g2.pem
 1934  cat ssl/cert.pem
 1935  ll
 1936  cd ../6-\ update\ model
 1937  ll
 1938  kubectl apply -f inference-canary.yaml
 1939  kubectl get sdep
 1940  kubectl get sdep model-cu
 1941  kubectl describe  sdep model-cu 
 1942  cd
 1943  cd Dev/kubeflow/demo-cu
 1944  ll
 1945  cd 4-\ request\ model
 1946  ll
 1947  python Test_service.py
 1948  helm list
 1949  helm --help 
 1950  helm upgrade --help 
 1951  helm upgrade seldon-core-analytics seldon/seldon-core-analytics --install -f conf_seldon/values-analytics.yaml --namespace seldon --force 
 1952  cd ..
 1953  ll
 1954  cd ..
 1955  ll
 1956  cd ls -ltr
 1957  ls -ltr
 1958  cd git-rep
 1959  ll
 1960  cd ../kf-install
 1961  ll
 1962  cd ../install-de-di
 1963  ll
 1964  cd seldon-core
 1965  ll
 1966  cd ..
 1967  cd kubeflow-core
 1968  ll
 1969  helm upgrade seldon-core-analytics seldon/seldon-core-analytics --install -f conf_seldon/values-analytics.yaml --namespace seldon --force 
 1970  source ~/pon
 1971  helm upgrade seldon-core-analytics seldon/seldon-core-analytics --install -f conf_seldon/values-analytics.yaml --namespace seldon --force 
 1972  kgp -n seldon
 1973  cat conf_seldon/values-analytics.yaml
 1974  helm delete seldon-core-analytics --purge
 1975  kgp -n seldon
 1976  helm upgrade seldon-core-analytics seldon/seldon-core-analytics --install -f conf_seldon/values-analytics.yaml --namespace seldon 
 1977  kgp -n seldon
 1978  python Test_service.py
 1979  cd ..
 1980  cd 3-\ deploy\ model
 1981  ll
 1982  kaf inference.yaml
 1983  kubectl describe  sdep model-cu 
 1984  python Test_service.py
 1985  exit
 1986  ll
 1987  kaf inference-canary.yaml
 1988  cd ../2-\ create\ container
 1989  ll
 1990  vi build-images.sh
 1991  docker login dockerfactory-unstable-iva.si.francetelecom.fr --username osbi7352
 1992  sh build-images.sh
 1993  cd ../3-\ deploy\ model
 1994  ll
 1995  kaf inference.yaml
 1996  kubectl describe  sdep model-cu 
 1997  kubectl delete -f  inference.yaml
 1998  kubectl describe  sdep model-cu 
 1999  kaf inference.yaml
 2000  kubectl describe  sdep model-cu 
 2001  cd ../4-\ request\ model
 2002  python Test_service.py
 2003  exit
 2004  cd 
 2005  cd cert
 2006  ll
 2007  cat Groupe_France_Telecom_Root_CA.pem
 2008  cd ~/Dev/gitlab
 2009  ll
 2010  export REQUESTS_CA_BUNDLE=/Users/seb/cert/Groupe_France_Telecom_Root_CA.pem
 2011  python analyse-diolab.py
 2012  python Test_service.py
 2013  ll
 2014  python Test_service.py
 2015  export REQUESTS_CA_BUNDLE=/Users/seb/cert/Groupe_France_Telecom_Root_CA.pem
 2016  python Test_service.py
 2017  kaf inference-canary.yaml
 2018  kubectl describe  sdep model-cu 
 2019  python Test_service.py
 2020  kgp
 2021  kubectl describe  sdep model-cu 
 2022  python Test_service.py
 2023  ll
 2024  kubectl get sdep
 2025  kubectl delete  sdep/model-cu
 2026  kubectl get sdep
 2027  cd ..
 2028  ll
 2029  cd 2-\ create\ container
 2030  ll
 2031  sh build-images.sh
 2032  cd ../3-\ deploy\ model
 2033  ll
 2034  kaf inference.yaml
 2035  kubectl describe  sdep model-cu 
 2036  cd 1-\ train
 2037  cd ../1-\ train
 2038  cd ../2-\ create\ container
 2039  cd ../..
 2040  ll
 2041  cd demo-cu
 2042  ll
 2043  cd 4-\ request\ model
 2044  cd ../6-\ update\ model
 2045  ll
 2046  python Test_service.py
 2047  source ~/pon
 2048  python Test_service.py
 2049  export REQUESTS_CA_BUNDLE=/Users/seb/cert/Groupe_France_Telecom_Root_CA.pem
 2050  python Test_service.py
 2051  python Test_service.py -t 10 -i 10 -b 5 -s 1
 2052  python Test_service.py -t 1 -i 1 -b 5 -s 1
 2053  python Test_service.py -t 1 -i 100000 -b 5 -s 1
 2054  kubectl describe  sdep model-cu 
 2055  kaf inference-canary.yaml
 2056  kaf inference.yaml
 2057  python Test_service.py -t 1 -i 100000 -b 5 -s 1
 2058  kaf inference-canary.yaml
 2059  python Test_service.py -t 10 -i 100000 -b 50 -s 0
 2060  kaf inference.yaml
 2061  kubectl describe  sdep model-cu 
 2062  python Test_service.py -t 10 -i 100000 -b 50 -s 0
 2063  kubectl describe  sdep model-cu 
 2064  python Test_service.py -t 10 -i 100000 -b 50 -s 0
 2065  python Test_service.py -t 1 -i 100000 -b 50 -s 0
 2066  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/default/model-cu/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'
 2067  python Test_service.py -t 1 -i 100000 -b 50 -s 0
 2068  python Test_service.py -t 10 -i 100000 -b 50 -s 0
 2069  python Test_service.py -t 1 -i 100000 -b 50 -s 0
 2070  export REQUESTS_CA_BUNDLE=/Users/seb/cert/Groupe_France_Telecom_Root_CA.pem
 2071  python Test_service.py -t 1 -i 100000 -b 50 -s 0
 2072  python Test_service.py -t 1 -i 100000 -b 50 -s 0 -v
 2073  python Test_service.py -t 1 -i 2 -b 50 -s 0 -v
 2074  python Test_service.py -t 1 -i 2 -b 1 -s 0 -v
 2075  source ~/poff
 2076  python Test_service.py -t 1 -i 2 -b 1 -s 0 -v
 2077  python Test_service.py -t 1 -i 2 -b 1 -s 0 
 2078  python Test_service.py -t 10 -i 10000 -b 5 -s 0 
 2079  kaf inference-canary.yaml
 2080  kubectl describe  sdep model-cu 
 2081  kaf inference.yaml
 2082  kaf inference-canary.yaml
 2083  cd Dev/gitlab
 2084  ll
 2085  tail res2.tsv
 2086  export REQUESTS_CA_BUNDLE=/Users/seb/cert/Groupe_France_Telecom_Root_CA.pem
 2087  python analyse-diolab.py > resd.tsv
 2088  head resd.tsv
 2089  code .
 2090  python analyse-diolab.py > resd.tsv
 2091  python analyse-diolab.py 
 2092  python analyse-diolab.py > resd.tsv
 2093  ll
 2094  cat res2.tsv resd.tsv > res.tsv
 2095  ll
 2096  code ..
 2097  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/default/model-cu/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'\n\n
 2098  python Test_service.py -t 10 -i 10000 -b 5 -s 0 
 2099  kaf inference.yaml
 2100  sh build-images.sh
 2101  grep 'cristian.raita@orange.com' *
 2102  exit
 2103  cd ../5-\ KPI
 2104  ll
 2105  touch rinst_seldon_analytics.sh
 2106  helm delete seldon-core-analytics --purge
 2107  sleep 2
 2108  ls /Users/seb/Dev/kubeflow/install-de-di
 2109  ll /Users/seb/Dev/kubeflow/install-de-di
 2110  ll /Users/seb/Dev/kubeflow/install-de-di/seldon-core
 2111  ll /Users/seb/Dev/kubeflow/install-de-di/kubeflow-core
 2112  sh ./rinst_seldon_analytics.sh
 2113  helm lsit
 2114  helm list
 2115  export seldon_rep= /Users/seb/Dev/kubeflow/install-de-di/kubeflow-core
 2116  export seldon_rep=/Users/seb/Dev/kubeflow/install-de-di/kubeflow-core
 2117  sh ./rinst_seldon_analytics.sh
 2118  ll $seldon_rep
 2119  ll $seldon_rep/conf_seldon
 2120  sh ./rinst_seldon_analytics.sh
 2121  ll
 2122  kubectl get sdep 
 2123  python Test_service.py -h
 2124  python Test_service.py -t 10 -i 10000 -b 5 -s 0 
 2125  python Test_service.py -t 10 -i 10000 -b 50 -s 20
 2126  python Test_service.py -t 100 -i 10000 -b 5000 -s 20
 2127  python Test_service.py -t 100 -i 10000 -b 50000 -s 20
 2128  python Test_service.py -t 10 -i 10000 -b 50000 -s 20
 2129  kubectl get sdep 
 2130  kubectl get podes
 2131  kubectl get pods
 2132  kubectl delete pods --field-selector=status.phase!=Running
 2133  kubectl get pods
 2134  python Test_service.py -t 10 -i 10000 -b 5000 -s 20
 2135  cd ../7-\ autoscale
 2136  ll
 2137  kaf inference-autoscale.yaml
 2138  kubectl get pods
 2139  kubectl describe  sdep model-cu 
 2140  kaf inference-autoscale.yaml
 2141  kubectl describe  sdep model-cu 
 2142  python Test_service.py -t 10 -i 10000 -b 10000 -s 20
 2143  kubectl describe  sdep model-cu 
 2144  kgp
 2145  kaf inference-autoscale.yaml
 2146  kubectl describe  sdep model-cu 
 2147  kgp
 2148  kubectl describe  sdep model-cu 
 2149  kgp
 2150  kubectl describe  sdep model-cu 
 2151  python Test_service.py -t 10 -i 10000 -b 7000 -s 20
 2152  kubectl describe  sdep model-cu 
 2153  kgp
 2154  kubectl describe  sdep model-cu 
 2155  kgp
 2156  cd ../1-\ train
 2157  ll
 2158  source ~/pon
 2159  python train.py
 2160  python train.py -p kubeflo
 2161  python train.py -p demo-cu c
 2162  python3 train.py -p demo-cu -f modelcu2.sav
 2163  python3 train.py -p demo-cu -f modelcu3.sav
 2164  seldon-core-microservice model_cu REST
 2165  cd src
 2166  seldon-core-microservice model_cu REST
 2167  cd ..
 2168  ll
 2169  cd test
 2170  ll
 2171  seldon-core-microservice-tester contract.json 0.0.0.0 5000 -p
 2172  docker login dockerfactory-unstable-iva.si.francetelecom.fr --username osbi7352
 2173  cd ..
 2174  sh build-images.sh
 2175  docker run --name "model-cu" --rm --env-file env.list -p 5000:5000 model-cu:1.0
 2176  cd test
 2177  docker run --name "model-cu" --rm --env-file env.list -p 5000:5000 model-cu:1.0
 2178  cc
 2179  cd ..
 2180  cd test
 2181  docker run --name "model-cu" --rm --env-file env.list -p 5000:5000 model-cu:1.0
 2182  cd ../test
 2183  ll
 2184  seldon-core-microservice-tester contract.json 0.0.0.0 5000 -p
 2185  kubectl describe  sdep 
 2186  kubectl get  sdep 
 2187  kubectl delete sdep model-cu
 2188  kubectl get  sdep 
 2189  kubectl apply -f inference.yaml
 2190  kubectl get  sdep 
 2191  kubectl describe  sdep model-cu 
 2192  kgp
 2193  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/default/model-cu/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'
 2194  python Test_service.py -t 5 -i 10 -b 5 
 2195  python Test_service.py -t 5 -i 100 -b 50 
 2196  python Test_service.py -t 5 -i 1000 -b 50 
 2197  cd ..
 2198  sh build-images.sh
 2199  kubectl apply -f inference-canary.yaml
 2200  kubectl describe  sdep model-cu 
 2201  python Test_service.py -t 5 -i 1000 -b 50 
 2202  ll
 2203  kubectl apply -f inference.yaml
 2204  kubectl describe  sdep model-cu 
 2205  ll
 2206  kubectl apply -f inference-autoscale.yaml
 2207  kubectl describe  sdep model-cu 
 2208  python Test_service.py -t 5 -i 1000 -b 5000
 2209  kubectl describe  sdep model-cu 
 2210  kubectl describe  sdep model-cu -o json 
 2211  kubectl get  sdep model-cu -o json 
 2212  ll
 2213  kubectl describe  sdep model-cu 
 2214  ll
 2215  python3 train.py -p demo-cu -f modelcu3.sav
 2216  curl https://kubeflow.oss.eu-west-0.prod-cloud-ocb.orange-business.com/demo-cu/modelcu3.sav
 2217  kubectl get secret
 2218  kubectl get secret s3-secret-854mk4hk62 -o yaml 
 2219  ll
 2220  kubectl get pods --all-namespaces
 2221  kubectl get services  --all-namespaces
 2222  python Test_service.py -t 5 -i 1000 -b 50
 2223  python Test_service.py -t 10 -i 1000 -b 5
 2224  clear
 2225  prometheus
 2226  clear
 2227  ll
 2228  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/default/model-cu/api/v0.1/predictions \\n     -H "Content-Type: application/json" \\n     --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'\n
 2229  python Test_service.py -t 10 -i 1000 -b 5
 2230  cd Dev/temp
 2231  ll
 2232  python tf.py
 2233  conda update
 2234  conda update --prefix /Users/seb/anaconda3 anaconda
 2235  jupyter notebook
 2236  conda list
 2237  conda list minrk
 2238  pip install notebook==6.0.1
 2239  conda install notebook==6.0.1
 2240  source ~/pon
 2241  conda install notebook==6.0.1
 2242  jupyter notebook
 2243  ll
 2244  cd Dev/gitlab
 2245  ll
 2246  jupyter notebook
 2247  r
 2248  jupyter notebook
 2249  r 
 2250  jupyter notebook
 2251  cd 
 2252  vi .Renviron
 2253  cat ~/pon
 2254  jupyter kernelspec
 2255  jupyter kernelspec list
 2256  jupyter kernelspec --version
 2257  jupyter kernelspec isntall 
 2258  jupyter kernelspec install 
 2259  R 
 2260  jupyter notebook
 2261  cd Dev/gitlab
 2262  ll
 2263  jupyter notebook
 2264  cd
 2265  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 2266  protoc
 2267  brew install protobuf
 2268  source ~/pon
 2269  brew install protobuf
 2270  protoc
 2271  protoc --encode
 2272  docker run -p 8080:8080 mltooling/ml-workspace-light:latest
 2273  cd Dev/kubeflow
 2274  ll
 2275  cd kubeflow
 2276  ll
 2277  cd ../
 2278  ll
 2279  mkdir test_kfctl
 2280  cd test_
 2281  cd test_k
 2282  cd test_kfctl
 2283  ll
 2284  pwd
 2285  mv ~/Downloads/kfctl_v0.6.2_darwin.tar.gz .
 2286  ll
 2287  unzip kfctl_v0.6.2_darwin.tar.gz
 2288  tar -zvxf  kfctl_v0.6.2_darwin.tar.gz
 2289  ll
 2290  which kfctl
 2291  cp kfctl /usr/local/bin 
 2292  kfctl 
 2293  kfctl --version 
 2294  kfctl version 
 2295  export KFAPP="kubeflow"
 2296  export CONFIG="/Users/seb/Dev/kubeflow/install-de-di/kubeflow-core/conf_kubeflow/kfctl_k8s_istio.yaml"
 2297  kfctl init ${KFAPP} --config=${CONFIG} -V
 2298  ll
 2299  cd kubeflow
 2300  ll
 2301  ls -la
 2302  cd .cache
 2303  ll
 2304  cd manifests
 2305  ll
 2306  cd manifests-0.6.2
 2307  ll
 2308  kustomize 
 2309  kubectl get storageclass
 2310  ll
 2311  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 2312  kgp
 2313  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/default/model-cu/api/v0.1/predictions \\n     -H "Content-Type: application/json" \\n     --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'\n
 2314  brew install kustomize
 2315  source ~/pon
 2316  brew install kustomize
 2317  ll
 2318  cd ../..
 2319  ll
 2320  cd ..
 2321  ll
 2322  kustomize
 2323  kustomize config
 2324  kustomize build
 2325  ll
 2326  kustomize build app.yaml
 2327  ll
 2328  cd ..
 2329  ll
 2330  kfctl init --help 
 2331  cat CONFIG
 2332  export CONFIG="/Users/seb/Dev/kubeflow/install-de-di/kubeflow-core/conf_kubeflow/kfctl_k8s_istio.yaml"
 2333  cat CONFIG
 2334  kfctl delete all -V
 2335  cd kubeflow
 2336  kfctl delete all -V
 2337  ll
 2338  cd ..
 2339  ll
 2340  rm -rf kubeflow
 2341  ll
 2342  env
 2343  cat /Users/seb/Dev/kubeflow/install-de-di/kubeflow-core/conf_kubeflow/kfctl_k8s_istio.yaml
 2344  env
 2345  cat $CONFIG
 2346  ll
 2347  kfctl init ${KFAPP} --config ${CONFIG}
 2348  ll
 2349  cd kubeflow
 2350  ll
 2351  cat app.yaml
 2352  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 2353  ll
 2354  ls
 2355  cd ../
 2356  ll
 2357  pwd
 2358  cd -
 2359  cd Dev/kubeflow
 2360  ll
 2361  cd 
 2362  cd Dev
 2363  ll
 2364  cd kubeflow
 2365  ll
 2366  cd test_kfctl
 2367  ll
 2368  cd kubeflow
 2369  ll
 2370  cd
 2371  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 2372  ll
 2373  kfctl generate all -V
 2374  ll
 2375  cd kustomize
 2376  ll
 2377  cd istio
 2378  cd ../istio-install
 2379  ll
 2380  kustomize build
 2381  kustomize build --help
 2382  ll
 2383  kustomize build overlays/application
 2384  kustomize build overlays/my_overlay
 2385  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 2386  ll
 2387  cd ../..
 2388  ll
 2389  kfctl generate all -V
 2390  cd
 2391  cd Dev
 2392  ll
 2393  cd temp
 2394  ll
 2395  mkdir kfctl 
 2396  cd kfctl
 2397  ll
 2398  git clone https://github.com/kubeflow/kfctl.git
 2399  ll
 2400  cd kfctl
 2401  ll
 2402  make 
 2403  ll
 2404  code .
 2405  make build-kfctl
 2406  source ~/pon
 2407  make build-kfctl
 2408  ${GO}
 2409  echo ${GO}
 2410  go
 2411  make deepcopy
 2412  ll
 2413  make deepcopy
 2414  ll
 2415  ls -ltr
 2416  make generate
 2417  make build-kfctl
 2418  ll ..
 2419  ll
 2420  make
 2421  source ~/poff
 2422  make build-kfctl
 2423  make
 2424  make build-kfctl
 2425  ll
 2426  cd ..
 2427  ll
 2428  git clone https://github.com/kubeflow/kubeflow.git
 2429  cd kfctl
 2430  make build-kfctl
 2431  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 2432  ll
 2433  cd ..
 2434  cd kubeflow/
 2435  ll
 2436  rm -rf test_kfctl
 2437  cd kf-install
 2438  ll
 2439  cd .. 
 2440  cd install-de-di
 2441  ll
 2442  cd kubeflow-core
 2443  ll
 2444  cd conf_kubeflow
 2445  ll
 2446  cd /Users/seb/Dev/kubeflow/test_kfctl
 2447  cd ../..
 2448  ll
 2449  cd ..
 2450  ll
 2451  mkdir kfctl
 2452  mv kfctl test_kfctl
 2453  ll
 2454  cd test_kfctl
 2455  ll
 2456  export KFAPP="kubeflow"
 2457  export CONFIG="https://raw.githubusercontent.com/kubeflow/kubeflow/v0.6-branch/bootstrap/config/kfctl_k8s_istio.0.6.2.yaml"\n
 2458  source ~/pon
 2459  kfctl init ${KFAPP} --config=${CONFIG} -V
 2460  ll
 2461  ls -la
 2462  cd kubeflow
 2463  ls -la
 2464  cat app.yaml
 2465  cd cd ${KFAPP}
 2466  cd ${KFAPP}
 2467  kfctl generate all -V
 2468  ll
 2469  cd Dev
 2470  ll
 2471  cd kubeflow/install-de-di
 2472  ll
 2473  cd kubeflow-core
 2474  ll
 2475  cd conf_kubeflow
 2476  ll
 2477  cd my_overlays
 2478  ll
 2479  scp ./ diod@172.24.137.169+SSH+osbi7352@diodbastion-qualif.bigdata.intraorange:/tmp
 2480  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 2481  scp . diod@172.24.137.169+SSH+osbi7352@diodbastion-qualif.bigdata.intraorange:/tmp
 2482  ll
 2483  c d..
 2484  cd ..
 2485  ll
 2486  scp my_overlays diod@172.24.137.169+SSH+osbi7352@diodbastion-qualif.bigdata.intraorange:/tmp
 2487  scp -r my_overlays diod@172.24.137.169+SSH+osbi7352@diodbastion-qualif.bigdata.intraorange:/tmp
 2488  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 2489  ll
 2490  pwd
 2491  ls -la
 2492  ll
 2493  cd ..
 2494  ll
 2495  cd kubeflow
 2496  ll
 2497  cd ../..
 2498  ll
 2499  cd install-de-di
 2500  ll
 2501  cd kubeflow-core
 2502  ll
 2503  cd conf_kubeflow
 2504  ll
 2505  cd my_overlays
 2506  ll
 2507  scp -r * diod@172.24.137.169+SSH+osbi7352@diodbastion-qualif.bigdata.intraorange:/home/diod/test_install_kf/kubeflow/kustomize
 2508  ll
 2509  cd istio
 2510  ll
 2511  mv . ..
 2512  mv istio-install ..
 2513  ll
 2514  cd ..
 2515  ll
 2516  rm -f istio
 2517  rm -rf istio
 2518  ll
 2519  scp -r * diod@172.24.137.169+SSH+osbi7352@diodbastion-qualif.bigdata.intraorange:/home/diod/test_install_kf/kubeflow/kustomize
 2520  kubectl get services -n istio-system istio-ingressgateway -o yaml
 2521  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 2522  ll
 2523  scp -r * diod@172.24.137.169+SSH+osbi7352@diodbastion-qualif.bigdata.intraorange:/home/diod/test_install_kf/kubeflow/kustomize
 2524  ll
 2525  ls -la
 2526  rm -rf *
 2527  ll
 2528  kfctl init ${KFAPP} --config=${CONFIG} -V
 2529  ll
 2530  ls -la
 2531  rm -rf *
 2532  env | sort
 2533  env | sor
 2534  sort
 2535  env | sort
 2536  pwd /Users/seb/Dev/kubeflow/install-de-di/kubeflow-core/conf_kubeflow/
 2537  ll /Users/seb/Dev/kubeflow/install-de-di/kubeflow-core/conf_kubeflow/
 2538  export CONFIG="/Users/seb/Dev/kubeflow/install-de-di/kubeflow-core/conf_kubeflow/kfctl_k8s_istio.yaml"
 2539  kfctl init ${KFAPP} --config=${CONFIG} -V
 2540  ll
 2541  kfctl generate k8s -V
 2542  cd kubeflow
 2543  ll
 2544  kfctl generate k8s -V
 2545  ll
 2546  vi app.yaml
 2547  ll kustomize/istio-install
 2548  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 2549  ll
 2550  curl -s https://api.github.com/repos/kubeflow/kubeflow/releases/latest | grep browser_download | grep linux | cut -d '"' -f 4 | xargs curl -O -L && tar -zvxf kfctl_*_linux.tar.gz 
 2551  ll
 2552  rm -f kfctl
 2553  rm -f kfctl_v0.6.2_linux.tar.gz
 2554  curl -s https://api.github.com/repos/kubeflow/kubeflow/releases/latest 
 2555  curl https://api.github.com/repos/kubeflow/kubeflow/releases/latest 
 2556  /Users/Shared/openvpn/MENU/TCPVPN ; exit;
 2557  which kfctl
 2558  cat /usr/loca/bin/kfctl
 2559  cat /usr/local/bin/kfctl
 2560  1;2c1;2c1;2c1;2c1;2c1;2c1;2c1;2c1;2c1;2c
 2561  head
 2562  head --help 
 2563  kfctl version
 2564  kubectl get storageclass
 2565  kubectl get storageclass sata -o yaml
 2566  kubectl get storageclass  -o=jsonpath='{.metadata.annotations}'
 2567  kubectl get storageclass  -o=jsonpath='{.}'
 2568  kubectl get storageclass  -o=jsonpath='{@}'
 2569  kubectl get storageclass  -o=jsonpath='{@}' | jq
 2570  kubectl get storageclass  -o=jsonpath='{}'
 2571  kubectl get storageclass  -o=jsonpath='{.item}'
 2572  kubectl get storageclass  -o=jsonpath='{range .items[*]}{.metadata}}'
 2573  kubectl get storageclass  -o=jsonpath='{range .items[*]}{.metadata.annotation}}'
 2574  kubectl get storageclass  -o=jsonpath='{range .items[*]}{.metadata.annotations}}'
 2575  kubectl get storageclass  -o=jsonpath='{range .items[*]}{.metadata.annotations}{\n}}'
 2576  kubectl get storageclass  -o=jsonpath='{range .items[*]}{.metadata.annotations}{"\n"}}'
 2577  kubectl patch storageclass sas -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}'
 2578  kubectl get storageclass  -o=jsonpath='{range .items[*]}{.metadata.annotations}{"\n"}}'
 2579  curl -s https://api.github.com/repos/kubeflow/kubeflow/releases/latest | grep browser_download | grep linux | cut -d '"' -f 4 | xargs curl -O -L && tar -zvxf kfctl_*_linux.tar.gz
 2580  head kfctl
 2581  ./kfctl
 2582  docker run -it dockerfactory-iva.si.francetelecom.fr/diod-cardinal-services/diod-docker-ci_cd:1.2
 2583  docker run -it dockerfactory-iva.si.francetelecom.fr/diod-cardinal-services/diod-docker-ci_cd:1.2 bash
 2584  docker container ls
 2585  docker run -it ubuntu bash
 2586  cat ~/pon
 2587  docker run -it alpine bash
 2588  docker run -it alpine sh
 2589  docker run -it dockerfactory-iva.si.francetelecom.fr/diod-cardinal-services/diod-docker-ci_cd:1.2 bash
 2590  kubectl get storageclass 
 2591  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 2592  ssh gw
 2593  cd
 2594  cd Dev/gitlab/
 2595  ll
 2596  jupyter notebook
 2597  exit
 2598  ll
 2599  kubectl get storageclass 
 2600  cd ../..
 2601  ll
 2602  cd ../
 2603  ll
 2604  cd temp
 2605  ll
 2606  mkdir pvc
 2607  cd pvc
 2608  ll
 2609  kaf test_pvc.yaml
 2610  kgp
 2611  kgp mypod -o yaml 
 2612  kubectl get pvc
 2613  kaf test_pvc.yaml
 2614  kubectl get pvc
 2615  kubectl get pvc myclaim -o yaml 
 2616  kaf test_pvc.yaml
 2617  kubectl get pvc myclaim -o yaml 
 2618  kaf test_pvc.yaml
 2619  kubectl delete -f test_pvc.yaml
 2620  kaf test_pvc.yaml
 2621  kubectl get pvc myclaim -o yaml 
 2622  kubectl delete -f test_pvc.yaml
 2623  kaf test_pvc.yaml
 2624  kubectl get pvc myclaim -o yaml 
 2625  kubectl delete -f test_pvc.yaml
 2626  kubectl patch storageclass sata -p '{"metadata":{"annotations":{"storageclass.kubernetes.io/is-default-class":"false"}}}'
 2627  kubectl patch storageclass ssd -p '{"metadata":{"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}'
 2628  kubectl get storageclass 
 2629  kubectl patch storageclass sas -p '{"metadata":{"annotations":{"storageclass.kubernetes.io/is-default-class":"false"}}}'
 2630  kubectl get storageclass 
 2631  kubectl delete -f test_pvc.yaml
 2632  kaf test_pvc.yaml
 2633  kubectl get pvc myclaim -o yaml 
 2634  kubectl get pvc 
 2635  kubectl delete -f test_pvc.yaml
 2636  kubectl get pvc 
 2637  kubectl get storageclass 
 2638  kubectl patch storageclass ssd -p '{"metadata":{"annotations":{"storageclass.kubernetes.io/is-default-class":"false"}}}'
 2639  kubectl get storageclass 
 2640  kubectl patch storageclass sata -p '{"metadata":{"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}'
 2641  kubectl get storageclass 
 2642  kaf test_pvc.yaml
 2643  kubectl get pvc 
 2644  kubectl get pvc myclaim -o yaml 
 2645  kubectl get pvc 
 2646  kubectl delete -f test_pvc.yaml
 2647  ssh gw
 2648  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 2649  cd ../../
 2650  ll
 2651  cd temp
 2652  cd pvc
 2653  ll
 2654  kaf minio.yaml
 2655  kubectl get pods
 2656  kubectl get pods inio-6c84b9996b-zkcc9                                
 2657  kubectl get pods minio-6c84b9996b-zkcc
 2658  kubectl get pods
 2659  kubectl get pod/minio-6c84b9996b-zkcc9
 2660  kubectl get pod/minio-6c84b9996b-zkcc9 -o yaml
 2661  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 2662  kubectl get pvc
 2663  kubectl delete -f minio.yaml
 2664  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 2665  ll
 2666  scp minio.yaml  diod@172.24.137.169+SSH+osbi7352@diodbastion-qualif.bigdata.intraorange:/home/diod/
 2667  kaf minio.yaml
 2668  kubectl get pvc
 2669  kubectl get pvc/minio-pv-claim
 2670  kubectl get pvc/minio-pv-claim -o yaml
 2671  kubectl get pods 
 2672  kubectl get pod/minio-6c84b9996b-xn59k -o yaml
 2673  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 2674  ll
 2675  zip minio.yaml
 2676  zip -h
 2677  zip minio.yaml minio.zip
 2678  zip minio.zip minio.yaml
 2679  ll
 2680  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 2681  /Users/Shared/openvpn/MENU/UDPVPN ; exit;
 2682  kubectl get pvc
 2683  kubectl get pvc --all-namespaces
 2684  open .Renviron
 2685  cd
 2686  cd Documents/DSO
 2687  cd Support\ Formation
 2688  cd Jour\ 8-9
 2689  ll
 2690  code .
 2691  ll
 2692  cd 
 2693  cd Dev/immo
 2694  ll
 2695  code .
 2696  kaggle pip install kaggle --upgrade
 2697  pip install kaggle --upgrade
 2698  cd 
 2699  cd Documents/DSO
 2700  ll
 2701  cd Support\ Formation
 2702  ll
 2703  cd Jour\ 10
 2704  ll
 2705  cd Cover\ Type-20191014
 2706  ll
 2707  kaggle competitions submit -c forest-cover-type-prediction -f submission.csv -m "Test 1"
 2708  kaggle 
 2709  kaggle init
 2710  touch /Users/seb/.kaggle
 2711  kaggle competitions submit -c forest-cover-type-prediction -f submission.csv -m "Test 1"
 2712  kaggle --help 
 2713  chmod 600 ~/.kaggle/kaggle.json
 2714  touch 600 ~/.kaggle/kaggle.json
 2715  touch ~/.kaggle/kaggle.json
 2716  vi ~/.kaggle/kaggle.json
 2717  cd ~/.kaggle
 2718  cp ~/Downloads/kaggle.json .
 2719  cd -
 2720  kaggle competitions submit -c forest-cover-type-prediction -f submission.csv -m "Test 1"
 2721  curl -s http://maps.googleapis.com/maps/api/geocode/json\?address\=546%20rue%20Baruch%20de%20Spinoza,%20Avignon\&sensor\=false
 2722  curl "https://api-adresse.data.gouv.fr/search/?q=8+bd+du+port&limit=15"
 2723  curl "https://api-adresse.data.gouv.fr/search/?q=8+bd+du+port&limit=15" | jq
 2724  curl "https://api-adresse.data.gouv.fr/search/?q=56+bd+jean+jaures+94260+fresnes&limit=15" | jq
 2725  cd 
 2726  cd Dev/immo
 2727  ll
 2728  split 
 2729  split  --help
 2730  ll
 2731  split  --help
 2732  wc -l addresse.csv
 2733  2339002/20
 2734  = 2339002/20
 2735  split  --help
 2736  split  -l 116950 addresse.csv part_add
 2737  ll
 2738  curl -X POST -F data=@part_addaa https://api-adresse.data.gouv.fr/search/csv/
 2739  curl -X POST -F data=@part_addaa -o res.txt https://api-adresse.data.gouv.fr/search/csv/
 2740  ll
 2741  cat res.txt
 2742  head -n 50 part_addaa > part_adda1000
 2743  curl -X POST -F data=@part_adda1000 -o res.txt https://api-adresse.data.gouv.fr/search/csv/
 2744  split  -l 10000 addresse.csv part_add
 2745  ll
 2746  mkdir part 
 2747  mv part_* part
 2748  ll
 2749  set ls_f = $(ls part)
 2750  env
 2751  export  ls_f = $(ls part)
 2752  export  ls_f=$(ls part)
 2753  env
 2754  for part in $(ls part) ; do\necho adresse > cat /Users/seb/cert/orange_g2.pem >> $bundl\ndone
 2755  mkdir output
 2756  ll
 2757  sh request.sh
 2758  ll
 2759  rm -f part/*
 2760  ll
 2761  rm -f output/*
 2762  ll
 2763  tree
 2764  sh request.sh
 2765  rm -y -f output/*
 2766  rm -f output/*
 2767  rm -f part/*
 2768  ll
 2769  tree
 2770  sh request.sh
 2771  rm -h
 2772  rm --help
 2773  rm -f part/* ; rm -f output/*
 2774  sh request.sh
 2775  curl -X POST -F data=@part/addraa -o toto https://api-adresse.data.gouv.fr/search/csv/
 2776  rm -f part/* ; rm -f output/*
 2777  sh request.sh
 2778  ll part
 2779  rm -f part/* ; rm -f output/*
 2780  sh request.sh
 2781  mkdir part2
 2782  sh request.sh
 2783  ll
 2784  ls part | wc -l
 2785  ls output | wc -l
 2786  /Users/Shared/openvpn/MENU/UDPVPN ; exit;
 2787  cd Dev/kubeflow/
 2788  ll
 2789  cd install-de-di
 2790  ll
 2791  cd temp
 2792  ll
 2793  mkdir test_pvcRWX
 2794  cd test_pvcRWX
 2795  lll
 2796  ll
 2797  kfctl init kubeflow --config kfctl_k8s_istio.yaml -V
 2798  kfctl init kubeflow --config ./kfctl_k8s_istio.yaml -V
 2799  ll
 2800  source ~/pon
 2801  kfctl init kubeflow --config ./kfctl_k8s_istio.yaml -V
 2802  kfctl init kubeflow --config=./kfctl_k8s_istio.yaml -V
 2803  kfctl init kubeflow --config ./kfctl_k8s_istio.yaml -V
 2804  kfctl init kubeflow --config $(pwd)/kfctl_k8s_istio.yaml -V
 2805  ll
 2806  cd kubeflow
 2807  ll
 2808  cd .cache 
 2809  ll
 2810  cd ..
 2811  ll
 2812  grep -R "ReadWrite" .cache 
 2813  grep -R "ReadWrite" .cache | wc -l
 2814  cd ..
 2815  ll
 2816  rm -rf ./kubeflow
 2817  kfctl init kubeflow --config $(pwd)/kfctl_k8s_istio.yaml -V
 2818  ll
 2819  cd kubeflow
 2820  ll
 2821  l s-la
 2822  ls -la 
 2823  ls -la .cache
 2824  ls -la .cache/manifests
 2825  ls -la .cache/manifests/manifests-0.6-branch
 2826  ll ..
 2827  grep path ../kfctl_k8s_istio.yaml
 2828  ll ..
 2829  cd kub
 2830  ll
 2831  ls .cache
 2832  ls .cache/manifests/manifests-0.6-branch
 2833  ll  .cache/manifests/manifests-0.6-branch
 2834  rm -rf  .cache/manifests/manifests-0.6-branch/test
 2835  grep -R "ReadWrite" .cache | wc -l
 2836  grep -R "ReadWrite" .cache 
 2837  rm -rf  .cache/manifests/manifests-0.6-branch/tests
 2838  grep -R "ReadWrite" .cache 
 2839  ll
 2840  find .cache -name \*.yaml -exec sed -i "s/ReadWriteOnce/ReadWriteMany/g" {} \;
 2841  sev
 2842  sed
 2843  sed--help 
 2844  sed --help 
 2845  find .cache -name \*.yaml -exec sed "s/ReadWriteOnce/ReadWriteMany/g" {} \;
 2846  grep -R "ReadWrite" .cache 
 2847  sed --help 
 2848  find .cache -name \*.yaml -exec sed -e "s/ReadWriteOnce/ReadWriteMany/g" {} \;
 2849  grep -R "ReadWrite" .cache 
 2850  ll
 2851  cd .cache
 2852  tree
 2853  find .
 2854  find . | gre crd
 2855  find . | grep crd
 2856  cd ..
 2857  find .cache -name \*.yaml -exec sed -i "s/ReadWriteOnce/ReadWriteMany/g" {} \;
 2858  docker run ubuntu 
 2859  docker run -it ubuntu bash
 2860  docker run -it ubuntu  -v data . bash
 2861  docker run -it ubuntu  -v .:/data bash
 2862  docker run -it ubuntu  -v $(pwd):/data bash
 2863  docker run -it -v $(pwd):/data ubuntu bash
 2864  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 2865  kubectl get gateway
 2866  kubectl get gateway -o yaml 
 2867  kubectl get virtualservice
 2868  kubectl get virtualservice/demo-cu-model-cu-http -o yaml 
 2869  ll ~/Downloads
 2870  ll -ltr ~/Downloads
 2871  jq ~/Download/kubconvig\ (17).json(
 2872  jq ~/Download/kubconvig\ (17).json
 2873  jq ~/Downloads/kubconvig\ (17).json(
 2874  jq ~/Downloads/kubconvig\ (17).json
 2875  jq <~/Downloads/kubconvig\ (17).json
 2876  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 2877  kubectl 
 2878  kubectl get all
 2879  kubectl cluster-info
 2880  kubectl get all --all-namespaces
 2881  kubectl get gateways --all-namespaces
 2882  k9s -n all
 2883  brew update
 2884  k9s -n all
 2885  kubectl port-forward -n istio-system svc/istio-ingressgateway 8080:80
 2886  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 2887  kubectl get vs --all-namesspaces
 2888  kubectl get vs --all-namespaces
 2889  kubectl -n kubeflow get vs/centraldashboard
 2890  kubectl -n kubeflow get vs/centraldashboard- yaml 
 2891  kubectl -n kubeflow get vs/centraldashboard -o yaml 
 2892  curl -gk https://di-diod-kubeflow.itn.intraorange/
 2893  curl  https://di-diod-kubeflow.itn.intraorange/
 2894  curl -k https://di-diod-kubeflow.itn.intraorange/
 2895  curl -k --verbose --header "Host: di-diod-kubeflow.itn.intraorange" https://di-diod-kubeflow.itn.intraorange/
 2896  kubectl --all-namespaces  get svc
 2897  kubectl --all-namespaces get services 
 2898  kubectl get services 
 2899  kubectl get services  --all-namespaces
 2900  kubectl get service/istio-ingressgateway  
 2901  kubectl -n istio-system get service/istio-ingressgateway  
 2902  kubectl -n istio-system get service/istio-ingressgateway   -o yaml 
 2903  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 2904  cd ../
 2905  ll
 2906  cd ../..
 2907  pwd
 2908  ll
 2909  cd ..
 2910  ll
 2911  cd demo-cu
 2912  ll
 2913  cd 1-\ train
 2914  python3 train.py -p demo-cu -f modelcu2.sav
 2915  source ~/pon
 2916  python3 train.py -p demo-cu -f modelcu2.sav
 2917  cd ../2-\ create\ container
 2918  ll
 2919  docker login dockerfactory-unstable-iva.si.francetelecom.fr --username osbi7352
 2920  sh build-images.sh
 2921  cd ../3-\ deploy\ model
 2922  ll
 2923  kubectl apply -f inference.yaml
 2924  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/default/model-cu/api/v0.1/predictions \\n     -H "Content-Type: application/json" \\n     --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'\n
 2925  kubectl get sdep
 2926  kubectl ddescribe sdep/model-cu 
 2927  kubectl describe sdep/model-cu 
 2928  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/default/model-cu/api/v0.1/predictions \\n     -H "Content-Type: application/json" \\n     --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'\n
 2929  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/default/model-cu/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'\n
 2930  kubectl get svc -n istio-system
 2931  kubectl get vs  -n istio-system
 2932  kubectl get vs -n all
 2933  kubectl get vs --all-namespaces
 2934  kubectl get vs/demo-cu-model-cu-http 
 2935  kubectl get vs/demo-cu-model-cu-http -o yaml
 2936  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/default/model-cu/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'\n
 2937  kubectl get vs/demo-cu-model-cu-grpc -o yaml
 2938  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/default/model-cu/api/v0.1/predictions -H "Content-Type: application/json"\n
 2939  kubectl get kubeflow-gateway
 2940  kubectl get kubeflow-gateway -n kubeflow
 2941  kubectl get kubeflow-gateway --all-namespace
 2942  kubectl get kubeflow-gateway --all-namespaces
 2943  kubectl get gateway/kubeflow-gateway --all-namespaces
 2944  kubectl get gateways/kubeflow-gateway --all-namespaces
 2945  kubectl get gateways --all-namespaces
 2946  kubectl get gateways/kubeflow-gateway --all-namespaces
 2947  kubectl get gateways/kubeflow-gateway -n kubeflow
 2948  kubectl get gateways/kubeflow-gateway -n kubeflow -o yaml 
 2949  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/default/model-cu/api/v0.1/predictions -H "Content-Type: application/json"\n
 2950  kubectl get gateways/kubeflow-gateway -n kubeflow -o yaml 
 2951  kubectl get gateways --all-namespaces
 2952  kubectl get gateways/kubeflow-gateway -n kubeflow -o yaml 
 2953  kubectl get virtualservices --all-namespaces
 2954  kubectl get virtualservices --all-namespaces -o json
 2955  kubectl get virtualservices --all-namespaces -o jsonpath="."
 2956  kubectl get virtualservices --all-namespaces -o jsonpath=".items[*].spec"
 2957  kubectl get virtualservices --all-namespaces -o=jsonpath=".items[*].spec"
 2958  kubectl get virtualservices --all-namespaces -o=jsonpath="{.items[*].spec}"
 2959  kubectl get virtualservices --all-namespaces -o=jsonpath="{range .items[*]}{.spec.gateway}"
 2960  kubectl get virtualservices --all-namespaces -o=jsonpath="{range .items[*]}{.spec.gateways}"
 2961  kubectl get virtualservices --all-namespaces -o=jsonpath="{range .items[*]}{.spec.gateways}{\n}{end}"
 2962  kubectl get virtualservices --all-namespaces -o=jsonpath="{range .items[*]}{.spec.gateways}{'\n'}{end}"
 2963  kubectl get virtualservices --all-namespaces -o=jsonpath="{range .items[*]}{.metadata.name}{'\t'}{.spec.gateways}{'\n'}{end}"
 2964  kubectl get virtualservices --all-namespaces -o=jsonpath="{range .items[*]}{.metadata.name}{'\t'}{.spec.gateways}{'\t'}{.spec.hosts}{'\n'}{end}"
 2965  kubectl get virtualservices --all-namespaces -o=jsonpath="{range .items[*]}{.metadata.name}{'\t'}{.spec.gateways}{'\t'}{.spec.hosts}{'\t'}{.spec.http[*]}{'\n'}{end}"
 2966  kubectl get virtualservices --all-namespaces -o=jsonpath="{range .items[*]}{.metadata.name}{'\t'}{.spec.gateways}{'\t'}{.spec.hosts}{'\t'}{.spec.http[*].match}{'\n'}{end}"
 2967  kubectl get virtualservices --all-namespaces -o=jsonpath="{range .items[*]}{.metadata.name}{'\t'}{.spec.gateways}{'\t'}{.spec.hosts}{'\t'}{.spec.http[*].match}{'\n'}{end}" > ~/tmp/toto.tsv
 2968  ll
 2969  kubectl delete -f inference.yaml
 2970  kubectl apply -f inference.yaml -n kubeflow 
 2971  kubectl get virtualservices --all-namespaces -o=jsonpath="{range .items[*]}{.metadata.name}{'\t'}{.spec.gateways}{'\t'}{.spec.hosts}{'\t'}{.spec.http[*].match}{'\n'}{end}"
 2972  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/model-cu/api/v0.1/predictions -H "Content-Type: application/json"\n
 2973  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/model-cu/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}\n\n
 2974  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/model-cu/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'\n\n
 2975  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/model-cu/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}' -v\n\n
 2976  kubectl get pods -n kubeflow
 2977  kubectl describe demo-cu-main-af67851-5d98557bb-gqvkm
 2978  kubectl describe demo-cu-main-af67851-5d98557bb-gqvkm -n kubeflow
 2979  kubectl describe pod/demo-cu-main-af67851-5d98557bb-gqvkm -n kubeflow
 2980  kubectl logse pod/demo-cu-main-af67851-5d98557bb-gqvkm -n kubeflow
 2981  kubectl logs pod/demo-cu-main-af67851-5d98557bb-gqvkm -n kubeflow
 2982  kubectl logs pod/demo-cu-main-af67851-5d98557bb-gqvkm -n kubeflow -c classifier
 2983  kubectl logs pod/demo-cu-main-af67851-5d98557bb-gqvkm -n kubeflow -c seldon-container-engine
 2984  ll
 2985  pwd
 2986  cd ../../..
 2987  cd ..
 2988  cd test_s3
 2989  ll
 2990  cd secrets
 2991  ll
 2992  cat Readme.md
 2993  kubectl kustomize ./
 2994  kubectl kustomize ./ > secret.yaml 
 2995  ll
 2996  cat inference.yaml
 2997  kubectl kustomize ./ | kubectl apply -f -
 2998  kubectl kustomize ./
 2999  kubectl kustomize ./ | kubectl apply -f -
 3000  kubectl get pods -n kubeflow
 3001  ll
 3002  kubectl delete -f inference.yaml
 3003  kubectl delete -f inference.yaml -n kubeflow
 3004  kubectl get pods -n kubeflow
 3005  kubectl delete -f inference.yaml -n kubeflow
 3006  kubectl apply -f inference.yaml -n kubeflow
 3007  kubectl get pods -n kubeflow
 3008  kubectl kustomize ./ | kubectl apply -f - -n kubeflow
 3009  kubectl get pods -n kubeflow
 3010  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/model-cu/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}' -v\n\n
 3011  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/model-cu/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'\n\n
 3012  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/default/model-cu/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'\n\n
 3013  kubectl get virtualservices --all-namespaces -o=jsonpath="{range .items[*]}{.metadata.name}{'\t'}{.spec.gateways}{'\t'}{.spec.hosts}{'\t'}{.spec.http[*].match}{'\n'}{end}"
 3014  kubectl get profiles 
 3015  kubectl get profiles  -o yaml
 3016  cd ..
 3017  cd install-de-di
 3018  cd ..
 3019  cd install-de-di
 3020  ll
 3021  cd kubeflow-core/
 3022  ll
 3023  cd conf_kubeflow
 3024  ll
 3025  cd profiles
 3026  ll
 3027  kaf seb.yaml
 3028  kaf fabien.yaml
 3029  kaf eric.yaml
 3030  cd
 3031  ll
 3032  pip3 install jep jedi pyspark virtualenv
 3033  pip3 install jep jedi pyspark virtualenvpip install --upgrade pip
 3034  pip install --upgrade pip
 3035  pip3 install --upgrade pip
 3036  pip3 install jep jedi pyspark virtualenv
 3037  cd Dev
 3038  mkdir polynote
 3039  cd polynote
 3040  mv ~/Downloads/polynote-dist.tar.gz .
 3041  ll
 3042  tar -zxvpf polynote-dist.tar.gz
 3043  cd polynote
 3044  ll
 3045  cp config-template.yml config.yml
 3046  vi config
 3047  vi config.yml
 3048  ./polynote
 3049  find ~ -name "*.ipnb'
 3050  find ~ -name '*.ipnb'
 3051  find ~ -name '*.ipynb'
 3052  cd Dev
 3053  find ~ -name '*.ipynb'
 3054  find ~/Dev -name '*.ipynb'
 3055  cat ~/.ssh/id_rsa.pub
 3056  exit
 3057  kubectl get virtualservices --all-namespaces -o=jsonpath="{range .items[*]}{.metadata.name}{'\t'}{.spec.gateways}{'\t'}{.spec.hosts}{'\t'}{.spec.http[*].match}{'\n'}{end}"
 3058  k9s
 3059  kubectl get storageclass 
 3060  kubectl get storageclass/sata
 3061  kubectl get storageclass/sata -o json
 3062  kubectl get storageclass/sata -o yaml
 3063  vault
 3064  export VAULT_ADDR=https://vault.bigdata.intraorange
 3065  export VAULT_TOKEN=e4d6c1dc-cb4f-e517-9f7d-87e7aae12ed2
 3066  vault kv get --format json secret/products/diod-fe/diod-kubeflow
 3067  vault kv get --format json secret/products/diod-fe/diod-kubeflow/
 3068  vault kv get --format json secret/products/diod-fe/diod-kubeflow/qual
 3069  cd ../..
 3070  pwd
 3071  cd install-de-di
 3072  ll
 3073  cd temp
 3074  ll
 3075  vault kv get --format json secret/products/diod-fe/diod-kubeflow/qual > env-diod-kubeflow-qual.json
 3076  vault kv get --format json secret/products/diod-fe/diod-kubeflow/qual |jq '.data' > env-diod-kubeflow-qual.json
 3077  vault kv put secret/products/diod-fe/diod-kubeflow/dev2 @env-diod-kubeflow-qual.json
 3078  vault kv
 3079  vault kv list 
 3080  vault kv list secret/products/diod-fe/diod-kubeflow
 3081  vault kv list secret/products/diod-fe/diod-kubeflow/
 3082  vault kv get --format json secret/products/diod-fe/diod-kubeflow/dev2
 3083  vault kv get --format json secret/products/diod-fe/diod-kubeflow/dev3
 3084  vault kv get --format json secret/products/diod-fe/diod-kubeflow/qual
 3085  vault kv get --format json diod-fe/diod-kubeflow/qual
 3086  vault kv get --format json diod-fe/diod-kubeflow/qual/instance
 3087  kubectl get crd
 3088  kubectl get secrets -n seb
 3089  s3cmd
 3090  s3cmd ls
 3091  ls ~/.s3cfg
 3092  cat ~/.s3cfg
 3093  s3cmd ls
 3094  source ~/pon
 3095  s3cmd ls
 3096  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 3097  vault 
 3098  vault vault kv get --format json  secret/products/diod-fe/diod-kubeflow/qual
 3099  vault kv get --format json  secret/products/diod-fe/diod-kubeflow/qual
 3100  export VAULT_TOKEN=e4d6c1dc-cb4f-e517-9f7d-87e7aae12ed2
 3101  export VAULT_ADDR=https://vault.bigdata.intraorange
 3102  vault kv get --format json  secret/products/diod-fe/diod-kubeflow/qual
 3103  vault kv get --format json  secret/products/diod-fe/diod-kubeflow/qual | jq -r '.data.fe_ssh_cce' | base64 -d > KeyPair-cce-kubeflow.pem ; chmod 400 KeyPair-cce-kubeflow.pem 
 3104  scp KeyPair-cce-kubeflow.pem diod@172.24.137.169+SSH+osbi7352@diodbastion-qualif.bigdata.intraorange:/home/diod/.ssh/
 3105  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 3106  kubectl get clusterrolebindings -o=custom-columns=NAME:.metadata.name,ROLE:.roleRef.name,SUBJECT:.subjects[*].name
 3107  kubectl get clusterrolebindings
 3108  kubectl get clusterrolebindings -o=custom-columns=NAME:.metadata.name,ROLE:.roleRef.name,SUBJECT:.subjects[*].name
 3109  kubectl get clusterrolebindings -o json =custom-columns=NAME:.metadata.name,ROLE:.roleRef.name,SUBJECT:.subjects[*].name
 3110  kubectl get clusterrolebindings -o json
 3111  kubectl get clusterrolebindings -o=custom-columns=NAME:.metadata.name
 3112  kubectl get clusterrolebindings -o=custom-columns=NAME:.metadata.name,ROLE:.roleRef.name
 3113  kubectl get clusterrolebindings -o=custom-columns=NAME:.metadata.name,ROLE:.roleRef.name,SUBJECT:.subjects
 3114  kubectl get clusterrolebindings -o=custom-columns=NAME:.metadata.name,ROLE:.roleRef.name,SUBJECT:.subjects[*]
 3115  kubectl get clusterrolebindings -o=custom-columns=NAME:.metadata.name,ROLE:.roleRef.name,SUBJECT:.subjects[]
 3116  kubectl get clusterrolebindings -o=custom-columns=NAME:.metadata.name,ROLE:.roleRef.name,SUBJECT:.subjects
 3117  kubectl get clusterrolebindings -o=custom-columns=NAME:.metadata.name,ROLE:.roleRef.name,SUBJECT:.subjects | grep admin
 3118  kubectl get clusterrolebindings -o=custom-columns=NAME:.metadata.name,ROLE:.roleRef.name,SUBJECT:.subjects | grep 'cluster-admin'
 3119  kubectl get roles --all-namespaces -o yaml
 3120  kubectl get psp
 3121  kubectl get pods --all-namespaces
 3122  kubectl get pods --all-namespaces -o:custom-colomns
 3123  kubectl get pods --all-namespaces -o:custom-colomns=PROV:spec.containers
 3124  kubectl get po -o wide
 3125  kubectl get po --all-namespaces  -o wide
 3126  kubectl get pods --all-namespaces -o:custom-colomns=NOM:.metadata.name
 3127  kubectl get pods --all-namespaces -o custom-columns=NOM:.metadata.name
 3128  kubectl get pods --all-namespaces -o custom-columns=NOM:.metadata.name,PRIV:.spec.containers[].securityContext.privileged
 3129  kubectl get pods --all-namespaces -o custom-columns=NOM:.metadata.name,PRIV:.spec.containers[*].securityContext.privileged
 3130  kubectl get pods --all-namespaces -o custom-columns=NOM:.metadata.name,PRIV:.spec.containers
 3131  kubectl get pods --all-namespaces -o custom-columns=NOM:.metadata.name,PRIV:.spec.containers[*]
 3132  kubectl get pods --all-namespaces -o yaml
 3133  kubectl get pods --all-namespaces -o yaml | grep priv
 3134  kubectl get pods --all-namespaces -o yaml > /tmp/priv.txt
 3135  vi /tmp/priv.txt
 3136  kubectl get psp
 3137  kubectl get psp --all-namespaces
 3138  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 3139  kubectl --all-namespaces get networkpolicy
 3140  kubectl --all-namespaces get networkpolicies
 3141  kubectl --all-namespaces get networkpolicies.extensions
 3142  kubectl --all-namespaces get networkpolicies.networking.k8s.io
 3143  kubectl get 
 3144  kubectl get kubectl api-resources"
 3145  kubectl api-resources"\nkubectl get kubectl api-resources
 3146  kubectl api-resources\nkubectl get kubectl api-resources
 3147  kubectl api-resources | sort\nkubectl get kubectl api-resources
 3148  kubectl api-resources | sort
 3149  kubectl get netpol
 3150  kubectl get netpol --all-namespaces
 3151  kubectl --all-namespaces get networkpolices
 3152  kubectl --all-namespaces get networkpolicies
 3153  kubectl --all-namespaces get netpol
 3154  kubectl get networkpolicies --all-namespaces
 3155  kubectl get all -o jsonpath='{range .items[?(@..secretKeyRef)]} {.kind} {.metadata.name} {"\n"}{end}' -A
 3156  kubectl get all
 3157  kubectl get all -n default
 3158  kubectl get node/172.24.137.238  -o wide
 3159  source /Users/seb/anaconda3/bin/activate
 3160  conda activate base
 3161  kubectl get vs  -o wide
 3162  ll
 3163  kubectl kustomize ./
 3164  kubectl kustomize ./ > secret2.yaml 
 3165  kaf secret2.yaml -n seb
 3166  ll
 3167  kaf proxy.yaml -n seb
 3168  kaf test-pod.yaml -n seb
 3169  kgp
 3170  kgp -n seb
 3171  kl dapi-test)pod
 3172  kl dapi-test-pod
 3173  kl dapi-test)pod
 3174  kgp -n seb
 3175  kubectl logs pod/dapi-test-pod -n seb
 3176  kubectl logs pod/dapi-test-pod -n seb -c test-container
 3177  kubectl logs pod/dapi-test-pod -n seb -c test-container | sort
 3178  kubectl get cm -n seb
 3179  kubectl config view
 3180  s3cmd
 3181  s3cmd ls
 3182  kubectl port-forward -n kubeflow minio-service 
 3183  kubectl port-forward -n kubeflow minio-service 9000:9000
 3184  kubectl port-forward -n kubeflow svc/minio-service 9000:9000
 3185  k9s
 3186  brew upgrade 
 3187  brew upgrade k9s
 3188  k9s
 3189  kubectl top
 3190  kubectl top pod
 3191  kubectl top --help 
 3192  kubectl top node
 3193  kubectl get pod -n seb
 3194  kubectl get pod/test-pipeline-0 -n seb
 3195  kubectl get pod/test-pipelines-0 -n seb
 3196  kubectl get pod/test-pipelines-0 -n seb -o yaml
 3197  kubectl describe  pod/test-pipelines-0 -n seb
 3198  docker inspect gcr.io/kubeflow-images-public/tensorflow-1.13.1-notebook-cpu:v0.5.0
 3199  source /Users/seb/anaconda3/bin/activate
 3200  source ~/pon
 3201  docker inspect gcr.io/kubeflow-images-public/tensorflow-1.13.1-notebook-cpu:v0.5.0
 3202  docker pull gcr.io/kubeflow-images-public/tensorflow-1.13.1-notebook-cpu:v0.5.0
 3203  docker inspect gcr.io/kubeflow-images-public/tensorflow-1.13.1-notebook-cpu:v0.5.0
 3204  ll
 3205  conda create --name mlpipeline python=3.7
 3206  conda activate mlpipeline
 3207  pip install https://storage.googleapis.com/ml-pipeline/release/latest/kfp.tar.gz --upgrade
 3208  cd ..
 3209  cd demo-cu
 3210  ll
 3211  cd ..
 3212  cd demo-cu
 3213  ll
 3214  mkdir 8- pipeline
 3215  cd 8-
 3216  ll
 3217  pwd
 3218  ll
 3219  cd ..
 3220  ll
 3221  rm -f pipeline
 3222  rm -rf pipeline
 3223  which dsl-compile
 3224  ll
 3225  cd 8-\ pipeline
 3226  ll
 3227  cd train
 3228  ll
 3229  cd src
 3230  ll
 3231  python train.py
 3232  pip install -r requirements.txt
 3233  python train.py
 3234  kgs -n kubeflow
 3235  kgs -n kubeflow minio-service
 3236  kgs -n kubeflow minio-service -o yaml
 3237  kds -n kubeflow minio-service -o yaml
 3238  kds -n kubeflow minio-service 
 3239  kdescribe service -n kubeflow minio-service 
 3240  kubectl describe service -n kubeflow minio-service 
 3241  python train.py --storage-proto http --storage-host minio-service.kubeflow.svc.cluster.local --storage-port 9000
 3242  kubectl port-forward -n kubeflow svc/minio-service 9000:9000
 3243  python train.py --storage-proto http --storage-host minio-service.kubeflow.svc.cluster.local --storage-port 9000
 3244  export AWS_ACCESS_KEY_ID=123
 3245  export AWS_SECRET_ACCESS_KEY=123minio
 3246  python train.py --storage-proto http --storage-host minio-service.kubeflow.svc.cluster.local --storage-port 9000
 3247  python train.py --storage-proto http --storage-host minio-service.kubeflow.svc.cluster.local --storage-port 9000 --storage-bucket models
 3248  python3 train.py --storage-proto http --storage-host minio-service.kubeflow.svc.cluster.local --storage-port 9000 --storage-bucket models
 3249  cd ..
 3250  ll
 3251  cd 0_setup_conf
 3252  ll
 3253  cd s3_secrets
 3254  l
 3255  kubectl kustomize ./ > secret.yaml\n
 3256  ll
 3257  kubectl apply -f secret.yaml -n seb
 3258  cd "$(dirname "$0")" 
 3259  ll
 3260  cd ..
 3261  ll
 3262  cd ..
 3263  ll
 3264  cd train
 3265  ll
 3266  chmod +x build_image.sh
 3267  ll
 3268  ./build_image.sh
 3269  docker images
 3270  docker inspect --format="{{index .RepoDigests 0}}" dockerfactory-unstable-iva.si.francetelecom.fr/osbi7352/demo-cu/train
 3271  cd 
 3272  cd Dev/lilo
 3273  ll
 3274  python search.py
 3275  python search.py | jq
 3276  python search.py | jq .
 3277  python search.py
 3278  python search.py | jq .
 3279  python search.py
 3280  exit
 3281  pwd
 3282  exit
 3283  ll
 3284  cd ..
 3285  ll
 3286  python pipeline.py
 3287  cd
 3288  ll
 3289  cd Dev
 3290  ll
 3291  mkdir tools
 3292  cd tooml
 3293  cd tools
 3294  ll
 3295  code .
 3296  ls ~
 3297  ls ~/.local
 3298  ls ~/.local/share
 3299  ls ~/.anaconda
 3300  ls ~/.anaconda/navigator
 3301  find ~/.anaconda -name cacert.pem
 3302  find ~/.anaconda -name "*.pem"
 3303  find ~/.anaconda3 -name "*.pem"
 3304  which python 
 3305  find ~/anaconda3 -name "*.pem"
 3306  find ~/anaconda3 -name "cacert.pem"
 3307  wget http://linux-instal.rd.francetelecom.fr/VPN.cfg/Groupe_France_Telecom_Root_CA.pem
 3308  ll
 3309  wget http://linux-instal.rd.francetelecom.fr/VPN.cfg/Groupe_France_Telecom_Root_CA.pem
 3310  head -n 5 Groupe_France_Telecom_Root_CA.pem
 3311  head -n 5 Groupe_France_Telecom_Root_CA.pem | tail 1 
 3312  head -n 5 Groupe_France_Telecom_Root_CA.pem | tail -n 1
 3313  ll
 3314  chmod +x update_python_ssl.sh
 3315  ll
 3316  ./update_python_ssl.sh
 3317  find ~/anaconda3 -name "cacert.pem"
 3318  ./update_python_ssl.sh
 3319  ll
 3320  wget --help 
 3321  ./update_python_ssl.sh
 3322  ll
 3323  rm -f GR*
 3324  rm -f Gr*
 3325  ll
 3326  ./update_python_ssl.sh
 3327  ll
 3328  ./update_python_ssl.sh
 3329  ll
 3330  rm -f Gr*
 3331  ./update_python_ssl.sh
 3332  ll
 3333  cat Orange_G2_Root_CA.pem
 3334  ll
 3335  rm -f Gr*
 3336  rm Orange_G2_Root_CA.pem
 3337  ll
 3338  ./update_python_ssl.sh
 3339  ll
 3340  ./update_python_ssl.sh
 3341  grep DTQxMDUwMjExMzgwN1owXTELMAkGA1UEBhMCRlIxDzANBgNVBAoMBk9yYW5nZTEY /Users/seb/anaconda3/ssl/cacert.pem
 3342  grep -R DTQxMDUwMjExMzgwN1owXTELMAkGA1UEBhMCRlIxDzANBgNVBAoMBk9yYW5nZTEY 
 3343  grep -R DTQxMDUwMjExMzgwN1owXTELMAkGA1UEBhMCRlIxDzANBgNVBAoMBk9yYW5nZTE /Users/seb/anaconda3/
 3344  ./update_python_ssl.sh
 3345  python pipeline.py
 3346  ll
 3347  cd train
 3348  ll
 3349  ./build_image.sh
 3350  source ~/pon
 3351  ./build_image.sh
 3352  cd ..
 3353  ll
 3354  python pipeline.py
 3355  ll
 3356  python pipeline.py
 3357  kubectl get secrets -n seb
 3358  source ~/pon
 3359  kubectl get secrets -n seb
 3360  kubectl get secrets -n seb -v
 3361  kubectl get pods
 3362  python test_artifact.py
 3363  ll
 3364  cd 0_setup_conf
 3365  ll
 3366  cd s3_secrets
 3367  ll
 3368  cat Readme.md
 3369  cat secret.yaml
 3370  kaf secret.yaml -n kubeflow
 3371  ll
 3372  cd ../..
 3373  ll
 3374  python test_artifact.py
 3375  ll
 3376  cd ..
 3377  kubectl port-forward -n kubeflow svc/minio-service 9000:9000
 3378  kubectl logs deploy/minio -n kubeflow
 3379  kubectl port-forward -n kubeflow svc/minio-service 9000:9000
 3380  cd 0_setup_conf
 3381  ll
 3382  cd s3_secrets
 3383  ll
 3384  cat Readme.md
 3385  kubectl kustomize ./ > secret.yaml
 3386  ll
 3387  cd ../..
 3388  ll
 3389  python test_artifact.py
 3390  kubectl port-forward -n kubeflow svc/minio-service 9000:9000
 3391  python pipeline.py
 3392  kubectl logs pod/my-pipeline-rd44d-2214763144
 3393  kubectl logs pod/my-pipeline-rd44d-2214763144 -c main
 3394  python pipeline.py
 3395  kubectl logs pod/my-pipeline-ph2cf-3590147607 -c main
 3396  ll
 3397  cd train
 3398  ll
 3399  ./build_image.sh
 3400  cd ..
 3401  python pipeline.py
 3402  kubectl port-forward -n kubeflow svc/minio-service 9000:9000
 3403  cd ..
 3404  cd lilo
 3405  ll
 3406  pip install selenium
 3407  source ~/poff
 3408  pip install selenium
 3409  ll
 3410  cd driver
 3411  ll
 3412  unzip chromedriver_mac64.zip
 3413  ll
 3414  code .
 3415  cd ..
 3416  code .
 3417  python selenium.py
 3418  pip install selenium --upgrade
 3419  python selenium.py
 3420  pip install selenium --upgrade
 3421  python selenium.py
 3422  brew install selenium-server-standalone
 3423  python selenium.py
 3424  pip install selenium --upgrade
 3425  cd
 3426  cd anaconda3
 3427  ll
 3428  cd lib
 3429  ll
 3430  cd ..
 3431  find . -name selenium
 3432  cd lib/python3.7/site-packages/
 3433  ll
 3434  cd selenium
 3435  ll
 3436  python3 selenium.py
 3437  cd webdriver
 3438  ll
 3439  python --version
 3440  python3 selenium.py
 3441  cd ..
 3442  python3 selenium.py
 3443  conda 
 3444  conda list
 3445  python2 selenium.py
 3446  pip2 install selenium --upgrade
 3447  pip2 install selenium --upgrade --user
 3448  python2 selenium.py
 3449  python3 selenium.py -v
 3450  python3 -v selenium.py
 3451  python Test_selenium.py
 3452  find . -name \*.pyc -delete
 3453  python Test_selenium.py
 3454  exit
 3455  kk
 3456  ll
 3457  sudo curl --output /usr/local/bin/gitlab-runner https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-darwin-amd64
 3458  source ~/pon
 3459  sudo curl --output /usr/local/bin/gitlab-runner https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-darwin-amd64
 3460  curl --output /usr/local/bin/gitlab-runner https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-darwin-amd64
 3461  cd 
 3462  cd Dev/kubeflow/
 3463  l
 3464  cd install-de-di
 3465  kk
 3466  ll
 3467  cd kubeflow-core/
 3468  ll
 3469  cd tmp
 3470  ll
 3471  https://github.com/kubeflow/manifests/archive/v0.7-branch.tar.gz
 3472  wget https://github.com/kubeflow/manifests/archive/v0.7-branch.tar.gz
 3473  source ~/pon
 3474  wget https://github.com/kubeflow/manifests/archive/v0.7-branch.tar.gz
 3475  curl  https://github.com/kubeflow/manifests/archive/v0.7-branch.tar.gz
 3476  mv ~/Downloads/manifests-0.7-branch.tar.gz .
 3477  ll
 3478  tar -xzvf manifests-0.7-branch.tar.gz
 3479  ll
 3480  cd manifests-0.7-branch
 3481  ll
 3482  cd seldon
 3483  ll
 3484  cat Makefile
 3485  ll
 3486  cd seldon-core-operator
 3487  ll
 3488  kustomize build overlays/application
 3489  ll
 3490  kustomize build overlays/application > test.yaml
 3491  kubectl port-forward -n istio-system  svc/istio-ingressgateway 80:80
 3492  kubectl port-forward -n istio-system  svc/istio-ingressgateway 80:8080
 3493  kubectl port-forward -n istio-system  svc/istio-ingressgateway 8080:80
 3494  exit
 3495  cd ../99
 3496  cd ../99-\ temp
 3497  ll
 3498  git clone https://github.com/SeldonIO/seldon-core.git
 3499  kubectl get cm -n seb
 3500  kubectl get cm -n kubeflow
 3501  ll
 3502  git clone https://github.com/kubeflow/pipelines.git
 3503  cd ../8-\ pipeline
 3504  ll
 3505  python pipeline.py
 3506  kubectl port-forward -n kubeflow svc/minio-service 9000:9000
 3507  python pipeline.py
 3508  kubectl port-forward -n kubeflow svc/minio-service 9000:9000
 3509  python pipeline.py
 3510  cd ../..
 3511  ll
 3512  cd ..
 3513  cd lilo
 3514  ll
 3515  code .
 3516  python Test_selenium.py
 3517  vi searches.csv
 3518  python Test_selenium.py
 3519  cd Dev/lilo
 3520  ll
 3521  python Test_selenium.py
 3522  exit
 3523  cd Dev/kubeflow/
 3524  ll
 3525  cd install-de-di
 3526  cd kubeflow-core
 3527  ll
 3528  cd tmp
 3529  ll
 3530  cd ..
 3531  cd ../..
 3532  ll
 3533  cd demo-cu
 3534  l
 3535  cd 99-\ temp
 3536  ll
 3537  python test_yaml.py
 3538  cp ../8-\ pipeline/serve/seldon_production_pipeline.yaml .
 3539  python test_yaml.py
 3540  python test_yaml.py | jq .
 3541  python test_yaml.py 
 3542  ll
 3543  python test_yaml.py 
 3544  conda list
 3545  conda
 3546  conda env list
 3547  conda activate mlpipeline
 3548  python test_yaml.py 
 3549  kubectl get cm -n kubeflow
 3550  kubectl get cm -n seb
 3551  kubectl get cm/proxies -n seb
 3552  kubectl get cm/proxies -n seb -o yaml
 3553  python test_yaml.py 
 3554  cd ../8-\ pipeline
 3555  ll
 3556  python pipeline.py
 3557  conda activate mlpipeline
 3558  python pipeline.py
 3559  kubectl logs deploy/ml-pipeline-scheduledworkflowminio -n kubeflow
 3560  kubectl logs deploy/ml-pipeline-scheduledworkflow -n kubeflow
 3561  kubectl logs deploy/ml-pipeline -n kubeflow
 3562  kgrs
 3563  kubectl get roles
 3564  kubectl get roles --all-namespaces 
 3565  kubectl get accounts --all-namespaces 
 3566  kubectl get users --all-namespaces 
 3567  ll
 3568  cd serve
 3569  ll
 3570  kaf update_seldon_rbac.yaml
 3571  cd ..
 3572  python pipeline.py
 3573  kubectl get sdep -n kubeflow
 3574  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/seldon-dep-my-pipeline-7mspm/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'
 3575  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/default/model-cu/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'\n\n
 3576  kubectl get sdep -n kubeflow
 3577  kubectl describe sdep/seldon-dep-my-pipeline-7mspm 
 3578  kubectl get vs -n kubeflow
 3579  kubectl get vs -n kubeflow demo-cu-model-cu-http
 3580  kubectl get vs -n kubeflow demo-cu-model-cu-http -o yaml
 3581  kubectl get svc -n kubeflow
 3582  kubectl get svc -n kubeflow demo-cu-model-cu
 3583  kubectl get svc -n kubeflow demo-cu-model-cu -o yaml
 3584  kubectl get pod -l "seldon-app=demo-cu-model-cu"
 3585  kubectl get pod -l "seldon-app=demo-cu-model-cu" --all-namespaces
 3586  python pipeline.py
 3587  kubectl get sdep -n kubeflow
 3588  kubectl get svc -n kubeflow
 3589  kubectl get vs -n kubeflow
 3590  kubectl get vs -n kubeflow demo-cu-my-pipeline-d2qdc-seldon-dep-my-pipeline-d2qdc-http
 3591  kubectl get vs -n kubeflow demo-cu-my-pipeline-d2qdc-seldon-dep-my-pipeline-d2qdc-http -o yaml
 3592  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/seldon-dep-my-pipeline-d2qdc/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'
 3593  kubectl get pods -n kubeflow
 3594  kubectl logs demo-cu-my-pipeline-d2qdc-main-af67851-664668955c-8q9pv
 3595  kubectl logs demo-cu-my-pipeline-d2qdc-main-af67851-664668955c-8q9pv -c classifier
 3596  kubectl logs demo-cu-my-pipeline-d2qdc-main-af67851-664668955c-8q9pv -c classifier -n kubeflow
 3597  kubectl get pods -n kubeflow
 3598  cd ../..
 3599  ll
 3600  cd demo-cu
 3601  l
 3602  cd 8-\ pipeline
 3603  ll
 3604  cd 0_setup_conf
 3605  ll
 3606  find ~/Dev -name "*cm*
 3607  find ~/Dev -name "*cm*"
 3608  find ~/Dev -name "*cm*" | grep yaml
 3609  find ~/Dev -name "*prox*" | grep yaml
 3610  cp /Users/seb/Dev/kubeflow/test_s3/secrets/proxy.yaml .
 3611  ll
 3612  kaf proxy.yaml -n kubeflow
 3613  ``
 3614  cd ../
 3615  ll
 3616  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/seldon-dep-my-pipeline-d2qdc/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'
 3617  docker run --name kublr -d --restart=unless-stopped -p 9080:9080 kublr/kublr:1.14.0
 3618  docker stop kublr
 3619  cd 
 3620  cd Dev/lilo
 3621  ll
 3622  code .
 3623  python Test_selenium.py
 3624  cd Dev/lilo
 3625  ll
 3626  python Test_selenium.py
 3627  cd Dev
 3628  ll
 3629  cd kubeflow
 3630  ll
 3631  cd ..
 3632  find . -name wassup 
 3633  cd DIA
 3634  cd wassup
 3635  ll
 3636  git fetch
 3637  code .
 3638  cd new_algo
 3639  LL
 3640  ll
 3641  python algo2.py
 3642  python exponentiel.py
 3643  python fentre_glissante_wassup.py
 3644  python exponentiel.py
 3645  cd ../..
 3646  ll
 3647  cd ;.
 3648  cd ..
 3649  ll
 3650  cd Dev/kubeflow/
 3651  ll
 3652  cd
 3653  cd Dev/kubeflow/
 3654  ll
 3655  cd install-de-di
 3656  ll
 3657  cd kubeflow-core
 3658  ll
 3659  code .
 3660  ll
 3661  cd ..
 3662  ll
 3663  cd tmp
 3664  ll
 3665  cd temp
 3666  ll
 3667  grep -R secret ""
 3668  grep -R secret "*"
 3669  grep -R secret
 3670  grep -R secret *
 3671  grep -R products *
 3672  cat cce-auth.json
 3673  cat cce-auth.json.tmpl
 3674  cd ../
 3675  find . -name vault
 3676  find . -name env-diod
 3677  find . -name "env-diod*"
 3678  cd temp
 3679  ll
 3680  cat env-diod-kubeflow-qual.json
 3681  code .
 3682  export VAULT_ADDR=https://vault.bigdata.intraorange
 3683  export VAULT_TOKEN=e4d6c1dc-cb4f-e517-9f7d-87e7aae12ed2
 3684  vault kv put secret/products/diod-fe/diod-kubeflow/prod @env-diod-kubeflow-prod.json
 3685  cd ..
 3686  ll
 3687  git config --global user.name "Blin Sébastien"
 3688  git config --global user.email "sebastien.blin@orange.com"
 3689  git clone git@diodlab.bigdata.intraorange:diod/kubeflow/k8s.git
 3690  git clone https://diodlab.bigdata.intraorange/diod/kubeflow/k8s.git
 3691  cd k8s
 3692  touch README.md
 3693  git add README.md
 3694  git commit -m "add README"
 3695  git push -u origin master
 3696  code .
 3697  brew install gitlab-runner
 3698  source ~/pon
 3699  brew install gitlab-runner
 3700  brew services start gitlab-runner
 3701  ls /usr/local/bin
 3702  ls -l  /usr/local/bin
 3703  which gitlab-runner
 3704  ls -l  /usr/local/bin/g*
 3705  ls -l  /usr/local/bin/gitlab-runner
 3706  chmod +x   /usr/local/bin/gitlab-runner
 3707  ls -l  /usr/local/bin/gitlab-runner
 3708  gitlab-runner
 3709  ll
 3710  ls -la
 3711  gitlab-runner exec docker core-check-job
 3712  gitlab-runner stop
 3713  gitlab-runner exec docker core-check-job
 3714  gitlab-runner run
 3715  gitlab-runner start
 3716  gitlab-runner run
 3717  docker container ls
 3718  teraform 
 3719  cd Dev
 3720  cd
 3721  cd Dev/lilo
 3722  ll
 3723  python Test_selenium.py
 3724  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 3725  ll
 3726  code .
 3727  ll
 3728  clear
 3729  cd ..
 3730  ll
 3731  cd kubeflow-core
 3732  ll
 3733  cd instance
 3734  ll
 3735  ll -la
 3736  cd .terraform
 3737  ll
 3738  cd plugins
 3739  ll
 3740  cd
 3741  c
 3742  cd - 
 3743  ll
 3744  cd darwin_amd64
 3745  ll
 3746  head terraform-provider-flexibleengine_v1.6.0_x4
 3747  tar -xzvf terraform-provider-flexibleengine_v1.6.0_x4
 3748  unzip terraform-provider-flexibleengine_v1.6.0_x4
 3749  clear
 3750  ll
 3751  clear
 3752  head terraform-provider-flexibleengine_v1.6.0_x4
 3753  cd ..
 3754  cd ./../..
 3755  cd ..
 3756  find . )name vault
 3757  find . -name vault
 3758  cd temp
 3759  ll
 3760  vault kv get --format json  secret/products/diod-fe/diod-kubeflow/qual | jq -r '.data
 3761  grep VAULT *
 3762  source env.txt
 3763  vault kv get --format json  secret/products/diod-fe/diod-kubeflow/qual | jq -r '.data
 3764  vault kv get --format json  secret/products/diod-fe/diod-kubeflow/qual | jq -r '.data'
 3765  vault kv get --format json  secret/products/diod-fe/diod-kubeflow/qual
 3766  vi env.txt
 3767  source env.txt
 3768  vault kv get --format json  secret/products/diod-fe/diod-kubeflow/qual
 3769  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-$SERVICE/$PF_ENV/instance
 3770  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/qual/instance
 3771  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance
 3772  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq ".modules"
 3773  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq ".modules.0"
 3774  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq ".modules[0]"
 3775  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq ".modules[1]"
 3776  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq ".modules[O].outputs"
 3777  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq ".modules[O]outputs"
 3778  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq ".modules[O].outputs"
 3779  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq -r ".modules[O].outputs"
 3780  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq -r '.modules[0].outputs.cce_cluster_id.value'
 3781  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq -r '.modules[0].outputs.cce_cluster_id'
 3782  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq -r '.modules[0].outputs
 3783  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq -r '.modules[0].outputs'
 3784  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq -r '.modules[0]'
 3785  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq -r '.modules[0].resources'
 3786  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq -r '.modules[0].resources.flexibleengine_cce_cluster_v3.cluster_1'
 3787  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq -r '.modules[0].resources."flexibleengine_cce_cluster_v3.cluster_1"'
 3788  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq -r '.modules[0].resources'
 3789  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq -r '.modules[0].resources.flexibleengine_cce_node_v3.node_1.1'
 3790  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq -r '.modules[0].resources."flexibleengine_cce_node_v3.node_1.1"'
 3791  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq -r '.modules[0].resources."flexibleengine_cce_node_v3.node_1.2"'
 3792  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq -r '.modules[0].resources."flexibleengine_cce_node_v3.node_1.2".primary.attributes'
 3793  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq -r '.modules[0].resources."flexibleengine_cce_node_v3.node_1.2"."primary"."attributes"'
 3794  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq -r '.modules[0].resources."flexibleengine_cce_node_v3.node_1.2".primary'
 3795  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq -r '.modules[0].resources."flexibleengine_cce_node_v3.node_1.2"'
 3796  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq -r '.modules[0].resources."flexibleengine_cce_node_v3.node_1.0"'
 3797  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq -r '.modules[0].resources."flexibleengine_cce_node_v3.node_1.0".primary.attributes'
 3798  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq -r '.modules[0].resources."flexibleengine_cce_node_v3.node_1.0".primary.attributes.private_ip'
 3799  /consul/bin/consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-$SERVICE/$PF_ENV/instance 
 3800  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-$SERVICE/$PF_ENV/instance 
 3801  ll
 3802  cat env.txt
 3803  vi env.txt
 3804  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance 
 3805  cd ../k8s
 3806  sh ./testgetIP.sh
 3807  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq -r '.modules[0].resources."flexibleengine_cce_node_v3.node_1.0"'
 3808  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq -r '.modules[0].resources."flexibleengine_cce_node_v3.node_1.0"..primary.attributes.private_ip'
 3809  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq -r '.modules[0].resources."flexibleengine_cce_node_v3.node_1.0".primary.attributes.private_ip'
 3810  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq -r '.modules[0].resources."flexibleengine_cce_node_v3.node_1.2".primary.attributes.private_ip'
 3811  echo
 3812  echo $ip
 3813  sh ./testgetIP.sh
 3814  bash ./testgetIP.sh
 3815  sh ./testgetIP.sh
 3816  cd
 3817  cd Dev/lilo
 3818  ll
 3819  python Test_selenium.py
 3820  cd ../
 3821  cd lilo
 3822  python Test_selenium.py
 3823  wget -O guard https://github.com/appscode/guard/releases/download/0.4.0/guard-darwin-amd64 \\n  && chmod +x guard \\n  && sudo mv guard /usr/local/bin/
 3824  source ~/poff
 3825  wget -O guard https://github.com/appscode/guard/releases/download/0.4.0/guard-darwin-amd64 \\n  && chmod +x guard \\n  && sudo mv guard /usr/local/bin/
 3826  wget https://github.com/appscode/guard/releases/download/0.4.0/guard-darwin-amd64
 3827  curl  https://github.com/appscode/guard/releases/download/0.4.0/guard-darwin-amd64
 3828  mv ~/Downloads/guard-darwin-amd64 .
 3829  ll
 3830  mv guard-darwin-amd64 guard
 3831  ll
 3832  chmod +x guard
 3833  ll
 3834  sudo mv guard /usr/local/bin/
 3835  quard
 3836  guar
 3837  guard
 3838  guard get
 3839  guard get token
 3840  guard get token --vmodule
 3841  guard get token --vmodule="pk11'
 3842  guard get token --vmodule="pk11"
 3843  guard get token --vmodule "pk11"
 3844  cd
 3845  cd Dev/lilo
 3846  python Test_selenium.py
 3847  cd 
 3848  cd Dev/lilo
 3849  python Test_selenium.py
 3850  cd Dev
 3851  cd kubeflow/install-de-di
 3852  ll
 3853  cd kubeflow-core
 3854  ll
 3855  cat fe-openrc.sh
 3856  source fe-openrc.sh
 3857  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance
 3858  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq -r '.modules[0].resources'
 3859  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq -r '.modules[0].resource
 3860  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq -r '.modules[0]`
 3861  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq -r '.modules[0]'
 3862  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq -r '.modules[0].outputs'
 3863  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq -r '.modules[0].outputs.cce_cluster_internal_endpoint'
 3864  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq -r '.modules[0].outputs.cce_cluster_internal_endpoint.value'
 3865  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq -r '.modules[0].outputs.cce_cluster_internal_certificate_clusters.value[0]'
 3866  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq -r '.modules[0].outputs.cce_cluster_internal_certificate_clusters.value[0].certificate_authority_data'
 3867  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq -r '.modules[0].outputs.cce_cluster_internal_certificate_clusters.value[0].certificate_authority_data' | base64 -d
 3868  consul kv get -http-addr=$CONSUL_HTTP_ADDR -token=$CONSUL_HTTP_TOKEN diod-fe/diod-kubeflow/dev2/instance | jq -r '.modules[0].outputs'
 3869  ll
 3870  code .
 3871  kubectl config view
 3872  kubectl cluster-info
 3873  helm version
 3874  helm init --help 
 3875  cd ..
 3876  ll
 3877  cd temp
 3878  ll
 3879  tar -xvf kfctl_v0.7.0_darwin.tar.gz
 3880  ll
 3881  tar -xvf kfctl_v0.7.0_darwin.tar.gz
 3882  mv kfctl-darwin kfctl
 3883  export CONFIG_URI="https://raw.githubusercontent.com/kubeflow/manifests/v0.7-branch/kfdef/kfctl_k8s_istio.0.7.0.yaml"
 3884  mkdir kubeflow
 3885  cd kubeflow
 3886  ll
 3887  kfctl build -V -f ${CONFIG_URI}
 3888  ./kfctl build -V -f ${CONFIG_URI}
 3889  ../kfctl build -V -f ${CONFIG_URI}
 3890  source ~/pon
 3891  ../kfctl build -V -f ${CONFIG_URI}
 3892  ll
 3893  ls -la
 3894  cd kustomize
 3895  ll
 3896  cd ..
 3897  ls .cache
 3898  ll
 3899  grep -r "ReadWrite" kustomize
 3900  code ?
 3901  code .
 3902  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 3903  ll
 3904  cd
 3905  ll
 3906  curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.16.0/bin/linux/amd64/kubectl
 3907  source ~/pon
 3908  curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.16.0/bin/linux/amd64/kubectl
 3909  ll
 3910  scp kubctl  diod@172.24.137.169+SSH+osbi7352@diodbastion-qualif.bigdata.intraorange:/home/diod
 3911  ll
 3912  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 3913  scp kubctl  diod@172.24.137.169+SSH+osbi7352@diodbastion-qualif.bigdata.intraorange:/home/diod/kubectl
 3914  scp kubectl  diod@172.24.137.169+SSH+osbi7352@diodbastion-qualif.bigdata.intraorange:/home/diod/kubectl
 3915  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 3916  local
 3917  local --help
 3918  code .kube 
 3919  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 3920  export KUBECONFIG=$HOME/.kube/config-10
 3921  export KUBECONFIG=$HOME/.kube/kubeconfig-cce.json
 3922  kubectl cluster-info
 3923  kubectl get ns
 3924  ipython
 3925  ipython2
 3926  ipython
 3927  jupyter notebook
 3928  kubectl get ns
 3929  kubectl get ns kubeflpw -oyaml
 3930  kubectl get ns kubeflow -oyaml
 3931  kubectl get ns seb -oyaml
 3932  rxit
 3933  exit
 3934  cd .kube
 3935  ls
 3936  vi config-aks
 3937  export KUBECONFIG=$HOME/.kube/config-aks
 3938  kubectl get all
 3939  kubectl get all --all-namespaces
 3940  kubectl apply -f https://k8s.io/examples/controllers/nginx-deployment.yaml
 3941  kubectl get all --all-namespaces
 3942  cd
 3943  exit
 3944  cd Dev
 3945  ll
 3946  mkdir khiops
 3947  cd khiops
 3948  ll
 3949  tar xzvf khiops-dev-9.0.deb
 3950  ll
 3951  tar xzvf data.tar.xz
 3952  ll
 3953  cd usr
 3954  ls
 3955  cD.. 
 3956  cd ..
 3957  tree
 3958  code .
 3959  ls -lR
 3960  /Users/seb/anaconda3/bin/python /Users/seb/.vscode/extensions/ms-python.python-2019.10.44104/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 64878 /Users/seb/Dev/khiops/test-khiops.py 
 3961  ll
 3962  python test-khiops.py
 3963  ll
 3964  source /Users/seb/anaconda3/bin/activate
 3965  conda activate base
 3966  docker run -it -v $(pwd):/data ubuntu bash
 3967  docker run -it -v $(pwd):/data python bash
 3968  cd ../
 3969  ll
 3970  cd ../
 3971  cd Documents/formation/DSO
 3972  ll
 3973  cd Support\ Formation
 3974  cd Jour\ 12
 3975  ll
 3976  cd Lab-20191118/
 3977  ll
 3978  jupyter notebook
 3979  cd ""
 3980  ll
 3981  cd Test\ git
 3982  ll
 3983  git clone https://gitlab.forge.orange-labs.fr/kubeflow/demo-cu.git
 3984  docker run -it -v $(pwd):/data python bash
 3985  vi python_in_linux.sh
 3986  cd ..
 3987  cd immo
 3988  ll
 3989  tree
 3990  cd output
 3991  ll
 3992  cat addrfh
 3993  ll
 3994  curl http://maps.googleapis.com/maps/api/geocode/json\?address\=546%20rue%20Baruch%20de%20Spinoza,%20Avignon\&sensor\=false
 3995  cd ..
 3996  ll
 3997  pyton api-maps.py
 3998  python api-maps.py
 3999  python api-maps.py | jq 
 4000  python api-maps.py | jq .
 4001  ll
 4002  bas request.sh
 4003  bash request.sh
 4004  cd ../..
 4005  cd ..
 4006  cd ../..
 4007  ll
 4008  cd ../Dev
 4009  cd immo
 4010  ll
 4011  pip install datatable 
 4012  cd ../
 4013  cd 
 4014  cd Documents/formation/DSO
 4015  cd Jour\ 14
 4016  cd Support\ Formation
 4017  cd Jour\ 14
 4018  ll
 4019  jupyter notebook
 4020  code .
 4021  wc -l data/*
 4022  exit
 4023  wc -l data/*
 4024  ll
 4025  cd dat
 4026  grep 2fmCon *
 4027  cd data
 4028  grep 2fmCon *
 4029  grep 2FmCon *
 4030  ll
 4031  conda activate base
 4032  conda update
 4033  conda update --prefix /Users/seb/anaconda3 anaconda
 4034  conda list 
 4035  cd 
 4036  cd Dev/temp
 4037  ll
 4038  python puissance4.py
 4039  code .
 4040  python puissance4-corrige.py
 4041  code .
 4042  curl https://auth.tech.orange/.well-known/openid-configuration
 4043  curl https://auth.tech.orange/.well-known/openid-configuration | jq
 4044  base64 -d eyJhbGciOiJSUzI1NiIsImtpZCI6IjlkNDQ3NDFmNzczYjkzOGNmNjVkZDMyNjY4NWI4NjE4MGMzMjRkOTkifQ.eyJpc3MiOiJodHRwOi8vMTI3LjAuMC4xOjU1NTYvZGV4Iiwic3ViIjoiQ2djeU16UXlOelE1RWdabmFYUm9kV0kiLCJhdWQiOiJleGFtcGxlLWFwcCIsImV4cCI6MTQ5Mjg4MjA0MiwiaWF0IjoxNDkyNzk1NjQyLCJhdF9oYXNoIjoiYmk5NmdPWFpTaHZsV1l0YWw5RXFpdyIsImVtYWlsIjoiZXJpYy5jaGlhbmdAY29yZW9zLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJncm91cHMiOlsiYWRtaW5zIiwiZGV2ZWxvcGVycyJdLCJuYW1lIjoiRXJpYyBDaGlhbmcifQ.OhROPq_0eP-zsQRjg87KZ4wGkjiQGnTi5QuG877AdJDb3R2ZCOk2Vkf5SdP8cPyb3VMqL32G4hLDayniiv8f1_ZXAde0sKrayfQ10XAXFgZl_P1yilkLdknxn6nbhDRVllpWcB12ki9vmAxklAr0B1C4kr5nI3-BZLrFcUR5sQbxwJj4oW1OuG6jJCNGHXGNTBTNEaM28eD-9nhfBeuBTzzO7BKwPsojjj4C9ogU4JQhGvm_l4yfVi0boSx8c0FX3JsiB0yLa1ZdJVWVl9m90XmbWRSD85pNDQHcWZP9hR6CMgbvGkZsgjG32qeRwUL_eNkNowSBNWLrGNPoON1gMg
 4045  echo eyJhbGciOiJSUzI1NiIsImtpZCI6IjlkNDQ3NDFmNzczYjkzOGNmNjVkZDMyNjY4NWI4NjE4MGMzMjRkOTkifQ.eyJpc3MiOiJodHRwOi8vMTI3LjAuMC4xOjU1NTYvZGV4Iiwic3ViIjoiQ2djeU16UXlOelE1RWdabmFYUm9kV0kiLCJhdWQiOiJleGFtcGxlLWFwcCIsImV4cCI6MTQ5Mjg4MjA0MiwiaWF0IjoxNDkyNzk1NjQyLCJhdF9oYXNoIjoiYmk5NmdPWFpTaHZsV1l0YWw5RXFpdyIsImVtYWlsIjoiZXJpYy5jaGlhbmdAY29yZW9zLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJncm91cHMiOlsiYWRtaW5zIiwiZGV2ZWxvcGVycyJdLCJuYW1lIjoiRXJpYyBDaGlhbmcifQ.OhROPq_0eP-zsQRjg87KZ4wGkjiQGnTi5QuG877AdJDb3R2ZCOk2Vkf5SdP8cPyb3VMqL32G4hLDayniiv8f1_ZXAde0sKrayfQ10XAXFgZl_P1yilkLdknxn6nbhDRVllpWcB12ki9vmAxklAr0B1C4kr5nI3-BZLrFcUR5sQbxwJj4oW1OuG6jJCNGHXGNTBTNEaM28eD-9nhfBeuBTzzO7BKwPsojjj4C9ogU4JQhGvm_l4yfVi0boSx8c0FX3JsiB0yLa1ZdJVWVl9m90XmbWRSD85pNDQHcWZP9hR6CMgbvGkZsgjG32qeRwUL_eNkNowSBNWLrGNPoON1gMg | base64 -d
 4046  echo eyJhbGciOiJSUzI1NiIsImtpZCI6IjlkNDQ3NDFmNzczYjkzOGNmNjVkZDMyNjY4NWI4NjE4MGMzMjRkOTkifQ.eyJpc3MiOiJodHRwOi8vMTI3LjAuMC4xOjU1NTYvZGV4Iiwic3ViIjoiQ2djeU16UXlOelE1RWdabmFYUm9kV0kiLCJhdWQiOiJleGFtcGxlLWFwcCIsImV4cCI6MTQ5Mjg4MjA0MiwiaWF0IjoxNDkyNzk1NjQyLCJhdF9oYXNoIjoiYmk5NmdPWFpTaHZsV1l0YWw5RXFpdyIsImVtYWlsIjoiZXJpYy5jaGlhbmdAY29yZW9zLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJncm91cHMiOlsiYWRtaW5zIiwiZGV2ZWxvcGVycyJdLCJuYW1lIjoiRXJpYyBDaGlhbmcifQ.OhROPq_0eP-zsQRjg87KZ4wGkjiQGnTi5QuG877AdJDb3R2ZCOk2Vkf5SdP8cPyb3VMqL32G4hLDayniiv8f1_ZXAde0sKrayfQ10XAXFgZl_P1yilkLdknxn6nbhDRVllpWcB12ki9vmAxklAr0B1C4kr5nI3-BZLrFcUR5sQbxwJj4oW1OuG6jJCNGHXGNTBTNEaM28eD-9nhfBeuBTzzO7BKwPsojjj4C9ogU4JQhGvm_l4yfVi0boSx8c0FX3JsiB0yLa1ZdJVWVl9m90XmbWRSD85pNDQHcWZP9hR6CMgbvGkZsgjG32qeRwUL_eNkNowSBNWLrGNPoON1gMg | base64 -D
 4047  pwd
 4048  git clone https://github.com/openid/JWTConnect-Python-OidcRP.git
 4049  source ~/pon
 4050  git clone https://github.com/openid/JWTConnect-Python-OidcRP.git
 4051  cd JWTConnect-Python-OidcRP
 4052  ll
 4053  cd chrp
 4054  ll
 4055  cod e.
 4056  code .
 4057  ./make_opbyuid_html.py conf > html/opbyuid.html
 4058  ./rp.py -t -k conf
 4059  pip install cherrypy
 4060  oidcrp
 4061  pip install oidcrp
 4062  ./rp.py -t -k conf
 4063  ./make_opbyuid_html.py conf > html/opbyuid.html
 4064  ./rp.py -t -k conf
 4065  ./make_opbyuid_html.py conf > html/opbyuid.html
 4066  ./rp.py -t -k conf
 4067  curl www.google.fr
 4068  source ~/pon
 4069  curl www.google.fr
 4070  cd
 4071  cd Dev
 4072  ls
 4073  kubectl get all --all-namespaces
 4074  ls
 4075  cd 
 4076  ll
 4077  cd .kube
 4078  ll
 4079  export KUBECONFIG=$HOME/.kube/config-aks
 4080  ls -ltr
 4081  cat kubeconfig-cce-fe.json
 4082  ls -ltr
 4083  cat kubeconfig-cce.json
 4084  export KUBECONFIG=$HOME/.kube/kubeconfig-cce.json
 4085  kubectl get all --all-namespaces
 4086  curl -X GET \\n     "https://inside01.api.intraorange/openidconnect/internal/v1/authorize?\\n     &response_type=code\\n     &client_id=6KRHymujF...8SG2g\\n     &scope=openid\\n     &state=upToYouData\\n     &redirect_uri=https%3A%2F%2Fwww.myserver.com"
 4087  curl -X GET "https://inside01.api.intraorange/openidconnect/internal/v1/authorize?&response_type=code&client_id=a9riOuXICHWpoFfs3wq7Q7vxblWvyQ2i&scope=openid&state=upToYouData&redirect_uri=https%3A%2F%2Fwww.myserver.com"
 4088  curl -X -v GET "https://inside01.api.intraorange/openidconnect/internal/v1/authorize?&response_type=code&client_id=a9riOuXICHWpoFfs3wq7Q7vxblWvyQ2i&scope=openid&state=upToYouData&redirect_uri=https%3A%2F%2Fwww.myserver.com"
 4089  curl -X -V GET "https://inside01.api.intraorange/openidconnect/internal/v1/authorize?&response_type=code&client_id=a9riOuXICHWpoFfs3wq7Q7vxblWvyQ2i&scope=openid&state=upToYouData&redirect_uri=https%3A%2F%2Fwww.myserver.com"
 4090  curl -X GET "https://inside01.api.intraorange/openidconnect/internal/v1/authorize?&response_type=code&client_id=a9riOuXICHWpoFfs3wq7Q7vxblWvyQ2i&scope=openid&state=upToYouData&redirect_uri=https%3A%2F%2Fdi-diod-kubeflow.itn.intraorange%2Foidc%2Fcallback"
 4091  curl -X GET "https://inside01.api.intraorange/openidconnect/internal/v1/authorize?&response_type=code&client_id=a9riOuXICHWpoFfs3wq7Q7vxblWvyQ2i&scope=openid&state=upToYouData&redirect_uri=https%3A%2F%2Fdi-diod-kubeflow.itn.intraorange%2Foidc%2Fcallback" -v
 4092  curl -X GET "https://openid.sso.infra.ftgroup/oidc/authorize\?response_type\=code\&client_id\=a9riOuXICHWpoFfs3wq7Q7vxblWvyQ2i\&scope\=openid\&state\=upToYouData\&redirect_uri\=https%3A%2F%2Fdi-diod-kubeflow.itn.intraorange%2Foidc%2Fcallback\&charset\=utf8"
 4093  cd
 4094  cd -
 4095  ll
 4096  export KUBECONFIG=$HOME/.kube/kubeconfig-cce.json
 4097  cp kubeconfig-cce.json config
 4098  cd ../Dev/kubeflow/install-de-di
 4099  ll
 4100  cd kbu
 4101  cd kubeflow-core
 4102  ll
 4103  cd ../temp
 4104  ll
 4105  cd manifests-master
 4106  ll
 4107  cd kf
 4108  ll
 4109  cd kfdef
 4110  ll
 4111  grep path kfctl_existing_arrikto.yaml
 4112  grep path kfctl_existing_arrikto.yaml | sort
 4113  grep path kfctl_k8s_istio.yaml
 4114  grep path kfctl_k8s_istio.yaml | sort
 4115  cd ../..
 4116  ll
 4117  cd ..
 4118  ll
 4119  cd kubeflow-core
 4120  ll
 4121  git push -u origin master
 4122  git push
 4123  cd ../
 4124  ll
 4125  cd temp
 4126  ll
 4127  cd manifests-master
 4128  ll
 4129  cd istio
 4130  ll
 4131  cd oidc-authservice
 4132  ll
 4133  kustomize build overlays/application
 4134  ll
 4135  cd ..
 4136  ll
 4137  cd ..
 4138  ll
 4139  mkdir test_install_v7
 4140  cd test_install_v7
 4141  ll
 4142  export curr_rep=$(pwd)
 4143  export KF_NAME='kubeflow'
 4144  mkdir inst_kubeflow
 4145  cd inst_kubeflow
 4146  pwd
 4147  cp ../../../kubeflow-core/conf_kubeflow/kfctl_k8s_istio_v0.7.0.yaml .
 4148  ll
 4149  pwd
 4150  kfctl build -V -f /Users/seb/Dev/kubeflow/install-de-di/temp/test_install_v7/inst_kubeflow/kfctl_k8s_istio_v0.7.0.yaml
 4151  which kfctl
 4152  cd 
 4153  cd Downloads
 4154  ll
 4155  ls -ltr
 4156  tar -xvf kfctl_v0.7.0_darwin.tar.gz
 4157  ll
 4158  ls -ltr
 4159  tar -xvf kfctl_v0.7.0_darwin\ \(1\).tar.gz
 4160  ll k*
 4161  which kfctl
 4162  cp kfctl-darwin /usr/local/bin/kfctl
 4163  kfctl version
 4164  exit
 4165  kfctl build -V -f /Users/seb/Dev/kubeflow/install-de-di/temp/test_install_v7/inst_kubeflow/kfctl_k8s_istio_v0.7.0.yaml
 4166  source ~/pon
 4167  kfctl build -V -f /Users/seb/Dev/kubeflow/install-de-di/temp/test_install_v7/inst_kubeflow/kfctl_k8s_istio_v0.7.0.yaml
 4168  ll
 4169  ls -la
 4170  ls kustomize
 4171  ls kustomize/istio
 4172  wget -O kfctl_arrikto.yaml https://raw.githubusercontent.com/kubeflow/manifests/dc04ff600cee722d93cf80d413aa73ddd8387f1f/kfdef/kfctl_existing_arrikto.0.7.0.yaml
 4173  source ~/pon
 4174  wget -O kfctl_arrikto.yaml https://raw.githubusercontent.com/kubeflow/manifests/dc04ff600cee722d93cf80d413aa73ddd8387f1f/kfdef/kfctl_existing_arrikto.0.7.0.yaml
 4175  wget --no-check-certificate -O kfctl_arrikto.yaml https://raw.githubusercontent.com/kubeflow/manifests/dc04ff600cee722d93cf80d413aa73ddd8387f1f/kfdef/kfctl_existing_arrikto.0.7.0.yaml
 4176  ll
 4177  cat kfctl_arrikto.yaml
 4178  kfctl build -V -f kfctl_arrikto.yaml
 4179  ll
 4180  rm -rf kustomize
 4181  kfctl build -V -f kfctl_arrikto.yaml
 4182  rm -rf kustomize
 4183  cp ../../../kubeflow-core/conf_kubeflow/kfctl_k8s_istio_v0.7.0.yaml .
 4184  kfctl build -V -f kfctl_k8s_istio_v0.7.0.yaml
 4185  git push
 4186  kubectl get all --all-namespaces
 4187  cd ..`\ncd ..
 4188  cd ../..
 4189  cd ..
 4190  ;l
 4191  ll
 4192  cd ..
 4193  ll
 4194  cd demo-cu
 4195  ll
 4196  code .
 4197  s2i 
 4198  s2i build --help
 4199  env | grep LD
 4200  l
 4201  ldd
 4202  docker run -it -v $(pwd):/data python bash
 4203  cd ../..
 4204  cd kubeflow
 4205  cd ..
 4206  ll
 4207  cd khiops
 4208  ll
 4209  c KNI
 4210  cd KNI
 4211  cd KNI2
 4212  ll
 4213  unzip PourSebastien.zip
 4214  ll
 4215  cd PourSebastien
 4216  ll
 4217  mv * ..
 4218  cd ..
 4219  ll
 4220  cd ..
 4221  ll
 4222  docker run -it -v $(pwd):/data python bash
 4223  docker run -it -v $(pwd):/data python:2.7 bash
 4224  cd ..
 4225  cd immo
 4226  cd data
 4227  ll
 4228  hehad valeursfoncieres-2018.txt
 4229  head valeursfoncieres-2018.txt
 4230  kubectl get all --all-namespaces
 4231  cd ..
 4232  kubectl get pods -n istio-system
 4233  kubectl logs -n istio-system authservice-5c998b9c4f-pm6mb
 4234  kubectl logs -n istio-system istio-ingressgateway-7d98d8f5cb-ll5wx 
 4235  kubectl get pods -n istio-system
 4236  kgns
 4237  kga -n auth
 4238  kl pod/dex-84dcc97bc5-kffkz 
 4239  kbectl logs  pod/dex-84dcc97bc5-kffkz 
 4240  kubectl logs  pod/dex-84dcc97bc5-kffkz 
 4241  kubectl logs  pod/dex-84dcc97bc5-kffkz -n auth
 4242  curl -X get "https://di-diod-kubeflow.itn.intraorange"
 4243  curl -X -v get "https://di-diod-kubeflow.itn.intraorange"
 4244  curl -X -v get "https://di-diod-kubeflow.itn.intraorange/"
 4245  source ~/pon
 4246  curl -X -v get "https://di-diod-kubeflow.itn.intraorange/"
 4247  source ~/poff
 4248  curl -X -v get "https://di-diod-kubeflow.itn.intraorange/"
 4249  exit
 4250  curl -X -v get "https://di-diod-kubeflow.itn.intraorange/"
 4251  curl -X GET -v "https://di-diod-kubeflow.itn.intraorange/"
 4252  curl -X GET -v "https://di-diod-kubeflow.itn.intraorange/dex/auth?client_id=kubeflow-oidc-authservice&redirect_uri=%2Flogin%2Foidc&response_type=code&scope=profile+email+groups+openid&state=MTU3NDg0Mjg5MXxFd3dBRUdSaFkxRjJiRVpLV1hoTVpIZzRkMUU9fB6VWfGTxxsIvQ-T-e15UbtcYnlAFS5HBvUZvlCyMplX"
 4253  k9s
 4254  cd Dev
 4255  ls
 4256  cd kubeflow/install-de-di
 4257  l
 4258  cd ../
 4259  ll
 4260  cd dam
 4261  cd demo-cu
 4262  ll
 4263  cd 4-\ request\ model
 4264  ll
 4265  python Test_service.py -t 10 -i 1000 -b 5
 4266  source ~/po
 4267  source ~/pon
 4268  python Test_service.py -t 10 -i 1000 -b 5
 4269  python Test_service.py -t 10 -i 1000 -b 5 -v
 4270  kubectl port-forward svc/istio-ingressgateway -n istio-system 8080:80
 4271  cd ..
 4272  cd inst_kubeflow
 4273  ll
 4274  cd ..
 4275  ll
 4276  cd install-de-di
 4277  ll
 4278  cd temp
 4279  ll
 4280  cd test_install_v7
 4281  ll
 4282  l
 4283  touch setup_config.sh
 4284  brew install bashdb
 4285  source ~/pon
 4286  brew install bashdb
 4287  ll
 4288  cd inst_kubeflow
 4289  ll
 4290  cd ..
 4291  ll
 4292  ll kubeflow
 4293  bash
 4294  pwd
 4295  ll
 4296  cd kubeflow
 4297  ll
 4298  kfctl apply -V -f kfctl_k8s_istio_v0.7.0.yaml
 4299  kfctl delete -V -f kfctl_k8s_istio_v0.7.0.yaml
 4300  kfctl apply -V -f kfctl_k8s_istio_v0.7.0.yaml
 4301  kubectl get pods -n kubeflow
 4302  kubectl get namespaces
 4303  kubectl get all --all-namespaces
 4304  cd 
 4305  cd .kube
 4306  ll
 4307  ls -ltr ~/Downloads
 4308  cp ~/Downloads/kubeconfig-2.json .
 4309  ll
 4310  ls -ltr
 4311  cat config
 4312  vi kubeconfig-2.json
 4313  code .
 4314  export KUBECONFIG=$HOME/.kube/kubeconfig-2.json
 4315  kubectl cluster-info
 4316  kubectl get all --all-namespaces
 4317  begin\n  set -x; set temp_dir (mktemp -d); cd "$temp_dir" &&\n  curl -fsSLO "https://github.com/kubernetes-sigs/krew/releases/download/v0.3.2/krew.{tar.gz,yaml}" &&\n  tar zxvf krew.tar.gz &&\n  set KREWNAME krew-(uname | tr '[:upper:]' '[:lower:]')_amd64 &&\n  ./$KREWNAME install \\n    --manifest=krew.yaml --archive=krew.tar.gz &&\n  set -e KREWNAME; set -e temp_dir\nend
 4318  set -x; set temp_dir (mktemp -d); cd "$temp_dir"
 4319  curl -fsSLO "https://github.com/kubernetes-sigs/krew/releases/download/v0.3.2/krew.{tar.gz,yaml}"
 4320  ll
 4321  set +x
 4322  ll
 4323  tar zxvf krew.tar.gz
 4324  set KREWNAME krew-(uname | tr '[:upper:]' '[:lower:]')_amd64
 4325  uname
 4326  uname | tr '[:upper:]' '[:lower:]'
 4327  set KREWNAME krew-$(uname | tr '[:upper:]' '[:lower:]')_amd64
 4328  env
 4329  env | sort
 4330  export KREWNAME krew-$(uname | tr '[:upper:]' '[:lower:]')_amd64
 4331  ll
 4332  ./krew-darwin_amd64 install --manifest=krew.yaml --archive=krew.tar.gz
 4333  set -gx PATH $PATH $HOME/.krew/bin
 4334  exit
 4335  kfctl apply -V -f kfctl_k8s_istio_v0.7.0.yamlexit
 4336  exit
 4337  kubectl krew
 4338  kubectl krew --help 
 4339  kubectl plugin list
 4340  ls
 4341  ls -la
 4342  (\n  set -x; cd "$(mktemp -d)" &&\n  curl -fsSLO "https://github.com/kubernetes-sigs/krew/releases/download/v0.3.2/krew.{tar.gz,yaml}" &&\n  tar zxvf krew.tar.gz &&\n  ./krew-"$(uname | tr '[:upper:]' '[:lower:]')_amd64" install \\n    --manifest=krew.yaml --archive=krew.tar.gz\n)
 4343  source ~/pon
 4344  (\n  set -x; cd "$(mktemp -d)" &&\n  curl -fsSLO "https://github.com/kubernetes-sigs/krew/releases/download/v0.3.2/krew.{tar.gz,yaml}" &&\n  tar zxvf krew.tar.gz &&\n  ./krew-"$(uname | tr '[:upper:]' '[:lower:]')_amd64" install \\n    --manifest=krew.yaml --archive=krew.tar.gz\n)
 4345  vi .zshrc
 4346  exit
 4347  kubectl plugin list
 4348  kubectl krew install access-matrix
 4349  source ~/pon
 4350  kubectl krew install access-matrix
 4351  rakess
 4352  rakkess
 4353  kubectl access-matrix
 4354  kubectl access-matrix r cm
 4355  kubectl access-matrix r svc
 4356  kubect get pods -n auth
 4357  kubectl get pods -n auth
 4358  kl -n auth  pod/dex-84dcc97bc5-7kk9m
 4359  kubectl get pod -n istio-system
 4360  kubectl logs istio-policy-5df9ddd8bc-wg6xf 
 4361  kubectl logs istio-policy-5df9ddd8bc-wg6xf -n istio-system 
 4362  kubectl logs istio-policy-5df9ddd8bc-wg6xf -n istio-system -c mixer
 4363  kubectl logs istio-policy-5df9ddd8bc-wg6xf -n istio-system -c mixer | grep ControlZ
 4364  kubectl port-forward istio-policy-5df9ddd8bc-wg6xf -n istio-system 8080:9876
 4365  kubectl get svc -n istio-ssytem
 4366  kubectl get svc -n istio-system
 4367  kubectl logs svc/authservice -n istio-system
 4368  kubectl logs --help 
 4369  kubectl logs svc/authservice -n istio-system -f
 4370  kubectl get crb 
 4371  kubectl get crb --all-namespaces
 4372  kubectl get crd --all-namespaces
 4373  kubectl get crd/gateways.networking.istio.io    --all-namespaces
 4374  kubectl get crd/gateways.networking.istio.io    --all-namespaces -o yaml
 4375  kubectl get crd --all-namespaces
 4376  kubectl get clusterrolebindings
 4377  kubectl get clusterrolebindings dex
 4378  kubectl get clusterrolebindings dex -o yaml
 4379  kubectl get clusterrole
 4380  kubectl get clusterrole dex -o yaml
 4381  kubectl get clusterrole -o yaml
 4382  cd Dev/kubeflow/install-de-di/
 4383  ll
 4384  cd temp
 4385  ll
 4386  kubectl get clusterrole -o yaml > clusterroles.txt
 4387  kubectl get clusterrole -o yaml > clusterroles.yaml
 4388  kubectl get AuthorizationPolicy 
 4389  kubectl get AuthorizationPolicy --all-namespaces
 4390  kubectl get policies.authentication.istio.io --all-namespaces
 4391  kubectl get meshpolicies.authentication.istio.io
 4392  kubectl get meshpolicies.authentication.istio.io -o yaml
 4393  kubectl get services -n kubeflow
 4394  kubectl port-forward service/centraldashboard -n kubeflow
 4395  kubectl port-forward service/centraldashboard -n kubeflow 8080:80
 4396  kubectl get services -n auth
 4397  kubectl port-forward service/dex -n auth 8080:5556
 4398  kubectl get vs --all-namespaces
 4399  kubectl get vs --all-namespaces -oyaml
 4400  kubectl get vs --all-namespaces -oyaml | grep login
 4401  kubectl get vs --all-namespaces -oyaml | grep dex
 4402  kubectl logs -n istio-system -l app=authservice
 4403  kubectl logs -n istio-system -l istio=ingressgateway
 4404  kubectl logs -n istio-system -l istio=ingressgateway -f
 4405  kubectl get servicerole --all-namespaces
 4406  kubectl get configmap dex -n auth -o jsonpath='{.data.config\.yaml}' > dex-config.yaml
 4407  kubectl create configmap dex --from-file=config.yaml=dex-config.yaml -n auth --dry-run -oyaml | kubectl apply -f -
 4408  kubectl rollout restart deployment dex -n auth
 4409  kubectl logs -n auth -l app=dex
 4410  kubectl rollout restart deployment dex -n auth
 4411  kubectl logs -n auth -l app=dex
 4412  kubectl rollout restart deployment dex -n auth
 4413  kubectl get pods -n auth
 4414  kubectl rollout restart dex-84dcc97bc5-7kk9m  -n auth
 4415  kubectl rollout restart pod dex-84dcc97bc5-7kk9m  -n auth
 4416  kubectl logs deploy/dex -n auth
 4417  kubectl rollout restart deployment dex -n auth
 4418  kubectl logs deploy/dex -n auth
 4419  kubectl describe deploy/dex -n auth
 4420  kubectl get cm -n auth
 4421  kubectl get cm -n auth -o yaml
 4422  kubectl create configmap dex --from-file=config.yaml=dex-config.yaml -n auth --dry-run -oyaml
 4423  kubectl create configmap dex --from-file=config.yaml=dex-config.yaml -n auth --dry-run -oyaml | kubectl apply -f -
 4424  kubectl rollout restart deployment dex -n auth
 4425  kubectl logs deploy/dex -n auth
 4426  kubectl logs deploy/dex -n auth -f
 4427  kubectl get cm -n auth -o yaml
 4428  kubectl rollout restart deployment dex -n auth
 4429  kubectl logs deploy/dex -n auth -f
 4430  kubectl rollout restart deployment dex -n auth
 4431  kubectl get svc -n istio-system istio-ingressgateway -o jsonpath='{.status.loadBalancer.ingress[0].ip}'
 4432  ll
 4433  cd test_install_v7
 4434  cd
 4435  cd -
 4436  ll
 4437  cd kubeflow
 4438  ll
 4439  cd kustomize
 4440  lll
 4441  ll
 4442  cd dex
 4443  ll
 4444  cd base
 4445  ll
 4446  kaf deployment.yaml -n auth
 4447  kubectl logs -n kubeflow svc/kfserving-webhook-server-service
 4448  kubectl logs -n kubeflow svc/kfserving-webhook-server-service manager
 4449  kubectl logs -n kubeflow svc/kfserving-webhook-server-service kube-rbac-proxy
 4450  kubectl logs -n auth dev
 4451  kubectl logs -n auth svc/dev
 4452  kubectl logs -n auth svc/dex
 4453  kubectl get pod -n auth
 4454  kubectl get deploy -n auth
 4455  kubectl describe -n auth dex
 4456  kubectl describe -n auth deploy/dex
 4457  cd
 4458  cd Dev
 4459  ll
 4460  cd kubeflow
 4461  ll
 4462  mkdir test_dex
 4463  cd test_dex
 4464  ll
 4465  source ~/pon
 4466  go get github.com/dexidp/dex
 4467  cd $GOPATH/src/github.com/dexidp/dex
 4468  ls $HOME/go
 4469  cd $HOME/src/github.com/dexidp/dex
 4470  cd $HOME/go/src/github.com/dexidp/dex
 4471  ll
 4472  make
 4473  cd ../..
 4474  cd ..
 4475  ll
 4476  mkdir hello
 4477  cd hello
 4478  vi hello.go
 4479  go build
 4480  ll
 4481  ./jhello 
 4482  ./hello 
 4483  cd $HOME/go/src/github.com/dexidp/dex
 4484  ll
 4485  make
 4486  xcode-select --install
 4487  make
 4488  ll
 4489  ./bin/dex serve examples/config-dev.yaml
 4490  ./bin/example-app
 4491  code .
 4492  ./bin/dex serve examples/config-seb.yaml
 4493  ./bin/dex --help
 4494  ./bin/dex toto
 4495  ./bin/dex serve examples/config-seb.yaml
 4496  curl https://inside01.api.intraorange/openidconnect/internal/v1/authorize
 4497  curl -v https://inside01.api.intraorange/openidconnect/internal/v1/authorize
 4498  curl -v https://openid.sso.infra.ftgroup/oidc/authorize\?\&charset\=utf8
 4499  curl -v https://openid.sso.infra.ftgroup/oidc/authorize?&charset=utf8
 4500  curl -v https://openid.sso.infra.ftgroup/oidc/authorize\?\&charset\=utf8
 4501  curl -v https://openid.sso.infra.ftgroup/oidc
 4502  curl -v https://openid.sso.infra.ftgroup
 4503  curl -v https://openid.sso.infra.ftgroup/oidc
 4504  curl -v https://openid.sso.infra.ftgroup/oidc/authorize
 4505  curl -v https://openid.sso.infra.ftgroup/oidc/token
 4506  curl -v https://openid.sso.infra.ftgroup/
 4507  cd .kube
 4508  cp ~/Downloads/kubeconfig-3.json .
 4509  code .
 4510  export KUBECONFIG=$HOME/.kube/kubeconfig-3.json
 4511  kubectl cluster-info
 4512  cp kubeconfig-3.json config
 4513  exit
 4514  ./bin/dex serve examples/config-seb.yaml
 4515  curl https://inside01.api.intraorange/openidconnect/internal/v1/.well-known/openid-configuration
 4516  curl https://inside01.api.intraorange/openidconnect/internal/.well-known/openid-configuration
 4517  curl https://inside01.api.intraorange/openidconnect/.well-known/openid-configuration
 4518  curl https://inside01.api.intraorange/openidconnect/internal/v1/openid-configuration
 4519  curl https://inside01.api.intraorange/openidconnect/.well-known/openid-configuration
 4520  curl https://inside01.api.intraorange/openidconnect/internal/v1/.well-known/openid-configuration
 4521  curl https://inside01.api.intraorange/openidconnect/internal/v1/openid-configuration
 4522  curl https://inside01.api.intraorange/openidconnect/internal/openid-configuration
 4523  curl https://inside01.api.intraorange/internal/openid-configuration
 4524  curl https://inside01.api.intraorange/openidconnect/internal/openid-configuration
 4525  curl https://inside01.api.intraorange/openidconnect/.well-known/openid-configuration
 4526  curl https://inside01.api.intraorange/openidconnect/v1/.well-known/openid-configuration
 4527  ./bin/dex serve examples/config-seb.yaml
 4528  ./bin/example-app
 4529  ./bin/dex serve examples/config-seb.yaml
 4530  ls /etc/hosts
 4531  cat  /etc/hosts
 4532  vi /etc/hosts
 4533  sudo vi /etc/hosts
 4534  nslookup di-diod-kubeflow.itn.intraorange
 4535  ping di-diod-kubeflow.itn.intraorange
 4536  ./bin/dex serve examples/config-seb.yaml
 4537  ./bin/example-app --help
 4538  ./bin/example-app --issuer "https://auth.tech.orange"
 4539  exit
 4540  ./bin/dex serve examples/config-seb.yaml
 4541  ./bin/example-app --issuer "https://auth.tech.orange" --debug --listern http://di-diod-kubeflow.itn.intraorange/
 4542  ./bin/example-app --issuer "https://auth.tech.orange" --debug --listen "http://di-diod-kubeflow.itn.intraorange/"
 4543  ./bin/example-app --issuer "https://auth.tech.orange" --debug --listen "http://di-diod-kubeflow.itn.intraorange:80/"
 4544  ./bin/example-app --issuer "https://auth.tech.orange" --debug --redirect-uri "http://di-diod-kubeflow.itn.intraorange/dex/callbak"
 4545  ./bin/dex serve examples/config-seb.yaml
 4546  ./bin/example-app --debug --redirect-uri "http://di-diod-kubeflow.itn.intraorange/dex/callbak"
 4547  ./bin/dex serve examples/config-seb.yaml
 4548  ./bin/example-app --debug --redirect-uri "http://di-diod-kubeflow.itn.intraorange/dex/callbak"
 4549  ./bin/dex serve examples/config-seb.yaml
 4550  ./bin/example-app --debug --redirect-uri "https://di-diod-kubeflow.itn.intraorange/dex/callback"
 4551  ./bin/example-app --debug 
 4552  ./bin/dex serve examples/config-seb.yaml
 4553  ./bin/example-app --debug 
 4554  ./bin/example-app --debug --issuer "http://di-diod-kubeflow.itn.intraorange:5556/dex"
 4555  url-quote-magic
 4556  ll
 4557  cd ..
 4558  cd ../..
 4559  cd ..
 4560  cd Dev
 4561  ls
 4562  cd kubeflow
 4563  ll
 4564  cd install-de-di
 4565  ll
 4566  cd temp
 4567  lll
 4568  ll
 4569  cd test_install_v7
 4570  ll
 4571  ls -la
 4572  rm -rf inst_kubeflow
 4573  ll
 4574  cd kubeflow
 4575  ll
 4576  rm -rf kustomize/
 4577  kfctl build -V -f kfctl_k8s_istio_v0.7.0.yaml
 4578  kfctl --help
 4579  kfctl show
 4580  kfctl show all
 4581  kfctl show all kfctl_k8s_istio_v0.7.0.yaml
 4582  kfctl show all -f kfctl_k8s_istio_v0.7.0.yaml
 4583  kfctl show k8s
 4584  rm -rf kustomize/
 4585  kfctl build -V -f kfctl_k8s_istio_v0.7.0.yaml
 4586  kustomize version
 4587  ll
 4588  tree
 4589  ll
 4590  kustomize 
 4591  kustomize  config
 4592  kustomize confid save
 4593  kustomize config save
 4594  kustomize config save -d ./config
 4595  kustomize build
 4596  kustomize build kustomize/dex
 4597  kustomize build kustomize/istio
 4598  kfctl build -V -f kfctl_k8s_istio_v0.7.0.yaml
 4599  rm -rf kustomize/
 4600  kfctl build -V -f kfctl_k8s_istio_v0.7.0.yaml
 4601  ll
 4602  pwd
 4603  cd ../..
 4604  ll
 4605  mkdir test_kustomize
 4606  cd test_kustomize
 4607  ll
 4608  DEMO_HOME=(pwd)
 4609  echo $DEMO_HHOME
 4610  DEMO_HOME=$(pwd)
 4611  echo $DEMO_HHOME
 4612  pwd
 4613  export DEMO_HOME=$(pwd)
 4614  echo $DEMO_HHOME
 4615  export DEMO_HOME=(pwd)
 4616  echo $DEMO_HHOME
 4617  export DEMO_HOME=$pwd
 4618  export DEMO_HOME= pwd
 4619  pwd
 4620  export DEMO_HOME=$(pwd)
 4621  export DEMO_HOME= $(pwd)
 4622  echo $DEMO_HHOME
 4623  echo $DEMO_HOME
 4624  export DEMO_HOME=$(pwd)
 4625  export DEMO_HOME=
 4626  export DEMO_HOME=''
 4627  export DEMO_HOME
 4628  export DEMO_HOME=''
 4629  unset
 4630  unset DEMO_HOHME
 4631  unset DEMO_HOME
 4632  export DEMO_HOME=''
 4633  echo $DEMO_HOME
 4634  export DEMO_HOME=$(pwd)
 4635  echo $DEMO_HOME
 4636  BASE=$DEMO_HOME/base
 4637  echo $BASE
 4638  mkdir -p $BASE
 4639  curl -s -o "$BASE/#1.yaml" "https://raw.githubusercontent.com\\n/kubernetes-sigs/kustomize\\n/master/examples/helloWorld\\n/{configMap,deployment,kustomization,service}.yaml"
 4640  ll
 4641  tree $DEMO_HOME
 4642  kustomize build base
 4643  kustomize build overlays/dev
 4644  kustomize build overlays/dev --enable_alpha_plugins
 4645  kustomize build overlays/dev
 4646  kustomize build base
 4647  kustomize build overlays/dev
 4648  pw
 4649  pwd
 4650  cd ..
 4651  ll
 4652  cd test_install_v7
 4653  ll
 4654  cd kubeflow
 4655  ll
 4656  kfctl 
 4657  kfctl apply -h
 4658  kfctl show -
 4659  kfctl show 
 4660  kfctl show -h
 4661  kfctl show all
 4662  kfctl show all -v
 4663  kfctl show all -V
 4664  kfctl show k8s -V
 4665  kfctl show platform -V
 4666  cat ~/.ssh/id_rsa.pub
 4667  ll
 4668  kfctl build --help 
 4669  kfctl build -V -f kfctl_k8s_istio_v0.7.0.yaml
 4670  source ~/pon
 4671  kfctl build -V -f kfctl_k8s_istio_v0.7.0.yaml
 4672  rm -rf kustomize
 4673  kfctl build -V -f kfctl_k8s_istio_v0.7.0.yamlinfo cp
 4674  info cp
 4675  kfctl build -V -f kfctl_k8s_istio_v0.7.0-build.yaml
 4676  ll
 4677  ../setup_config.sh
 4678  bash ../setup_config.sh
 4679  export CONFIG_FILE_NAME_BUILD="kfctl_k8s_istio_v0.7.0-build.yaml"\nexport CONFIG_FILE_NAME_APPLY="kfctl_k8s_istio_v0.7.0-apply.yaml"\nexport LOCAL_KFDEF="/Users/seb/Dev/kubeflow/install-de-di/kubeflow-core"
 4680  cp -R ${LOCAL_KFDEF}/conf_kubeflow/my_overlays/  kustomize
 4681  ll
 4682  bash ../setup_config.sh
 4683  kustomize build ./kustomize/istio-install > res-istio.yaml
 4684  bash ../setup_config.sh
 4685  kustomize build ./kustomize/istio-install > res-istio.yaml
 4686  ll kustomize/istio-install/overlays/cce
 4687  kustomize build ./kustomize/istio-install > res-istio.yaml
 4688  ll
 4689  vi res-istio.yaml
 4690  vi kfctl_k8s_istio_v0.7.0-build.yaml
 4691  vim kfctl_k8s_istio_v0.7.0-build.yaml
 4692  pwd
 4693  cd ../..
 4694  pwd
 4695  cd
 4696  cd Dev/kubeflow/install-de-di/
 4697  ll
 4698  git clone git@diodlab.bigdata.intraorange:diod/kubeflow/kubeflow-manifests.git
 4699  git clone https://diodlab.bigdata.intraorange/diod/kubeflow/kubeflow-manifests.git
 4700  ll
 4701  find . -name dex
 4702  ll
 4703  cd kubeflow-manifests
 4704  ll
 4705  pwd
 4706  curl https://diodlab.bigdata.intraorange/diod/kubeflow/kubeflow-manifests/-/archive/master/kubeflow-manifests-master.tar.gz
 4707  curl "https://diodlab.bigdata.intraorange/diod/kubeflow/kubeflow-manifests/-/archive/master/kubeflow-manifests-master.tar.gz?private_token=47qpFPLeHhBFGrhQgF9c&sudo=gitlab+deploy-token-13"
 4708  curl "https://diodlab.bigdata.intraorange/diod/kubeflow/kubeflow-manifests/-/archive/master/kubeflow-manifests-master.tar.gz?private_token=47qpFPLeHhBFGrhQgF9c"
 4709  curl -v "https://diodlab.bigdata.intraorange/diod/kubeflow/kubeflow-manifests/-/archive/master/kubeflow-manifests-master.tar.gz?private_token=47qpFPLeHhBFGrhQgF9c"
 4710  wget "https://diodlab.bigdata.intraorange/diod/kubeflow/kubeflow-manifests/-/archive/master/kubeflow-manifests-master.tar.gz"
 4711  wget --insecure "https://diodlab.bigdata.intraorange/diod/kubeflow/kubeflow-manifests/-/archive/master/kubeflow-manifests-master.tar.gz"
 4712  wget --help 
 4713  wget --no-check-certificate "https://diodlab.bigdata.intraorange/diod/kubeflow/kubeflow-manifests/-/archive/master/kubeflow-manifests-master.tar.gz"
 4714  wget --no-check-certificate "https://diodlab.bigdata.intraorange/diod/kubeflow/kubeflow-manifests/-/archive/master/kubeflow-manifests-master.tar.gz?private_token=47qpFPLeHhBFGrhQgF9c"
 4715  wget --no-check-certificate "https://gitlab+deploy-token-13:47qpFPLeHhBFGrhQgF9c@diodlab.bigdata.intraorange/diod/kubeflow/kubeflow-manifests/-/archive/master/kubeflow-manifests-master.tar.gz"
 4716  wget --no-check-certificate "https://diodlab.bigdata.intraorange/diod/kubeflow/kubeflow-manifests/-/archive/master/kubeflow-manifests-master.tar.gz?private_token=47qpFPLeHhBFGrhQgF9c"
 4717  wget --no-check-certificate "https://gitlab+deploy-token-13:47qpFPLeHhBFGrhQgF9c@diodlab.bigdata.intraorange/diod/kubeflow/kubeflow-manifests/-/archive/master/kubeflow-manifests-master.tar.gz"
 4718  wget --no-check-certificate "https://gitlab+deploy-token-13:47qpFPLeHhBFGrhQgF9c@diodlab.bigdata.intraorange/diod%2Fkubeflow%2Fkubeflow-manifests/-/archive/master/kubeflow-manifests-master.tar.gz"
 4719  wget --no-check-certificate "https://diodlab.bigdata.intraorange/diod/kubeflow/kubeflow-manifests/-/archive/master/kubeflow-manifests-master.tar.gz?private_token=47qpFPLeHhBFGrhQgF9c&sha=master"
 4720  wget --no-check-certificate "https://diodlab.bigdata.intraorange/diod/kubeflow/kubeflow-manifests/-/archive/master/kubeflow-manifests-master.tar.gz?private_token=47qpFPLeHhBFGrhQgF9c&ref=master"
 4721  wget --no-check-certificate "https://diodlab.bigdata.intraorange/diod%2Fkubeflow%2Fkubeflow-manifests/-/archive/master/kubeflow-manifests-master.tar.gz?private_token=47qpFPLeHhBFGrhQgF9c&ref=master"
 4722  url
 4723  urlglobber
 4724  url-quote-magic
 4725  url-quote-magichttps://diodlab.bigdata.intraorange/diod%2Fkubeflow%2Fkubeflow-manifests/-/archive/mas
 4726  url-quote-magich ttps://diodlab.bigdata.intraorange/diod%2Fkubeflow%2Fkubeflow-manifests/-/archive/mas
 4727  wget --no-check-certificate "http://diodlab.bigdata.intraorange/projects/407\n"
 4728  wget --no-check-certificate "http://diodlab.bigdata.intraorange/projects/407"\n"
 4729  wget --no-check-certificate "http://diodlab.bigdata.intraorange/projects/407"
 4730  wget --no-check-certificate "http://diodlab.bigdata.intraorange/projects/407/repository/archive.tar.gz"
 4731  wget --no-check-certificate "http://diodlab.bigdata.intraorange/projects/407/repository/archive.tar.gz&private_token=47qpFPLeHhBFGrhQgF9c"
 4732  wget --no-check-certificate "https://diodlab.bigdata.intraorange/projects/407/repository/archive.tar.gz&private_token=47qpFPLeHhBFGrhQgF9c"
 4733  wget "https://diodlab.bigdata.intraorange/projects/407/repository/archive.tar.gz&private_token=47qpFPLeHhBFGrhQgF9c"
 4734  curl -V "https://diodlab.bigdata.intraorange/projects/407/repository/archive.tar.gz&private_token=47qpFPLeHhBFGrhQgF9c"
 4735  curl -v "https://diodlab.bigdata.intraorange/projects/407/repository/archive.tar.gz&private_token=47qpFPLeHhBFGrhQgF9c"
 4736  curl -v "https://diodlab.bigdata.intraorange/api/v4/projects/407/repository/archive.tar.gz&private_token=47qpFPLeHhBFGrhQgF9c"
 4737  curl -v "https://diodlab.bigdata.intraorange/api/v3/projects/407/repository/archive.tar.gz&private_token=47qpFPLeHhBFGrhQgF9c"
 4738  curl -v "https://diodlab.bigdata.intraorange/api/v4/projects/407/repository/archive.tar.gz&private_token=47qpFPLeHhBFGrhQgF9c"
 4739  curl -v "https://diodlab.bigdata.intraorange/api/v4/projects/407/repository/archive&private_token=47qpFPLeHhBFGrhQgF9c"
 4740  curl -H 'PRIVATE-TOKEN: 47qpFPLeHhBFGrhQgF9c' "https://diodlab.bigdata.intraorange/api/v4/projects/407/repository/archive&private_token=47qpFPLeHhBFGrhQgF9c"
 4741  curl -v "https://diodlab.bigdata.intraorange/api/v4/projects/407/repository/archive?private_token=47qpFPLeHhBFGrhQgF9c"
 4742  curl -v "https://diodlab.bigdata.intraorange/api/v4/projects?private_token=47qpFPLeHhBFGrhQgF9c"
 4743  curl -H 'PRIVATE-TOKEN: 47qpFPLeHhBFGrhQgF9c' "https://diodlab.bigdata.intraorange/api/v4/projects/407/repository/archive"
 4744  curl -H 'PRIVATE-TOKEN: 47qpFPLeHhBFGrhQgF9c' "https://diodlab.bigdata.intraorange/api/v4/projects/diod/kubeflow/kubeflow-manifests/repository/archive"
 4745  curl -H 'PRIVATE-TOKEN: 47qpFPLeHhBFGrhQgF9c' "https://diodlab.bigdata.intraorange/api/v4/projects/diod%2Fkubeflow%2Fkubeflow-manifests/repository/archive"
 4746  curl -v "https://diodlab.bigdata.intraorange/api/v4/projects/407/repository/archive?private_token=cg9BD6KWcBNZYLVaa_Ps"
 4747  curl -v "https://diodlab.bigdata.intraorange/api/v4/projects/407/repository/archive?private_token=pnWhLWa6KU8xA_rnrzkZ"
 4748  ll
 4749  curl -v "https://diodlab.bigdata.intraorange/api/v4/projects/407/repository/archive?private_token=pnWhLWa6KU8xA_rnrzkZ" --output tto.tgz
 4750  ll
 4751  rm -rf kustomize
 4752  rm -f tto.tgz
 4753  ll
 4754  kfctl build -V -f kfctl_k8s_istio_v0.7.0-build.yaml
 4755  cd ..
 4756  ll
 4757  ./setup_config.sh
 4758  bash setup_config.sh
 4759  ll
 4760  cd kubeflow
 4761  bash ../setup_config.sh
 4762  ll
 4763  rm -rf kustomize
 4764  bash ../setup_config.sh
 4765  ll
 4766  bash ../setup_config.sh
 4767  ll
 4768  rm -rf kustomize
 4769  bash ../setup_config.sh
 4770  rm -rf kustomize
 4771  bash ../setup_config.sh
 4772  ll
 4773  rm -rf kustomize
 4774  bash ../setup_config.sh
 4775  info cp
 4776  rm -rf kustomize
 4777  bash ../setup_config.sh
 4778  cp -fR ${LOCAL_KFDEF}/conf_kubeflow/my_overlays/  kustomize
 4779  cat ${LOCAL_KFDEF}/conf_kubeflow/my_overlays/istio-install/
 4780  ls ${LOCAL_KFDEF}/conf_kubeflow/my_overlays/istio-install/
 4781  rm -rf kustomize
 4782  bash ../setup_config.sh
 4783  rm -rf kustomize
 4784  bash ../setup_config.sh
 4785  kfctl apply
 4786  kfctl apply -f kfctl_k8s_istio_v0.7.0-apply.yaml
 4787  kubectl cluster-info
 4788  kubectl get all --all-namespaces
 4789  kfctl delete -f kfctl_k8s_istio_v0.7.0-apply.yaml
 4790  kubectl get all --all-namespaces
 4791  kubectl delete -f kustomize/istio-install/
 4792  kubectl delete -f kustomize/istio-install/overlays/cce/ 
 4793  kubectl delete -k kustomize/istio-install/overlays/cce/ 
 4794  kubectl get all --all-namespaces
 4795  ll
 4796  rm -rf kustomize
 4797  bash ../setup_config.sh
 4798  rm -rf kustomize
 4799  bash ../setup_config.sh
 4800  ll
 4801  ll kustomize
 4802  ll
 4803  bash ../setup_config.sh
 4804  pwd
 4805  exit
 4806  cd ../kubeflow-core
 4807  ll
 4808  cd conf_kubeflow
 4809  ll
 4810  cd my_overlays
 4811  ll
 4812  pwd
 4813  bash ../setup_config.sh
 4814  brew install caskformula/caskformula/inkscape
 4815  source ~/pon
 4816  brew install caskformula/caskformula/inkscape
 4817  exit
 4818  bash ../setup_config.sh
 4819  env
 4820  pwd
 4821  cd ../..
 4822  ll
 4823  mv template.txt template.txt.tmpl
 4824  envsubst
 4825  info envsubst
 4826  cat template.txt.tmpl |  envsubst
 4827  docker run -it dockerfactory-iva.si.francetelecom.fr/diod-cardinal-services/diod-docker-ci_cd:1.2 bash
 4828  ll
 4829  cd ..
 4830  ll
 4831  cd kubeflow-core
 4832  ll
 4833  cd kubeflow-core
 4834  ll
 4835  cd conf_kubeflow
 4836  ll
 4837  docker run -it dockerfactory-iva.si.francetelecom.fr/diod-cardinal-services/diod-docker-ci_cd:1.2 bash -v $(pwd):/build 
 4838  docker run -it dockerfactory-iva.si.francetelecom.fr/diod-cardinal-services/diod-docker-ci_cd:1.2 -v $(pwd):/build bash
 4839  docker run -it dockerfactory-iva.si.francetelecom.fr/diod-cardinal-services/diod-docker-ci_cd:1.2 -v .:/build bash
 4840  pwd
 4841  docker run -it dockerfactory-iva.si.francetelecom.fr/diod-cardinal-services/diod-docker-ci_cd:1.2 -v /Users/seb/Dev/kubeflow/install-de-di/kubeflow-core/conf_kubeflow:/build bash
 4842  history| grep run
 4843  docker run -it -v $(pwd):build dockerfactory-iva.si.francetelecom.fr/diod-cardinal-services/diod-docker-ci_cd:1.2 bash
 4844  docker run -it -v $(pwd):/build dockerfactory-iva.si.francetelecom.fr/diod-cardinal-services/diod-docker-ci_cd:1.2 bash
 4845  cd ../../temp
 4846  ll
 4847  bash test.sh
 4848  envsubst 
 4849  envsubst -v LOGNAME 
 4850  env
 4851  envsubst -v "LOGNAME"
 4852  envsubst -V "LOGNAME"
 4853  envsubst -v "LOGNAME"
 4854  bash test.sh
 4855  pwd
 4856  curl https://di-diod-kubeflow.itn.intraorange
 4857  curl -V https://di-diod-kubeflow.itn.intraorange
 4858  curl -v https://di-diod-kubeflow.itn.intraorange
 4859  wget https://di-diod-kubeflow.itn.intraorange
 4860  k9s
 4861  cd ../../temp
 4862  ll
 4863  mkdir dex
 4864  cd dex
 4865  ll
 4866  kubectl -n auth get all 
 4867  kubectl get all
 4868  kubectl get all --all-namespaces
 4869  kubectl -n kubeflow get all 
 4870  kubectl -n kubeflow get deploy/dex
 4871  kubectl -n kubeflow get deploy/dex -o yaml 
 4872  kubectl -n kubeflow get pods
 4873  kubectl -n kubeflow get pods/dex-84dcc97bc5-ttxg5 -o yaml 
 4874  kubectl -n kubeflow get pods/dex-84dcc97bc5-ttxg5 
 4875  kubectl -n kubeflow get cm/dex
 4876  kubectl -n kubeflow get cm/dex -o uaml 
 4877  kubectl -n kubeflow get cm/dex -o yaml 
 4878  kubectl -n kubeflow describe cm/dex
 4879  nslookup auth.tech.orangedi-diod-kubeflow.itn.intraorange
 4880  nslookup auth.tech.orange
 4881  kubectl -n kubeflow logs deploy/dex
 4882  kubectl run tmp-shell --rm -i --tty --image gcr.io/arrikto/dexidp/dex:4bede5eb80822fc3a7fc9edca0ed2605cd339d17
 4883  kubectl run tmp-shell --rm -i --tty --image gcr.io/arrikto/dexidp/dex:4bede5eb80822fc3a7fc9edca0ed2605cd339d17 bash
 4884  kubectl run tmp-shell --rm -i --tty --image gcr.io/arrikto/dexidp/dex:4bede5eb80822fc3a7fc9edca0ed2605cd339d17 sh
 4885  kubectl run tmp-shell --rm -i --tty --image gcr.io/arrikto/dexidp/dex:4bede5eb80822fc3a7fc9edca0ed2605cd339d17 "curl https://auth.tech.orange/.well-known/openid-configuration"
 4886  kubectl delete depoly/tmp-shell 
 4887  kubectl delete tmp-shell 
 4888  kubectl get all 
 4889  kubectl delete deployment.apps/tmp-shell
 4890  kubectl run tmp-shell --generator=run-pod/v1 --rm -i --tty --image gcr.io/arrikto/dexidp/dex:4bede5eb80822fc3a7fc9edca0ed2605cd339d17 "curl https://auth.tech.orange/.well-known/openid-configuration"
 4891  kubectl run tmp-shell --generator=run-pod/v1 --rm -i --tty --image gcr.io/arrikto/dexidp/dex:4bede5eb80822fc3a7fc9edca0ed2605cd339d17 "curl"
 4892  kubectl run tmp-shell --generator=run-pod/v1 --rm -i --tty --image gcr.io/arrikto/dexidp/dex:4bede5eb80822fc3a7fc9edca0ed2605cd339d17 "curl https://auth.tech.orange/.well-known/openid-configuration"
 4893  kubectl run tmp-shell --generator=run-pod/v1 --rm -i --tty --image gcr.io/arrikto/dexidp/dex:4bede5eb80822fc3a7fc9edca0ed2605cd339d17 -- curl https://auth.tech.orange/.well-known/openid-configuration 
 4894  kgp
 4895  kubectl delete pod/tmp-shell 
 4896  kubectl run tmp-shell --generator=run-pod/v1 --rm -i --tty --image gcr.io/arrikto/dexidp/dex:4bede5eb80822fc3a7fc9edca0ed2605cd339d17 -- curl https://auth.tech.orange/.well-known/openid-configuration 
 4897  kubectl logs pod/tmp-shell
 4898  kubectl delete pod/tmp-shell 
 4899  docker inspect gcr.io/arrikto/dexidp/dex:4bede5eb80822fc3a7fc9edca0ed2605cd339d17
 4900  docker inspect
 4901  docker 
 4902  docker inspect
 4903  docker images 
 4904  docker images --help 
 4905  docker image gcr.io/arrikto/dexidp/dex:4bede5eb80822fc3a7fc9edca0ed2605cd339d17
 4906  docker images gcr.io/arrikto/dexidp/dex:4bede5eb80822fc3a7fc9edca0ed2605cd339d17
 4907  docker pull gcr.io/arrikto/dexidp/dex:4bede5eb80822fc3a7fc9edca0ed2605cd339d17
 4908  docker run gcr.io/arrikto/dexidp/dex:4bede5eb80822fc3a7fc9edca0ed2605cd339d17
 4909  docker images
 4910  docker inspect f3259b4639ab
 4911  docker run gcr.io/arrikto/dexidp/dex:4bede5eb80822fc3a7fc9edca0ed2605cd339d17 sh
 4912  docker run gcr.io/arrikto/dexidp/dex:4bede5eb80822fc3a7fc9edca0ed2605cd339d17 /bin/sh
 4913  kubectl run tmp-shell --generator=run-pod/v1 --rm -i --tty --image gcr.io/arrikto/dexidp/dex:4bede5eb80822fc3a7fc9edca0ed2605cd339d17 -- /bin/sh
 4914  kubectl run tmp-shell --generator=run-pod/v1 --rm -i --tty --image gcr.io/arrikto/dexidp/dex:4bede5eb80822fc3a7fc9edca0ed2605cd339d17 --command --  /bin/sh
 4915  wget -Y on https://auth.tech.orange
 4916  kubectl run tmp-shell --generator=run-pod/v1 --rm -i --tty --image gcr.io/arrikto/dexidp/dex:4bede5eb80822fc3a7fc9edca0ed2605cd339d17 --command --  /bin/sh
 4917  kubectl run tmp-shell -n kubeflow --generator=run-pod/v1 --rm -i --tty --image gcr.io/arrikto/dexidp/dex:4bede5eb80822fc3a7fc9edca0ed2605cd339d17 --command --  /bin/sh
 4918  kubectl delete pod/tmp-shell  )n kubeflow
 4919  kubectl delete pod/tmp-shell  -n kubeflow
 4920  kubectl run tmp-shell -n kubeflow --generator=run-pod/v1 --rm -i --tty --image gcr.io/arrikto/dexidp/dex:4bede5eb80822fc3a7fc9edca0ed2605cd339d17 --command --  /bin/sh
 4921  kubectl delete pod/tmp-shell  -n kubeflow
 4922  kubectl run tmp-shell -n kubeflow --generator=run-pod/v1 --rm -i --tty --image gcr.io/arrikto/dexidp/dex:4bede5eb80822fc3a7fc9edca0ed2605cd339d17 --command --  /bin/sh
 4923  wget Get https://auth.tech.orange/.well-known/openid-configuration
 4924  wget --no-check-certificat Get https://auth.tech.orange/.well-known/openid-configuration
 4925  ll
 4926  cat openid-configuration
 4927  kubectl run tmp-shell -n kubeflow --generator=run-pod/v1 --rm -i --tty --image gcr.io/arrikto/dexidp/dex:4bede5eb80822fc3a7fc9edca0ed2605cd339d17 --command --  /bin/sh
 4928  wget Get https://auth.tech.orange/.well-known/openid-configuration
 4929  wget https://auth.tech.orange/.well-known/openid-configuration
 4930  curl https://auth.tech.orange/.well-known/openid-configuration
 4931  curl https://di-diod-kubeflow.itn.intraorange/
 4932  wget  https://di-diod-kubeflow.itn.intraorange/
 4933  source ~/pon
 4934  wget  https://di-diod-kubeflow.itn.intraorange/
 4935  curl  https://di-diod-kubeflow.itn.intraorange/
 4936  curl -v https://di-diod-kubeflow.itn.intraorange/ 
 4937  source ~/poff
 4938  curl -v https://di-diod-kubeflow.itn.intraorange/ 
 4939  sudo vi /etc/hosts
 4940  curl -v https://di-diod-kubeflow.itn.intraorange/ 
 4941  kubectl get ClusterRbacConfig
 4942  kubectl get ClusterRbacConfig -o yaml 
 4943  kubectl get all -n istio-system
 4944  kubectl logs service/istio-ingressgateway
 4945  kubectl logs -n istio-system svc/service/istio-ingressgateway
 4946  kubectl logs -n istio-system service/istio-ingressgateway
 4947  ll
 4948  rm -f openid-configuration
 4949  kubectl logs -n istio-system service/istio-ingressgateway
 4950  kubectl get  -n istio-system service/istio-ingressgateway
 4951  kubectl get  -n istio-system service/istio-ingressgateway -o yaml 
 4952  kubectl get  -n istio-system pods -l "app=istio-ingressgateway"
 4953  kubectl get  -n istio-system pods -l "app=istio-ingressgateway" -o yaml 
 4954  kubectl logs  -n istio-system pods -l "app=istio-ingressgateway" 
 4955  kubectl get  -n istio-system pods -l "app=istio-ingressgateway"
 4956  kubectl logs  -n istio-system pod/istio-ingressgateway-7d98d8f5cb-dbwr9
 4957  kubectl port-forward -n istio-system  service/istio-ingressgateway  8080:80
 4958  kubectl logs  -n istio-system pod/istio-ingressgateway-7d98d8f5cb-dbwr9
 4959  kubectl get vs --all-namespaces -oyaml 
 4960  kubectl get vs --all-namespaces 
 4961  kubectl get vs/cantraldashboard -o yml --all-namespaces 
 4962  kubectl get vs/cantraldashboard -o yml -n kubeflow 
 4963  kubectl get vs/centraldashboard -o yml --all-namespaces 
 4964  kubectl get vs/centraldashboard -o yml -n kubeflow
 4965  kubectl get vs/centraldashboard -o yaml -n kubeflow
 4966  kubectl port-forward -n istio-syst  service/istio-ingressgateway  8080:80
 4967  kubectl port-forward -n kubeflow  service/centraldashboard  8080:80
 4968  k9s
 4969  ll
 4970  cp ~/Downloads/dex.yaml .
 4971  k9s
 4972  ll
 4973  cp ~/Downloads/authservice.yaml .
 4974  ll
 4975  cd ..
 4976  ll
 4977  cd test_install_v7
 4978  l
 4979  cd kubeflow
 4980  l
 4981  ll
 4982  ls kustomize/dex
 4983  kustomize build ./kustomize/dex
 4984  kubectl delete -k ./kustomize/dex
 4985  ll
 4986  ../setup_config.sh
 4987  ll ..
 4988  bash ../setup_config.sh
 4989  source ~/poff
 4990  source ~/pon
 4991  bash ../setup_config.sh
 4992  kustomize build ./kustomize/dex
 4993  sed -i -e 's/namespace: kubeflow/namespace: auth' ./kustomize/dex/kustomization.yaml\n
 4994  sed -i -e 's/namespace\: kubeflow/namespace\: auth' ./kustomize/dex/kustomization.yaml
 4995  sed -i -e 's/namespace\: kubeflow/namespace\: auth/' ./kustomize/dex/kustomization.yaml
 4996  kustomize build ./kustomize/dex
 4997  bash ../setup_config.sh
 4998  kubectl delete -k ./kustomize/dex
 4999  bash ../setup_config.sh
 5000  kubectl delete -k ./kustomize/dex
 5001  curl -v https://di-diod-kubeflow.itn.intraorange
 5002  curl -v "https://di-diod-kubeflow.itn.intraorange/dex/auth?client_id=kubeflow-oidc-authservice&amp;redirect_uri=%2Flogin%2Foidc&amp;response_type=code&amp;scope=profile+email+groups+openid&amp;state=MTU3NTUzODI1N3xFd3dBRUV0TmVtcHBSRk41V1ZGV2ExcE5kVXM9fA7_qd6R7xrB5hxAYORYVOkJjop6gtB0Uba9TVqwn7pM"
 5003  kubectl get vs --al-namespacs
 5004  kubectl get vs --al-namespaces
 5005  kubectl get vs --all-namespaces
 5006  kubectl get --all-namespaces vs/dex
 5007  kubectl get -n auth vs/dex
 5008  kubectl get -n auth vs/dex -o yaml 
 5009  kubectl get --all-namespaces vs/dex
 5010  kubectl get vs --all-namespaces
 5011  kubectl get -n auth vs/dex -o yaml 
 5012  curl -v "https://di-diod-kubeflow.itn.intraorange/dex/auth?client_id=kubeflow-oidc-authservice&amp;redirect_uri=%2Flogin%2Foidc&amp;response_type=code&amp;scope=profile+email+groups+openid&amp;state=MTU3NTUzODI1N3xFd3dBRUV0TmVtcHBSRk41V1ZGV2ExcE5kVXM9fA7_qd6R7xrB5hxAYORYVOkJjop6gtB0Uba9TVqwn7pM"
 5013  kubectl run tmp-shell -n default --generator=run-pod/v1 --rm -i --tty --image nicolaka/netshoot --command --  /bin/bash   \n
 5014  ll
 5015  pwd
 5016  cd ../../..
 5017  ll
 5018  cd temsp
 5019  temp/dex
 5020  ll
 5021  kaf Podset.yaml
 5022  bash ../setup_config.sh
 5023  \n
 5024  ll
 5025  kubectl run tmp-shell -n kubeflow --generator=run-pod/v1 --rm -i --tty --image gcr.io/arrikto/kubeflow/oidc-authservice:6ac9400 --command --  /bin/sh   \n
 5026  docker build -t orange-oidc-autservice .
 5027  mkdir --help 
 5028  info mkdir
 5029  docker build -t orange-oidc-autservice .
 5030  ll cert
 5031  docker build -t orange-oidc-autservice .
 5032  cd ../
 5033  c d..
 5034  cd ..
 5035  ll
 5036  cd kubeflow-core
 5037  ll
 5038  cd conf_kubeflow
 5039  ll
 5040  cd ..
 5041  cd utils
 5042  ll
 5043  cd orange-oidc-authservice
 5044  ll
 5045  docker login dockerfactory-unstable-iva.si.francetelecom.fr --username osbi7352
 5046  bash build_image.sh
 5047  bash ../setup_config.sh
 5048  curl -v "https://di-diod-kubeflow.itn.intraorange/dex/auth?client_id=kubeflow-oidc-authservice&amp;redirect_uri=%2Flogin%2Foidc&amp;response_type=code&amp;scope=profile+email+groups+openid&amp;state=MTU3NTUzODI1N3xFd3dBRUV0TmVtcHBSRk41V1ZGV2ExcE5kVXM9fA7_qd6R7xrB5hxAYORYVOkJjop6gtB0Uba9TVqwn7pM"
 5049  curl -v "https://di-diod-kubeflow.itn.intraorange/dex/"
 5050  ll
 5051  bash ../setup_config.sh
 5052  kubectl delete -k ./kustomize/oidc-authservice
 5053  bash ../setup_config.sh
 5054  pwd
 5055  ll
 5056  bash build_image.sh
 5057  source ~/pon
 5058  docker login dockerfactory-unstable-iva.si.francetelecom.fr --username osbi7352
 5059  bash build_image.sh
 5060  ll
 5061  kubectl delete -k ./kustomize/dex
 5062  curl https://auth.tech.orange/.well-known/openid-configuration
 5063  curl https://auth.tech.orange/.well-known/openid-configuration | jq
 5064  kfctl version
 5065  kubectl version
 5066  bash build_image.sh
 5067  ll
 5068  cd Dev
 5069  ls
 5070  ll
 5071  cd kubeflow
 5072  ll
 5073  cd demo-cu
 5074  ll
 5075  cd 1
 5076  cd 1-\ train
 5077  ll
 5078  cd ..
 5079  ll
 5080  code .
 5081  cd 0-\ base_config
 5082  ll
 5083  cd config_maps
 5084  ll
 5085  kustomize build base
 5086  kustomize build overlays/dom_kubeflow
 5087  echo eyJhdXRocyI6eyIxMDAuMTI1LjAuOTQ6MjAyMDIiOnsiYXV0aCI6IlpYVXRkMlZ6ZEMwd1FISkJUbXB5VldGeE4yMW9TVzE1WVU1TlNWUjVPbVU0TW1NeU1EQXpOalkxWVRRMFpXVTVPR05tWkdaak56SmtObVZtTm1aaFl6VXdaVEZrWkdSbE1HVXhNRGhpTmpWa016VTBOVEV3T0RFM1pqQXpOR1U9In0sInJlZ2lzdHJ5LmV1LXdlc3QtMC5wcm9kLWNsb3VkLW9jYi5vcmFuZ2UtYnVzaW5lc3MuY29tIjp7ImF1dGgiOiJaWFV0ZDJWemRDMHdRSEpCVG1weVZXRnhOMjFvU1cxNVlVNU5TVlI1T21VNE1tTXlNREF6TmpZMVlUUTBaV1U1T0dObVpHWmpOekprTm1WbU5tWmhZelV3WlRGa1pHUmxNR1V4TURoaU5qVmtNelUwTlRFd09ERTNaakF6TkdVPSJ9fX0= | base64 -d
 5088  echo eyJhdXRocyI6eyIxMDAuMTI1LjAuOTQ6MjAyMDIiOnsiYXV0aCI6IlpYVXRkMlZ6ZEMwd1FISkJUbXB5VldGeE4yMW9TVzE1WVU1TlNWUjVPbVU0TW1NeU1EQXpOalkxWVRRMFpXVTVPR05tWkdaak56SmtObVZtTm1aaFl6VXdaVEZrWkdSbE1HVXhNRGhpTmpWa016VTBOVEV3T0RFM1pqQXpOR1U9In0sInJlZ2lzdHJ5LmV1LXdlc3QtMC5wcm9kLWNsb3VkLW9jYi5vcmFuZ2UtYnVzaW5lc3MuY29tIjp7ImF1dGgiOiJaWFV0ZDJWemRDMHdRSEpCVG1weVZXRnhOMjFvU1cxNVlVNU5TVlI1T21VNE1tTXlNREF6TmpZMVlUUTBaV1U1T0dObVpHWmpOekprTm1WbU5tWmhZelV3WlRGa1pHUmxNR1V4TURoaU5qVmtNelUwTlRFd09ERTNaakF6TkdVPSJ9fX0= | base64 -d | jq
 5089  kustomize build overlays/dom_kubeflow
 5090  kubectl kustomize overlays/dom_kubeflow
 5091  kubectl kustomize base -n kubeflow
 5092  kubectl appli -k overlays/dom_kubeflow
 5093  kubectl apply -k overlays/dom_kubeflow
 5094  cd ../..
 5095  cd 2-\ create\ container
 5096  ll
 5097  bash build-images.sh
 5098  ll
 5099  cd ../3-\ deploy\ model
 5100  ll
 5101  cd ..
 5102  l
 5103  cd 3-\ deploy\ model
 5104  ll
 5105  kubectl apply -f inference.yaml
 5106  cd ../..
 5107  cd demo-cu
 5108  ll
 5109  cd 0-\ base_config
 5110  ll
 5111  cd config_maps
 5112  ll
 5113  kubectl apply -k base 
 5114  kubectl apply -f inference.yaml
 5115  kubectl delete  -f inference.yaml
 5116  kubectl apply -f inference.yaml
 5117  kubectl apply -k base 
 5118  kubectl delete  -f inference.yaml
 5119  kubectl apply -f inference.yaml
 5120  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/default/model-cu/api/v0.1/predictions \\n     -H "Content-Type: application/json" \\n     --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'
 5121  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/default/model-cu/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'
 5122  curl -v -gk https://di-diod-kubeflow.itn.intraorange/seldon/default/model-cu/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'
 5123  kubectl get vs
 5124  kubectl get vs demo-cu-model-cu-http -o yaml 
 5125  curl -v -gk https://di-diod-kubeflow.itn.intraorange/seldon/default/model-cu/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'
 5126  kubectl delete  -f inference.yaml
 5127  kubectl apply -k overlays/dom_kubeflow
 5128  kubectl apply -f inference.yaml -n kubeflow
 5129  curl -v -gk https://di-diod-kubeflow.itn.intraorange/seldon/default/model-cu/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'
 5130  kubectl get vs --all-namespaces
 5131  kubectl get vs -n kubeflow demo-cu-model-cu-http 
 5132  kubectl get vs -n kubeflow demo-cu-model-cu-http  -o yaml
 5133  curl -v -gk https://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/model-cu/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'
 5134  cd ../4-\ request\ model
 5135  l
 5136  python Test_service.py -t 5 -i 10 -b 5 -s 0
 5137  python Test_service.py -t 5 -i 100 -b 5 -s 0
 5138  kubectl get vs --all-namespaces
 5139  kubectl get vs -n kubeflow grafana-vs -o yaml
 5140  curl https://auth.tech.orange/.well-known/openid-configuration | jq
 5141  curl -v https://di-diod-kubeflow.itn.intraorange/istio/grafana/
 5142  python Test_service.py -t 5 -i 100 -b 50 -s 0
 5143  python Test_service.py -t 10 -i 1000 -b 50 -s 0
 5144  curl -v https://di-diod-kubeflow.itn.intraorange/istio/grafana/
 5145  kubectl get vs -n kubeflow grafana-vs -o yaml
 5146  ll
 5147  cd ../9-\ kni
 5148  ls
 5149  cd src
 5150  ll
 5151  seldon-core-microservice kni_predict REST
 5152  ll
 5153  cd ..
 5154  ll
 5155  ./build_image.sh
 5156  bash ./build_image.sh
 5157  bash build-images.sh
 5158  docker run --env-file ./test/env.list kni-predict:0.1\n
 5159  docker images
 5160  docker run --env-file ./test/env.list kni-predict:1.0\n
 5161  cd src
 5162  ll
 5163  docker run -it -v $(pwd):/build python bash
 5164  docker run -it -v $(pwd):/build python sh
 5165  docker run -it -v .:/build python sh
 5166  docker run -it -v `pwd`:/build python sh
 5167  docker run -it -v "`pwd`":/build python sh
 5168  docker run -it -v "`pwd`":/build python bash
 5169  bash build-images.sh
 5170  cd .
 5171  cd ..
 5172  bash build-images.sh
 5173  docker run --env-file ./test/env.list kni-predict:1.0\n
 5174  bash build-images.sh
 5175  docker run --env-file ./test/env.list kni-predict:1.0\n
 5176  bash build-images.sh
 5177  docker run --env-file ./test/env.list kni-predict:1.0\n
 5178  ll
 5179  ll kustomize
 5180  kustomize build kustomize/istio
 5181  kustomize build kustomize/jupyter-web-app
 5182  docker run --env-file ./test/env.list kni-predict:1.0\n
 5183  docker run --env-file ./test/env.list kni-predict:1.0 bash \n
 5184  docker run -it  --env-file ./test/env.list kni-predict:1.0 bash \n
 5185  docker inspect kni-predict:1.0
 5186  kubectl get pods  -n kubeflow
 5187  kubectl describe  pods/demo-cu-main-06ec994-5d8fcd474-xd5rp  -n kubeflow
 5188  kubectl get  pods/demo-cu-main-06ec994-5d8fcd474-xd5rp  -n kubeflow -o yaml 
 5189  kubectl get  pods/demo-cu-main-06ec994-5d8fcd474-xd5rp  -n kubeflow -o yaml > pod-seldon.yaml
 5190  kubectl attach   pods/demo-cu-main-06ec994-5d8fcd474-xd5rp  -n kubeflow 
 5191  kubectl attach   pods/demo-cu-main-06ec994-5d8fcd474-xd5rp  -n kubeflow bash
 5192  kubectl attach --help 
 5193  kubectl exec --help 
 5194  kubectl exec  pods/demo-cu-main-06ec994-5d8fcd474-xd5rp -c classifier -n kubeflow  bash 
 5195  kubectl exec  pods/demo-cu-main-06ec994-5d8fcd474-xd5rp -c classifier -n kubeflow -it --  bash 
 5196  docker run -it  --env-file ./test/env.list kni-predict:1.0 bash \n
 5197  ll
 5198  bash build-images.sh
 5199  docker run -it  --env-file ./test/env.list kni-predict:1.0 bash \n
 5200  cd ..
 5201  ll
 5202  cp 9-\ kni 9-\ kni2
 5203  cp -R 9-\ kni 9-\ kni2
 5204  ll
 5205  cd ../..
 5206  ll
 5207  cd ..
 5208  ll
 5209  cd ..
 5210  ll
 5211  cd khiops
 5212  ll
 5213  code . 
 5214  cd 9-\ kni
 5215  ll
 5216  bash build-images.sh
 5217  docker run -it  --env-file ./test/env.list kni-predict:1.0 bash \n
 5218  bash build-images.sh
 5219  docker run -it  --env-file ./test/env.list kni-predict:1.0 bash \n
 5220  cd ../9-\ kni2
 5221  bash build-images.sh
 5222  docker run -it  --env-file ./test/env.list kni-predict2:1.0 bash \n
 5223  bash build-images.sh
 5224  docker run -it  --env-file ./test/env.list kni-predict2:1.0 bash \n
 5225  PYTHONVERBOSE=2
 5226  bash build-images.sh
 5227  docker run -it  --env-file ./test/env.list kni-predict2:1.0 bash \n
 5228  bash build-images.sh
 5229  docker run -it  --env-file ./test/env.list kni-predict2:1.0 bash \n
 5230  history| grep auth
 5231  curl https://auth.tech.orange/.well-known/openid-configuration | jq
 5232  curl https://auth.tech.orange/oauth2/jwks
 5233  curl https://auth.tech.orange/oauth2/jwks | jq
 5234  bash build-images.sh
 5235  docker run -it  --env-file ./test/env.list kni-predict2:1.0 bash \n
 5236  bash build-images.sh
 5237  docker run -it  --env-file ./test/env.list kni-predict2:1.0 bash \n
 5238  bash build-images.sh
 5239  docker run -it  --env-file ./test/env.list kni-predict2:1.0 bash \n
 5240  bash build-images.sh
 5241  docker run -it  --env-file ./test/env.list kni-predict2:1.0 bash \n
 5242  source ~/poff
 5243  docker run -it  --env-file ./test/env.list kni-predict2:1.0 bash \n
 5244  bash build-images.sh
 5245  docker run -it  --env-file ./test/env.list kni-predict2:1.0 bash \n
 5246  bash build-images.sh
 5247  docker run -it  --env-file ./test/env.list kni-predict2:1.0 bash \n
 5248  bash build-images.sh
 5249  docker run -it  --env-file ./test/env.list kni-predict2:1.0 bash \n
 5250  bash build-images.sh
 5251  cd 
 5252  cd anaconda3
 5253  ll
 5254  find . -name google
 5255  cd envs/mlpipeline/lib/python3.7/site-packages/google
 5256  ll
 5257  cd protobuf
 5258  ll
 5259  code .
 5260  bash build-images.sh
 5261  docker run -it  --env-file ./test/env.list kni-predict2:1.0 bash \n
 5262  source ~/poff
 5263  docker run -it  --env-file ./test/env.list kni-predict2:1.0 bash \n
 5264  source ~/pon
 5265  docker run -it  --env-file ./test/env.list kni-predict2:1.0 bash \n
 5266  bash build-images.sh
 5267  bash build-images.sh > stdout.txt
 5268  history| grep seldon
 5269  ll
 5270  docker run -it  --env-file ./test/env.list python  bash
 5271  docker run -it -v $(pwd):/src --env-file ./test/env.list python  bash
 5272  docker run -it -v ./:/src --env-file ./test/env.list python  bash
 5273  docker run -it -v `pwd`:/src --env-file ./test/env.list python  bash
 5274  history| grep docker
 5275  docker run -it -v $(pwd):/data python bash
 5276  docker run -it -v "$(pwd)":/data python bash
 5277  docker run -it -v "$(pwd)":/data python:3.7 bash
 5278  docker run -it -v "$(pwd)":/data python:3.8 bash
 5279  cd 
 5280  cd Dev
 5281  ls
 5282  cd kubeflow
 5283  ll
 5284  mkdir seldon
 5285  cd seldon 
 5286  ll
 5287  git clone https://github.com/SeldonIO/seldon-core.git
 5288  source ~/pon
 5289  git clone https://github.com/SeldonIO/seldon-core.git
 5290  ll
 5291  cd seldon-core
 5292  ll
 5293  cd wrappers
 5294  ls
 5295  cd s2i
 5296  ll
 5297  cd python
 5298  ll
 5299  cd build_scripts
 5300  ll
 5301  cd ../../../..
 5302  code .
 5303  cd wrappers/s2i/python
 5304  ll
 5305  cd build_scripts
 5306  l
 5307  bash build_local_python3.8.sh
 5308  docker image 
 5309  docker image  ls
 5310  bash build-images.sh
 5311  ls -la
 5312  cd src
 5313  ls -la
 5314  cd ..
 5315  ll
 5316  rm -rm src/__pycache__
 5317  rm -rf src/__pycache__
 5318  bash build-images.sh
 5319  docker run -it -v "$(pwd)":/data python:3.8 bash
 5320  docker run -it -v "$(pwd)":/data python:3.7 bash
 5321  docker run -it -v "$(pwd)":/data python:3.8 bash
 5322  cd Dev
 5323  cd kubeflow
 5324  cd install-de-di
 5325  ll
 5326  k9s
 5327  echo 0tGclLZGYbwCsLFqKd3IAMyUQIQegAlhe2E9P6a1Nls= | base64 -d
 5328  echo 0tGclLZGYbwCsLFqKd3IAMyUQIQegAlhe2E9P6a1Nls | base64 -d
 5329  echo d290bDB0MjNzdzJlY1l3c2xhS3ZCdzNObVVFTGVhQVdwL2RVa2FTY3MzQVBvblF3d0xlWjhTUnh3cUIwdUdWUk0wMFBmNit2Y2dTbHBxcDdLakhrYkZGQnBiNndkTDE4dVVnczBPZlNsaU54SWZBS1U0N0grSlV6ZktDdGppMkE | base64 -d
 5330  cd ..
 5331  ll
 5332  mkdir dex
 5333  cd dex
 5334  git clone https://github.com/dexidp/dex.git
 5335  source ~/pon
 5336  git clone https://github.com/dexidp/dex.git
 5337  code .
 5338  echo 5054e5ed8c00c250f77f40b646ca8e6f268d3664a88c645974359521beb96233 | base64 -d
 5339  echo 5054e5ed8c00c250f77f40b646ca8e6f268d3664a88c645974359521beb96233 | base64 
 5340  echo 5054e5ed8c00c250f77f40b646ca8e6f268d3664a88c645974359521beb96233 | base64 -D
 5341  msan
 5342  ll
 5343  docker run -it -v "$(pwd)":/data debien bash
 5344  docker run -it -v "$(pwd)":/data debian bash
 5345  source ~/poff
 5346  docker run -it -v "$(pwd)":/data debian bash
 5347  source ~/pon
 5348  docker run -it -v "$(pwd)":/data debian bash
 5349  docker run -it -e test/env.list -v "$(pwd)":/data debian bash
 5350  ll
 5351  cd src
 5352  ll
 5353  cp libKhiopsNativeInterface.so libKhiopsNativeInterface.so.goodone
 5354  ll
 5355  cd ..
 5356  bash build-images.sh
 5357  docker run -it -v "$(pwd)":/data python:3.8 bash
 5358  \tcd ..
 5359  ls
 5360  pwd
 5361  cd ../../..
 5362  cd ..
 5363  ls
 5364  pwd 
 5365  cd ..
 5366  cd demo-cu
 5367  ls
 5368  cd 9-\ kni2
 5369  ls
 5370  ll
 5371  cd kni_9.0.1_amd64
 5372  ll
 5373  cd data
 5374  ll
 5375  ls -lR
 5376  cp opt/khiops-kni/lib/libKhiopsNativeInterface.so.9.0.1 ../src
 5377  cd ../..
 5378  ll
 5379  cd src
 5380  ll
 5381  cd ..
 5382  find . -name "lib*"
 5383  ll
 5384  cp ./kni_9.0.1_amd64/data/opt/khiops-kni/lib/libKhiopsNativeInterface.so.9.0.1 src/
 5385  ls src
 5386  cd src
 5387  ll
 5388  cp libKhiopsNativeInterface.so.9.0.1 libKhiopsNativeInterface.so
 5389  exit
 5390  cd ../..
 5391  ll
 5392  cd seldon
 5393  ls
 5394  cd seldon-core
 5395  ll
 5396  cd wrappers
 5397  ll
 5398  cd
 5399  cd - 
 5400  cd s2i
 5401  ll
 5402  cd python
 5403  ll
 5404  docker run -it -v "$(pwd)":/data ubuntu bash
 5405  docker run -it -v "$(pwd)":/data ubuntu:19.04 bash
 5406  env
 5407  docker run -it -v "$(pwd)":/data ubuntu:19.04 bash
 5408  docker run -it -v "$(pwd)":/data ubuntu:18.04 bash
 5409  docker rmi $(docker images --filter "dangling=true" -q --no-trunc)
 5410  docker image  ls
 5411  docker container
 5412  docker container ls
 5413  docker images --filter "dangling=true" -q --no-trunc
 5414  docker rmi $(docker images --filter "dangling=true" -q --no-trunc)
 5415  docker rmi -f $(docker images --filter "dangling=true" -q --no-trunc)
 5416  docker image  ls
 5417  docker run -it -v "$(pwd)":/data ubuntu:19.04 bash
 5418  pwd
 5419  cp ~/Downloads/kni_9.0.1_amd64-ubuntu-1* .
 5420  ll
 5421  docker run -it -v "$(pwd)":/data ubuntu:19.04 bash
 5422  docker run -it -v "$(pwd)":/data python:3.8 bash
 5423  history| grep known
 5424  curl https://auth.tech.orange/.well-known/openid-configuration | jq\n
 5425  curl -v https://auth.tech.orange/oauth2/token\?grant_type=authorization_code&code=8b2c31e73d209f8c1ced08cc9eace6468318945ec41996d6f91a0dcb244d5997&redirect_uri=https%3A%2F%2Fdi-diod-kubeflow.itn.intraorange%2Fdex%2Fcallback\n
 5426  curl -v "https://auth.tech.orange/oauth2/token?grant_type=authorization_code&code=8b2c31e73d209f8c1ced08cc9eace6468318945ec41996d6f91a0dcb244d5997&redirect_uri=https%3A%2F%2Fdi-diod-kubeflow.itn.intraorange%2Fdex%2Fcallback"
 5427  curl -H 'Authorization:"Bearer 4b429105e2fe2d95a00a398edc4144bf3f62a79232a579ffc00da4ae1a3e194b"' https://auth.tech.orange/oauth2/token\?\u200bgrant_type\=authorization_code
 5428  curl -H 'Authorization:"Bearer 4b429105e2fe2d95a00a398edc4144bf3f62a79232a579ffc00da4ae1a3e194b"' https://auth.tech.orange/oauth2/token\?grant_type\=authorization_code
 5429  bash build-images.sh
 5430  docker run -it -v "$(pwd)":/data kni-predict2:1.0 bash
 5431  bash build-images.sh
 5432  curl -gk http://localhost/api/v0.1/predictions \\n     -H "Content-Type: application/json" \\n     --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'
 5433  curl -gk http://localhost:5000/api/v0.1/predictions \\n     -H "Content-Type: application/json" \\n     --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'
 5434  docker run -it -v "$(pwd)":/data -p 5000:5000 kni-predict2:1.0 bash
 5435  docker run -it -v "$(pwd)":/data -p 5000:5000 kni-predict2:1.0
 5436  curl -gk http://localhost:5000/api/v0.1/predictions \\n     -H "Content-Type: application/json" \\n     --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'
 5437  curl -gk http://localhost:5000/api/v0.1/predictions \\n     -H "Content-Type: application/json" \\n     --data '{"data": "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'
 5438  docker run -it -v "$(pwd)":/data -p 5000:5000 kni-predict2:1.0
 5439  curl -gk http://localhost:5000/api/v0.1/predictions \\n     -H "Content-Type: application/json" \\n     --data '{"data": "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'
 5440  curl -gk http://localhost:5000/api/v0.1/predictions \\n     -H "Content-Type: application/json" \\n     --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'
 5441  bash build-images.sh
 5442  curl -gk http://localhost:5000/api/v0.1/predictions \\n     -H "Content-Type: application/json" \\n     --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'
 5443  bash build-images.sh
 5444  curl -gk http://localhost:5000/api/v0.1/predictions \\n     -H "Content-Type: application/json" \\n     --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'
 5445  bash build-images.sh
 5446  curl -gk http://localhost:5000/api/v0.1/predictions \\n     -H "Content-Type: application/json" \\n     --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'
 5447  docker run -it -v "$(pwd)":/data python:3.8 bash
 5448  pwd
 5449  cd ../../..
 5450  cd ..
 5451  ls
 5452  cd ..
 5453  ll
 5454  cd khiops
 5455  ll
 5456  cd KNI2
 5457  ll
 5458  cd ..
 5459  l
 5460  cod e.
 5461  code .
 5462  ll
 5463  docker run -it -v $(pwd):/data python bash\n
 5464  bash build-images.sh
 5465  curl -gk http://localhost:5000/api/v0.1/predictions \\n     -H "Content-Type: application/json" \\n     --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, '']]}}'
 5466  curl -gk http://localhost:5000/api/v0.1/predictions \\n     -H "Content-Type: application/json" \\n     --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, O]]}}'
 5467  curl -gk http://localhost:5000/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, O]]}}'
 5468  curl -gk http://localhost:5000/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'
 5469  curl -gk http://localhost:5000/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, 1]]}}'
 5470  curl -gk http://localhost:5000/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, ""]]}}'
 5471  curl -gk http://localhost:5000/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, ""]]}}' | jq
 5472  ls
 5473  cd src
 5474  ls
 5475  ll
 5476  ls -ltr
 5477  tar tvf kni.tar.gz 
 5478  pwd
 5479  cd ../..
 5480  cd 9-\ kni
 5481  ll
 5482  cat build-images.sh
 5483  bash build-images.sh
 5484  bash test/start_local_container.sh
 5485  bash build-images.sh
 5486  bash test/start_local_container.sh
 5487  curl -gk http://localhost:5000/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, ""]]}}' | jq
 5488  curl -gk http://localhost:5000/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, ""]]}}'
 5489  bash build-images.sh
 5490  bash test/start_local_container.sh
 5491  curl -gk http://localhost:5000/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, ""]]}}'
 5492  curl -gk POST http://localhost:5000/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, ""]]}}'
 5493  curl -gk GET http://localhost:5000/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, ""]]}}'
 5494  curl --help 
 5495  ll
 5496  cd ../..
 5497  pwd
 5498  cd ..
 5499  ll
 5500  cd seldon
 5501  ll
 5502  cd ../..
 5503  ll
 5504  cd seldon
 5505  ll
 5506  cd ../kubeflow
 5507  ll
 5508  cd seldon
 5509  ll
 5510  cd seldon-core
 5511  ll
 5512  code .
 5513  find . -name "_internal.*"
 5514  docker run -it -v "$(pwd)":/data -p 5000:5000 kni-predict2:1.0
 5515  docker run -it -v "$(pwd)":/data -p 5000:5000 kni-predict2:1.0 bash
 5516  docker run -it -v "$(pwd)":/data  kni-predict2:1.0 bash
 5517  bash build-images.sh
 5518  bash test/start_local_container.sh
 5519  curl -gk GET http://localhost:5000/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, ""]]}}'
 5520  docker run -it  --env-file ./test/env.list -p 5000:5000 dockerfactory-unstable-iva.si.francetelecom.fr/osbi7352/kubeflow/kni/kni-predict:1.1 bash\n
 5521  curl -gk GET http://localhost:5000/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, ""]]}}'
 5522  docker run -it  --env-file ./test/env.list -p 5000:5000 dockerfactory-unstable-iva.si.francetelecom.fr/osbi7352/kubeflow/kni/kni-predict:1.1\n
 5523  curl -gk GET http://localhost:5000/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, ""]]}}'
 5524  curl http://localhost:5000/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, ""]]}}'
 5525  curl -v http://localhost:5000/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, ""]]}}'
 5526  ipconfig
 5527  ipconfig -a
 5528  ifconfig
 5529  curl -v http://127.0.0.1:5000/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, ""]]}}'
 5530  docker run -it  --env-file ./test/env.list -p 5000:5000 dockerfactory-unstable-iva.si.francetelecom.fr/osbi7352/kubeflow/kni/kni-predict:1.1\n
 5531  curl -v http://127.0.0.1:5000/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, ""]]}}'
 5532  docker run -it  --env-file ./test/env.list -p 5000:5000 dockerfactory-unstable-iva.si.francetelecom.fr/osbi7352/kubeflow/kni/kni-predict:1.1\n
 5533  curl -v http://127.0.0.1:5000/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, ""]]}}'
 5534  docker images --filter "dangling=true" -q --no-trunc
 5535  docker images 
 5536  docker images -q
 5537  docker rmi $(docker images -q)
 5538  docker images -q
 5539  docker images 
 5540  docker containers
 5541  docker container ls
 5542  docker container rm fe67e6f24f38
 5543  docker container stop fe67e6f24f38
 5544  docker container stop 25a4d62b2ff8
 5545  docker container rm fe67e6f24f38
 5546  docker container rm 25a4d62b2ff8
 5547  docker rmi $(docker images -q)
 5548  docker container ls
 5549  docker container ls --help
 5550  docker container ls -a
 5551  docker container ls -qa
 5552  docker container rm $(docker container ls -qa)
 5553  docker rmi $(docker images -q)
 5554  docker container ls -a
 5555  docker images 
 5556  docker rmi $(docker images -q)
 5557  docker images 
 5558  docker image delete 5c95551e1e99
 5559  docker image m 5c95551e1e99
 5560  docker image rm 5c95551e1e99
 5561  docker image rm -f 5c95551e1e99
 5562  docker images 
 5563  docker rmi -f $(docker images -q)
 5564  docker images 
 5565  bash build-images.sh
 5566  bash test/start_local_container.sh
 5567  curl -v http://127.0.0.1:5000/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, ""]]}}'
 5568  bash build-images.sh
 5569  bash test/start_local_container.sh
 5570  bash build-images.sh
 5571  bash test/start_local_container.sh
 5572  bash build-images.sh
 5573  bash test/start_local_container.sh
 5574  curl -v http://127.0.0.1:5000/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, ""]]}}'
 5575  bash build-images.sh
 5576  bash test/start_local_container.sh
 5577  curl -v http://127.0.0.1:5000/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, ""]]}}'
 5578  bash build-images.sh
 5579  bash test/start_local_container.sh
 5580  bash build-images.sh
 5581  bash test/start_local_container.sh
 5582  curl -v http://127.0.0.1:5000/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, ""]]}}'
 5583  bash build-images.sh
 5584  bash test/start_local_container.sh
 5585  curl -v http://127.0.0.1:5000/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, ""]]}}'
 5586  bash build-images.sh
 5587  bash test/start_local_container.sh
 5588  curl -v http://127.0.0.1:5000/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, ""]]}}'
 5589  bash build-images.sh
 5590  bash test/start_local_container.sh
 5591  curl -v http://127.0.0.1:5000/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, ""]]}}'
 5592  bash build-images.sh
 5593  curl -v http://127.0.0.1:5000/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, ""]]}}'
 5594  bash test/start_local_container.sh
 5595  curl -v http://127.0.0.1:5000/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, ""]]}}'
 5596  curl http://127.0.0.1:5000/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, ""]]}}' | jq
 5597  curl http://127.0.0.1:5000/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, ""],[5,4,2,1,'']]}}' | jq
 5598  curl http://127.0.0.1:5000/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, ""],[5,4,2,1, ""]]}}' | jq
 5599  bash build-images.sh
 5600  bash test/start_local_container.sh
 5601  curl http://127.0.0.1:5000/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, ""],[5,4,2,1, ""]]}}' | jq
 5602  cd ../0-\ base_config
 5603  ll
 5604  kubectl apply -k overlays/dom_kubeflow
 5605  cd config_maps
 5606  kubectl apply -k overlays/dom_kubeflow
 5607  kubectl apply -k overlays/dom_admin
 5608  cd ../..
 5609  cd 9-\ kni
 5610  bash test/start_local_container.sh
 5611  curl http://127.0.0.1:5000/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, ""],[5,4,2,1, ""]]}}' | jq
 5612  cd deploy
 5613  ll
 5614  kaf inference.yaml -n kubeflow
 5615  k9s
 5616  curl http://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/test-khiops-1/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, ""],[5,4,2,1, ""]]}}' | jq\n
 5617  curl -v http://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/test-khiops-1/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, ""],[5,4,2,1, ""]]}}' \n
 5618  curl -v https://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/test-khiops-1/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, ""],[5,4,2,1, ""]]}}' \n
 5619  curl https://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/test-khiops-1/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, ""],[5,4,2,1, ""]]}}' | jq\n
 5620  cd ..
 5621  python test/Test_service.py -t 5 -i 10 -b 5 -s 0 -n kubeflow -m 'test-khiops-1'\n
 5622  python test/Test_service.py -t 5 -i 100 -b 50 -s 0 -n kubeflow -m 'test-khiops-1'\n
 5623  python test/Test_service.py -t 5 -i 100 -b 150 -s 0 -n kubeflow -m 'test-khiops-1'\n
 5624  python test/Test_service.py -t 15 -i 100 -b 250 -s 0 -n kubeflow -m 'test-khiops-1'\n
 5625  python test/Test_service.py -t 15 -i 100 -b 500 -s 0 -n kubeflow -m 'test-khiops-1'\n
 5626  cd ../..
 5627  cd demo-cu
 5628  ll
 5629  cd 4-\ request\ model
 5630  ll
 5631  python test/Test_service.py -t 15 -i 100 -b 500 -s 0\n
 5632  python Test_service.py -t 15 -i 100 -b 500 -s 0\n
 5633  python Test_service.py -t 1 -i 10 -b 10 -s 0\n
 5634  kaf deploy/inference.yaml -n kubeflow
 5635  python test/Test_service.py -t 15 -i 100 -b 500 -s 0 -n kubeflow -m 'test-khiops-1'\n
 5636  kubectl delete -f deploy/inference.yaml -n kubeflow
 5637  kaf deploy/inference.yaml -n kubeflow
 5638  kgp -n kubeflow
 5639  kubectl describe test-khiops-1-main-a119e8e-8558c7d466-zmz4s 
 5640  kubectl describe deploy/test-khiops-1-main-a119e8e-8558c7d466-zmz4s -n kubeflow
 5641  kubectl describe test-khiops-1-main-a119e8e-8558c7d466-zmz4s -n kubeflow
 5642  kubectl describe pod/test-khiops-1-main-a119e8e-8558c7d466-zmz4s -n kubeflow
 5643  kgp -n kubeflow
 5644  kubectl get deploy  -n kubeflow
 5645  kubectl get deploy/test-khiops-1-main-a119e8e  -n kubeflow
 5646  python test/Test_service.py -t 15 -i 100 -b 500 -s 0 -n kubeflow -m 'test-khiops-1'\n
 5647  python
 5648  jupyter notebook
 5649  docker buils 
 5650  docker build docker push
 5651  docker push 
 5652  ll
 5653  cd ../
 5654  l
 5655  cd 1-\ train
 5656  ll
 5657  exit
 5658  git status
 5659  cd ..
 5660  ll
 5661  code . 
 5662  cd 1-\ train
 5663  ll
 5664  python train.py
 5665  python3 train.py -p demo-cu -f modelcu2.sav
 5666  source ~/pon
 5667  python3 train.py -p demo-cu -f modelcu2.sav
 5668  cd ../2-\ create\ container
 5669  seldon-core-microservice model_cu REST
 5670  conda activate mlpipeline
 5671  seldon-core-microservice model_cu REST
 5672  ll
 5673  cd src
 5674  seldon-core-microservice model_cu REST
 5675  cd ../test
 5676  seldon-core-microservice-tester contract.json 0.0.0.0 5000 -p
 5677  cd ..
 5678  ll
 5679  docker login dockerfactory-unstable-iva.si.francetelecom.fr --username osbi7352
 5680  sh build-images.sh
 5681  docker run --name "model-cu" --rm --env-file env.list -p 5000:5000 model-cu:1.1
 5682  cd test
 5683  docker run --name "model-cu" --rm --env-file env.list -p 5000:5000 model-cu:1.1
 5684  cd ../test
 5685  seldon-core-microservice-tester contract.json 0.0.0.0 5000 -p
 5686  docker run --name "model-cu" --rm --env-file env.list -p 5000:5000 model-cu:1.1
 5687  seldon-core-microservice-tester contract.json 0.0.0.0 5000 -p
 5688  curl -gk http://localhost:5000/api/v0.1/predictions \\n     -H "Content-Type: application/json" \\n     --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'\n
 5689  cd ..
 5690  bash build-images.sh
 5691  cd test/
 5692  docker run --name "model-cu" --rm --env-file env.list -p 5000:5000 model-cu:1.1
 5693  curl -gk http://localhost:5000/api/v0.1/predictions \\n     -H "Content-Type: application/json" \\n     --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'\n
 5694  seldon-core-microservice-tester contract.json 0.0.0.0 5000 -p
 5695  cd ../..
 5696  cd 3-\ deploy\ model
 5697  kubectl apply -f inference.yaml
 5698  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/model-cu/api/v0.1/predictions \\n     -H "Content-Type: application/json" \\n     --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'\n
 5699  cd ../4-\ request\ model
 5700  python Test_service.py -t 5 -i 10 -b 5 -s 0
 5701  python Test_service.py -t 15 -i 50 -b 50 -s 0
 5702  cd ../
 5703  bash build-images.sh
 5704  cd ../6-\ update\ model
 5705  ll
 5706  kubectl apply -f inference-canary.yaml
 5707  cd ../4-\ request\ model
 5708  ll
 5709  python Test_service.py -t 15 -i 50 -b 50 -s 0
 5710  kubectl apply -f inference-canary.yaml
 5711  kubectl delete -f inference-canary.yaml
 5712  kubectl apply -f inference-canary.yaml
 5713  kubectl delete -f inference-canary.yaml
 5714  kubectl apply -f inference-canary.yaml
 5715  python Test_service.py -t 15 -i 50 -b 50 -s 0
 5716  python Test_service.py -t 15 -i 50 -b 50 -s 3
 5717  python Test_service.py -t 5 -i 500 -b 10 -s 30
 5718  kubectl apply -f inference.yaml -n kubeflow
 5719  cd ../7-\ autoscale
 5720  ll
 5721  kubectl apply -f inference-autoscale.yaml
 5722  kubectl delete  -f inference-autoscale.yaml
 5723  kubectl apply -f inference-autoscale.yaml
 5724  python Test_service.py -t 5 -i 500 -b 500 -s 0
 5725  source ~/pon
 5726  kubectl delete  -f inference-autoscale.yaml
 5727  kubectl apply -f inference-autoscale.yaml
 5728  python Test_service.py -t 5 -i 500 -b 500 -s 0
 5729  python Test_service.py -t 5 -i 500 -b 3000 -s 0
 5730  cd ../9-\ kni
 5731  ll
 5732  bash build-images.sh
 5733  kubectl apply -f deploy/inference.yaml -n kubeflow
 5734  curl https://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/test-khiops-1/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, ""],[5,4,2,1, ""]]}}' | jq
 5735  cd
 5736  cd Dev
 5737  cd sujeevan
 5738  ll
 5739  code .
 5740  cd ..
 5741  cd ../Downloads
 5742  cd ..
 5743  cd .kube
 5744  ll
 5745  code .
 5746  kubectl cluster-info
 5747  exit
 5748  cd ../
 5749  cd kubeflow/install-de-di
 5750  ll
 5751  code .
 5752  ll
 5753  zip -l k8s.zip
 5754  unzip -l k8s.zip
 5755  zip -d k8s.zip "k8s/.git*"
 5756  unzip -l k8s.zip
 5757  zip -d k8s.zip "k8s/instance/provider_fe.tf"
 5758  unzip -l k8s.zip
 5759  kubectl get nodes
 5760  exit
 5761  history | grep oauth
 5762  history | grep auth
 5763  curl https://auth.tech.orange/saml/metadata | jq
 5764  curl https://auth.tech.orange/saml/metadata
 5765  vi saml-tech.orange.pem
 5766  openssl
 5767  openssl --help
 5768  openssl help
 5769  openssl help list
 5770  openssl help verify
 5771  openssl verify saml-tech.orange.pem
 5772  vi saml-tech.orange.pem
 5773  openssl verify saml-tech.orange.pem
 5774  cat saml-tech.orange.pem
 5775  gcloud 
 5776  cd Downloads
 5777  cd google-cloud-sdk
 5778  ll
 5779  cd ../google-cloud-sdk\ 2
 5780  ll
 5781  ./install.sh
 5782  source ~/pon
 5783  ./install.sh
 5784  source ~/pon
 5785  curl https://www.google.fr
 5786  ./install.sh
 5787  source ~/poff
 5788  ./install.sh
 5789  exit
 5790  gcloud 
 5791  gcloud components 
 5792  gcloud components update
 5793  ll
 5794  ls -la
 5795  cd DEv
 5796  ls
 5797  cd ../Dev
 5798  ll
 5799  mkdir gcp
 5800  cd gcp
 5801  cp ~/Downloads/conf-reseau-ff0f0ced2905.json .
 5802  ll
 5803  gcloud project
 5804  gcloud projects
 5805  gcloud projectslist
 5806  gcloud projects list
 5807  gcloud init
 5808  gcloud auth activate-service-account
 5809  gcloud auth activate-service-account --key-file=conf-reseau-ff0f0ced2905.json
 5810  gcloud init
 5811  ll ~/.boto
 5812  cat  ~/.boto
 5813  gcloud help config
 5814  cd 
 5815  cd .kub
 5816  ll
 5817  cd .kube
 5818  ll
 5819  cat config
 5820  exi
 5821  exit
 5822  ll
 5823  cd Dev/immo
 5824  ll
 5825  jupyter notebook
 5826  exit
 5827  cd Dev
 5828  jupyter notebook
 5829  exec '/Applications/Julia-1.3.app/Contents/Resources/julia/bin/julia'
 5830  xit
 5831  exit
 5832  julia
 5833  exec '/Applications/Julia-1.3.app/Contents/Resources/julia/bin/julia'
 5834  jupyter notebook
 5835  cd Dev/jul
 5836  cd Dev/Julia
 5837  ll
 5838  git clone https://github.com/JuliaLang/IJulia.jl.git
 5839  cd Dev/Julia
 5840  ll
 5841  jupyter notebook
 5842  git clone https://github.com/JuliaComputing/JuliaBoxTutorials.git
 5843  jupyter notebook
 5844  cd ../immo
 5845  ll
 5846  jupyter notebook
 5847  cd data
 5848  ll
 5849  wc -l valeursfoncieres-2018.txt
 5850  pip install pandas-profiling
 5851  ll
 5852  head valeursfoncieres-2018.txt
 5853  ll
 5854  zgrep 
 5855  zgrep PEAGE adresses-france.csv.gz
 5856  zgrep 'DE-PEAGE' adresses-france.csv.gz
 5857  zgrep 'TOURNON-SUR-RHONE' adresses-france.csv.gz
 5858  zgrep 'TOURNON' adresses-france.csv.gz
 5859  zgrep 'TOURNON' adresses-france.csv.gz | grep 'RHONE'
 5860  brew install qemu
 5861  cd /dev
 5862  cd imm
 5863  cd ..
 5864  cd /Dev
 5865  ll
 5866  cd
 5867  pwd
 5868  ll
 5869  cd Dev
 5870  ll
 5871  cd ../dev
 5872  ll
 5873  cd ..
 5874  ll
 5875  ls /dev
 5876  cd Dev/immo
 5877  ll
 5878  code .
 5879  cd data
 5880  zgrep 'CHEMILLE' adresses-france.csv.gz 
 5881  zgrep 'FOUGERE DE BOTT' adresses-france.csv.gz 
 5882  zgrep 'CHEMILLE-EN-ANJOU\t' adresses-france.csv.gz 
 5883  zgrep 'CHEMILLE-EN-ANJOU' adresses-france.csv.gz 
 5884  zgrep 'CHEMILLE-EN-ANJOU' adresses-france.csv.gz | grep 'BOTT'
 5885  zgrep 'ROUGERIES' adresses-france.csv.gz | grep 'VILLAG'
 5886  zgrep 'ROUGERIES' adresses-france.csv.gz
 5887  zgrep 'CHARBUY' adresses-france.csv.gz
 5888  zgrep ';CHARBUY;' adresses-france.csv.gz
 5889  zgrep ';CHARBUY;' adresses-france.csv.gz | grep 'BAULCHE'
 5890  zgrep 'BAULCHE' adresses-france.csv.gz
 5891  zgrep ';CHARBUY;' adresses-france.csv.gz | grep 'BAULCHE'
 5892  zgrep ';CAST;' adresses-france.csv.gz | grep 'KELENN'
 5893  zgrep ';MIREFLEURS;' adresses-france.csv.gz | grep 'ROCHE'
 5894  cd 
 5895  ll
 5896  env
 5897  gcloud container clusters get-credentials standard-cluster-1 --zone europe-west1-b --project infra-data
 5898  source ~/pon
 5899  gcloud container clusters get-credentials standard-cluster-1 --zone europe-west1-b --project infra-data
 5900  gcloud auth 
 5901  gcloud auth login
 5902  gcloud auth list
 5903  gcloud auth login
 5904  source ~/pon
 5905  gcloud auth login
 5906  curl https://www.google.fr
 5907  gcloud container clusters get-credentials standard-cluster-1 --zone europe-west1-b --project infra-data
 5908  gcloud auth login
 5909  cd Dev/kubeflow/install-de-di/
 5910  ll
 5911  code .
 5912  k9s
 5913  docker run quay.io/dexidp/dex:v2.21.0
 5914  maven
 5915  cd
 5916  cd -
 5917  ll
 5918  cd temps
 5919  cd temp
 5920  ll
 5921  cd dex
 5922  ll
 5923  cd cert
 5924  ll
 5925  cd ../test/etc
 5926  ll
 5927  openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes -subj '/CN=di-diod-kubeflow.itn.intraorange'
 5928  ll
 5929  mkdir -p dex/tls/
 5930  ll
 5931  openssl req -x509 -newkey rsa:4096 -keyout dex/tls/tls.key -out dex/tls/tls.crt -days 365 -nodes -subj '/CN=di-diod-kubeflow.itn.intraorange'
 5932  tree
 5933  ll
 5934  rm -f *.pem
 5935  ll
 5936  tree
 5937  pwd
 5938  docker run -it --name test-dex -p 443:5556 -v '/etc' quay.io/dexidp/dex:v2.21.0 dex serve /etc/dex/cfg/config.yaml
 5939  docker run -it --name test-dex -p 443:5556 -v '/etc' quay.io/dexidp/dex:v2.21.0 dex 
 5940  docker images 
 5941  docker containers
 5942  docker container
 5943  docker container ls
 5944  docker run -it --name test-dex -p 443:5556 -v '/etc' quay.io/dexidp/dex:v2.21.0 dex 
 5945  docker container ls --help 
 5946  docker container ls -a
 5947  docker rm df6a42c5365b
 5948  docker container ls -a
 5949  docker run -it --name test-dex -p 443:5556 -v '/etc' quay.io/dexidp/dex:v2.21.0 dex 
 5950  docker run -it --name test-dex -p 443:5556 -v '/etc' quay.io/dexidp/dex:v2.21.0 /usr/local/bin/dex 
 5951  docker container ls -a
 5952  docker rm 4717cd521349
 5953  docker run -it --name test-dex -p 443:5556 -v '/etc' quay.io/dexidp/dex:v2.21.0 /usr/local/bin/dex 
 5954  docker run -it -rm --name test-dex -p 443:5556 -v '/etc' 'quay.io/dexidp/dex:v2.21.0' '/usr/local/bin/dex' 
 5955  docker container ls -a
 5956  docker rm 47ebae6c1652
 5957  docker run -it --rm --name test-dex -p 443:5556 -v '/etc' 'quay.io/dexidp/dex:v2.21.0' '/usr/local/bin/dex' 
 5958  docker container ls -a
 5959  docker run -it --rm --name test-dex -p 443:5556 -v '/etc' 'quay.io/dexidp/dex:v2.21.0'
 5960  docker run -it --rm --name test-dex -p 443:5556 -v '/etc' 'quay.io/dexidp/dex:v2.21.0' bash
 5961  docker run -it --rm --name test-dex -p 443:5556 -v '/etc' 'quay.io/dexidp/dex:v2.21.0' dex
 5962  docker run -it --rm --name test-dex -p 443:5556 -v '/etc' 'quay.io/dexidp/dex:v2.21.0' '/usr/local/bin/dex'
 5963  docker run -it --rm --name test-dex -p 443:5556 -v '/etc' 'quay.io/dexidp/dex:v2.21.0' version
 5964  docker run -it --rm --name test-dex -p 443:5556 -v '/etc' 'quay.io/dexidp/dex:v2.21.0' serve
 5965  docker run -it --rm --name test-dex -p 443:5556 -v '/etc' 'quay.io/dexidp/dex:v2.21.0' serve /etc/dex/cfg/config.yaml
 5966  docker run -it --rm --name test-dex -p 443:5556 -v '/etc' 'quay.io/dexidp/dex:v2.21.0' --entrypoint /bin/bash dex serve /etc/dex/cfg/config.yaml
 5967  docker run -it --rm --name test-dex -p 443:5556 -v '/etc' --entrypoint /bin/bash 'quay.io/dexidp/dex:v2.21.0' serve /etc/dex/cfg/config.yaml
 5968  docker run -it --rm --name test-dex -p 443:5556 -v '/etc' --entrypoint /bin/bash 'quay.io/dexidp/dex:v2.21.0' dex serve /etc/dex/cfg/config.yaml
 5969  docker run -it --rm --name test-dex -p 443:5556 -v '/etc' --entrypoint /bin/sh 'quay.io/dexidp/dex:v2.21.0' dex serve /etc/dex/cfg/config.yaml
 5970  docker run -it --rm --name test-dex -p 443:5556 -v '/etc' --entrypoint /bin/sh 'quay.io/dexidp/dex:v2.21.0' 
 5971  docker run -it --rm --name test-dex -p 443:5556  --entrypoint /bin/sh 'quay.io/dexidp/dex:v2.21.0' 
 5972  docker run -it --rm --name test-dex -p 443:5556 -v '$(pwd)/dex:/etc/dex' --entrypoint /bin/sh 'quay.io/dexidp/dex:v2.21.0' 
 5973  docker run -it --rm --name test-dex -p 443:5556 -v $(pwd)/dex:/etc/dex --entrypoint /bin/sh 'quay.io/dexidp/dex:v2.21.0' 
 5974  docker run -it --rm --name test-dex -p 443:5556 -v $(pwd)/dex:/etc/dex --entrypoint /bin/sh 'quay.io/dexidp/dex:v2.21.0' dex serve /etc/dex/cfg/config.yaml\n
 5975  docker run -it --rm --name test-dex -p 443:5556 -v $(pwd)/dex:/etc/dex --entrypoint /bin/sh 'quay.io/dexidp/dex:v2.21.0' /usr/local/bin/dex serve /etc/dex/cfg/config.yaml\n
 5976  docker run -it --rm --name test-dex -p 443:5556 -v $(pwd)/dex:/etc/dex 'quay.io/dexidp/dex:v2.21.0' serve /etc/dex/cfg/config.yaml\n
 5977  docker run -it --rm --name test-dex -p 443:5556 -v $(pwd)/dex:/etc/dex 'quay.io/dexidp/dex:v2.9.0' serve /etc/dex/cfg/config.yaml\n
 5978  docker run -it --rm --name test-dex -p 443:5556 -v $(pwd)/dex:/etc/dex 'quay.io/dexidp/dex:v2.10.0' serve /etc/dex/cfg/config.yaml\n
 5979  docker run -it --rm --name test-dex -p 443:5556 -v $(pwd)/dex:/etc/dex --entrypoint /bin/sh 'quay.io/dexidp/dex:v2.21.0' 
 5980  docker run -it --rm --name test-dex -p 443:5556 -v $(pwd)/dex:/etc/dex 'quay.io/dexidp/dex:v2.10.0' serve /etc/dex/cfg/config.yaml\n
 5981  cd /etc
 5982  ls
 5983  sudo vi hosts
 5984  docker run -it --rm --name test-dex -p 443:5556 -v $(pwd)/dex:/etc/dex 'quay.io/dexidp/dex:v2.10.0' serve /etc/dex/cfg/config.yaml\n
 5985  cat /etc/hosts
 5986  ping di-diod-kubeflow.itn.intraorange
 5987  docker run -it --rm --name test-dex -p 443:5556 -v $(pwd)/dex:/etc/dex 'quay.io/dexidp/dex:v2.21.0' serve /etc/dex/cfg/config.yaml\n
 5988  cd
 5989  ll
 5990  find . -name dex
 5991  cd go/src/github.com/dexidp
 5992  ll
 5993  code .
 5994  docker run -it --rm --name test-dex -p 443:5556 -v $(pwd)/dex:/etc/dex 'quay.io/dexidp/dex:v2.21.0' serve /etc/dex/cfg/config.yaml\n
 5995  curl https://auth.tech.orange/.well-known/openid-configuration | jq\n
 5996  curl -d "grant_type=authorization_code&code=b442cfbf36b2c86b37303cac9b91f25715ae3335bdd9ae280968f20301fabb48&redirect_uri=https%3A%2F%2Fdi%2Ddiod%2Dkubeflow%2Eitn%2Eintraorange%2Fdex%2Fcallback" -H "Content-Type: application/x-www-form-urlencoded" -X POST https://auth.tech.orange/oauth2/token
 5997  curl -d "client_id=c5640724-f029-4fe2-8658-47d6d097541e&client_secret=eZJyHCMBWYQ0eXWWwiy9f2QR&grant_type=authorization_code&code=b442cfbf36b2c86b37303cac9b91f25715ae3335bdd9ae280968f20301fabb48&redirect_uri=https%3A%2F%2Fdi%2Ddiod%2Dkubeflow%2Eitn%2Eintraorange%2Fdex%2Fcallback" -H "Content-Type: application/x-www-form-urlencoded" -X POST https://auth.tech.orange/oauth2/token
 5998  curl -d "client_id=c5640724-f029-4fe2-8658-47d6d097541e&client_secret=eZJyHCMBWYQ0eXWWwiy9f2QR&grant_type=authorization_code&code=7be47ab376cf5d6957dbfed74944c33d6826bb5dea7059fe3af77c37056c27b6&redirect_uri=https%3A%2F%2Fdi%2Ddiod%2Dkubeflow%2Eitn%2Eintraorange%2Fdex%2Fcallback" -H "Content-Type: application/x-www-form-urlencoded" -X POST https://auth.tech.orange/oauth2/token
 5999  curl -d "client_id=c5640724-f029-4fe2-8658-47d6d097541e&client_secret=eZJyHCMBWYQ0eXWWwiy9f2QR&grant_type=authorization_code&code=7be47ab376cf5d6957dbfed74944c33d6826bb5dea7059fe3af77c37056c27b6&redirect_uri=https%3A%2F%2Fdi%2Ddiod%2Dkubeflow%2Eitn%2Eintraorange%2Fdex%2Fcallback" -H "Content-Type: application/x-www-form-urlencoded" -X POST https://auth.tech.orange/oauth2/token | jq
 6000  base64 -d eyJhbGciOiJSUzI1NiIsImtpZCI6IjlkNDQ3NDFmNzczYjkzOGNmNjVkZDMyNjY4NWI4NjE4MGMzMjRkOTkifQ.eyJpc3MiOiJodHRwOi8vMTI3LjAuMC4xOjU1NTYvZGV4Iiwic3ViIjoiQ2djeU16UXlOelE1RWdabmFYUm9kV0kiLCJhdWQiOiJleGFtcGxlLWFwcCIsImV4cCI6MTQ5Mjg4MjA0MiwiaWF0IjoxNDkyNzk1NjQyLCJhdF9oYXNoIjoiYmk5NmdPWFpTaHZsV1l0YWw5RXFpdyIsImVtYWlsIjoiZXJpYy5jaGlhbmdAY29yZW9zLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJncm91cHMiOlsiYWRtaW5zIiwiZGV2ZWxvcGVycyJdLCJuYW1lIjoiRXJpYyBDaGlhbmcifQ.OhROPq_0eP-zsQRjg87KZ4wGkjiQGnTi5QuG877AdJDb3R2ZCOk2Vkf5SdP8cPyb3VMqL32G4hLDayniiv8f1_ZXAde0sKrayfQ10XAXFgZl_P1yilkLdknxn6nbhDRVllpWcB12ki9vmAxklAr0B1C4kr5nI3-BZLrFcUR5sQbxwJj4oW1OuG6jJCNGHXGNTBTNEaM28eD-9nhfBeuBTzzO7BKwPsojjj4C9ogU4JQhGvm_l4yfVi0boSx8c0FX3JsiB0yLa1ZdJVWVl9m90XmbWRSD85pNDQHcWZP9hR6CMgbvGkZsgjG32qeRwUL_eNkNowSBNWLrGNPoON1gMg
 6001  base64 -d eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Im9pZGMtand0In0=
 6002  base64 -d
 6003  base64 
 6004  base64 --help
 6005  base64 -di - eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Im9pZGMtand0In0= 
 6006  base64 -d -i - eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Im9pZGMtand0In0= 
 6007  base64 -d - eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Im9pZGMtand0In0= 
 6008  echo eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Im9pZGMtand0In0= | base64 -d 
 6009  echo eyJhdXRoX3RpbWUiOjE1NzgzODQwNjAsImF0X2hhc2giOiJaTGtoQi1nckNYREVmLU1rdVpjZ3lBIiwic3ViIjoib3NiaTczNTIiLCJhenAiOiJjNTY0MDcyNC1mMDI5LTRmZTItODY1OC00N2Q2ZDA5NzU0MWUiLCJpYXQiOjE1NzgzOTQzMjEsImV4cCI6MTU3ODM5NzkyMSwiYXVkIjpbImM1NjQwNzI0LWYwMjktNGZlMi04NjU4LTQ3ZDZkMDk3NTQxZSJdLCJpc3MiOiJodHRwczovL2F1dGgudGVjaC5vcmFuZ2UiLCJhY3IiOiJsb2EtNCJ9 | base64 -d 
 6010  echo mCOs0dJnXzREqR2ZRE76PYO5wcYu_55l_yDBCmrO0L-pPIXi8Px-2MeV9dIvt-fNWKUKwl1DZO49GN9bB_r-WHLBq26sabtfPaKio4xcsTJI86voQ2C3_9dzfg_mN9nRIuOhIJR8DGMArHKAcAYzCuzc5-mOOfYPVRNR5ISOnPF_1gw2AEBMLho3BPAsc4pKM8_caGdBpnIFtKulL45gJrRmnzFX6AfrmxW_Zm9dTV7YPUICLunFeq9UecFmuKLP9adSD1AnVDmViQLrB0DXzgXturXART6p9hqzNnRAUGP6P4axuO6sevqcPFGp5lTS9klmD7EfYIRXm7TbB0pKiw | base64 -d 
 6011  sha256sum
 6012  shasum
 6013  shasum --help 
 6014  echo 
 6015  echo eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Im9pZGMtand0In0=.eyJhdXRoX3RpbWUiOjE1NzgzODQwNjAsImF0X2hhc2giOiJaTGtoQi1nckNYREVmLU1rdVpjZ3lBIiwic3ViIjoib3NiaTczNTIiLCJhenAiOiJjNTY0MDcyNC1mMDI5LTRmZTItODY1OC00N2Q2ZDA5NzU0MWUiLCJpYXQiOjE1NzgzOTQzMjEsImV4cCI6MTU3ODM5NzkyMSwiYXVkIjpbImM1NjQwNzI0LWYwMjktNGZlMi04NjU4LTQ3ZDZkMDk3NTQxZSJdLCJpc3MiOiJodHRwczovL2F1dGgudGVjaC5vcmFuZ2UiLCJhY3IiOiJsb2EtNCJ9 | shasum -a 256
 6016  curl -d "client_id=c5640724-f029-4fe2-8658-47d6d097541e&client_secret=eZJyHCMBWYQ0eXWWwiy9f2QR&grant_type=authorization_code&code=c776a244c07a777aab2f550112842c398f151c133ca40f9efb89556a20f2abe5&redirect_uri=https%3A%2F%2Fdi%2Ddiod%2Dkubeflow%2Eitn%2Eintraorange%2Fdex%2Fcallback" -H "Content-Type: application/x-www-form-urlencoded" -X POST https://auth.tech.orange/oauth2/token\n
 6017  curl -d "client_id=c5640724-f029-4fe2-8658-47d6d097541e&client_secret=eZJyHCMBWYQ0eXWWwiy9f2QR&grant_type=authorization_code&code=9b5765176bde474d95279c1bad39e6d6303135acdf09031cd1591cb533605191&redirect_uri=https%3A%2F%2Fdi%2Ddiod%2Dkubeflow%2Eitn%2Eintraorange%2Fdex%2Fcallback" -H "Content-Type: application/x-www-form-urlencoded" -X POST https://auth.tech.orange/oauth2/token\n
 6018  pwd
 6019  ll
 6020  cd dex
 6021  ll
 6022  make 
 6023  cd ../..
 6024  cd
 6025  cd Dev
 6026  exit
 6027  make 
 6028  make clean
 6029  make 
 6030  make docker-image
 6031  docker run -it --rm --name test-dex -p 443:5556 -v $(pwd)/dex:/etc/dex 'quay.io/dexidp/dex:seb' serve /etc/dex/cfg/config.yaml\n
 6032  make docker-image
 6033  docker run -it --rm --name test-dex -p 443:5556 -v $(pwd)/dex:/etc/dex 'quay.io/dexidp/dex:seb' serve /etc/dex/cfg/config.yaml\n
 6034  make docker-image
 6035  docker run -it --rm --name test-dex -p 443:5556 -v $(pwd)/dex:/etc/dex 'quay.io/dexidp/dex:seb2' serve /etc/dex/cfg/config.yaml\n
 6036  make docker-image
 6037  docker run -it --rm --name test-dex -p 443:5556 -v $(pwd)/dex:/etc/dex 'quay.io/dexidp/dex:seb2' serve /etc/dex/cfg/config.yaml\n
 6038  curl https://auth.tech.orange/.well-known/openid-configuration | jq\n
 6039  curl https://auth.tech.orange/oauth2/jwks
 6040  curl https://auth.tech.orange/oauth2/jwks | jq
 6041  make docker-image
 6042  docker run -it --rm --name test-dex -p 443:5556 -v $(pwd)/dex:/etc/dex 'quay.io/dexidp/dex:seb2' serve /etc/dex/cfg/config.yaml\n
 6043  make docker-image
 6044  docker run -it --rm --name test-dex -p 443:5556 -v $(pwd)/dex:/etc/dex 'quay.io/dexidp/dex:seb2' serve /etc/dex/cfg/config.yaml\n
 6045  make docker-image
 6046  docker run -it --rm --name test-dex -p 443:5556 -v $(pwd)/dex:/etc/dex 'quay.io/dexidp/dex:seb2' serve /etc/dex/cfg/config.yaml\n
 6047  make docker-image
 6048  docker run -it --rm --name test-dex -p 443:5556 -v $(pwd)/dex:/etc/dex 'quay.io/dexidp/dex:seb2' serve /etc/dex/cfg/config.yaml\n
 6049  pwd
 6050  ll
 6051  cd Dev
 6052  cd OB
 6053  mkdir OB
 6054  cd OB
 6055  ls /mnt
 6056  ls /
 6057  cd /Volumes
 6058  ll
 6059  cd Clé\ de\ Seb
 6060  ll
 6061  pwd
 6062  cd Orange\ Bank
 6063  ll
 6064  cd Git
 6065  ll
 6066  l
 6067  cp -r .ssh /Users/seb/Dev/OB
 6068  cd
 6069  cd OB
 6070  cd Dev/OB
 6071  ll
 6072  ls -la
 6073  mkdir GIT
 6074  mv GIT git
 6075  ll
 6076  ls -la
 6077  mv .ssh git
 6078  ll
 6079  ls -la
 6080  cd git
 6081  ll
 6082  ls -la
 6083  p
 6084  ps -ef
 6085  ps -ef | grep agent
 6086  git clone git@bitbucket.org:OsloProjet/ob-ia-engagement-fraud.git
 6087  pwd
 6088  ll .ss
 6089  ll .ssh
 6090  git clone git@bitbucket.org:OsloProjet/ob-ia-engagement-fraud.git -key /Users/seb/Dev/OB/git/.ssh/id_rsa
 6091  git clone git@bitbucket.org:OsloProjet/ob-ia-engagement-fraud.git -i /Users/seb/Dev/OB/git/.ssh/id_rsa
 6092  git -i /Users/seb/Dev/OB/git/.ssh/id_rsa  clone git@bitbucket.org:OsloProjet/ob-ia-engagement-fraud.git
 6093  git --elp 
 6094  git --help 
 6095  git -a clone
 6096  git help -a
 6097  git help -a clone
 6098  git help clonze
 6099  git help clone
 6100  vi ~/.ssh/config
 6101  ll
 6102  ls-la
 6103  ls -la
 6104  pwd
 6105  cat ~/.ssh/config
 6106  ll
 6107  git clone git@bitbucket.org:OsloProjet/ob-ia-engagement-fraud.git
 6108  chmod 400 .ssh/id_rsa
 6109  git clone git@bitbucket.org:OsloProjet/ob-ia-engagement-fraud.git
 6110  git branch
 6111  ll
 6112  cd ob-ia-engagement-fraud
 6113  git branch
 6114  git fetch --all 
 6115  git branch
 6116  git branch -a
 6117  git checkout remotes/origin/refonte_marple
 6118  git checkout remotes/origin/refonte_marple -f
 6119  cd ../..
 6120  ll
 6121  cd ../..
 6122  cd Dev/
 6123  cd kubeflow/install-de-di
 6124  cd temp
 6125  ll
 6126  python decode-jwt.py
 6127  pip install jwt
 6128  source ~/pon
 6129  pip install jwt
 6130  python decode-jwt.py
 6131  pip install pyjwt
 6132  python decode-jwt.py
 6133  pip install pyjwt[crypto]
 6134  pip install 'pyjwt[crypto]'
 6135  python decode-jwt.py
 6136  grep / "BEGIN PUBLIC KEY"
 6137  grep / -name "*" "BEGIN PUBLIC KEY"
 6138  grep "BEGIN PUBLIC KEY" /
 6139  grep "BEGIN PUBLIC KEY" /*
 6140  grep -r "BEGIN PUBLIC KEY" /*
 6141  grep -r "BEGIN PUBLIC KEY" /etc/*
 6142  exit
 6143  python decode-jwt.py
 6144  curl https://www.googleapis.com/oauth2/v3/certs | jq
 6145  curl https://www.googleapis.com/oauth2/v3/certs 
 6146  curl -v https://www.googleapis.com/oauth2/v3/certs 
 6147  source ~/pon
 6148  curl -v https://www.googleapis.com/oauth2/v3/certs 
 6149  python decode-jwt.py
 6150  curl -d "client_id=c5640724-f029-4fe2-8658-47d6d097541e&client_secret=eZJyHCMBWYQ0eXWWwiy9f2QR&grant_type=authorization_code&code=2f1baba48fb76b6dca86814cc7e2e2e14cf895dd138859907b4e9591b621765f&redirect_uri=https%3A%2F%2Fdi%2Ddiod%2Dkubeflow%2Eitn%2Eintraorange%2Fdex%2Fcallback" -H "Content-Type: application/x-www-form-urlencoded" -X POST https://auth.tech.orange/oauth2/token\n
 6151  curl -d "client_id=c5640724-f029-4fe2-8658-47d6d097541e&client_secret=eZJyHCMBWYQ0eXWWwiy9f2QR&grant_type=authorization_code&code=9b5765176bde474d95279c1bad39e6d6303135acdf09031cd1591cb533605191&redirect_uri=https%3A%2F%2Fdi%2Ddiod%2Dkubeflow%2Eitn%2Eintraorange%2Fdex%2Fcallback" -H "Content-Type: application/x-www-form-urlencoded" -X POST https://auth.tech.orange/oauth2/token\n
 6152  curl -d "client_id=c5640724-f029-4fe2-8658-47d6d097541e&client_secret=eZJyHCMBWYQ0eXWWwiy9f2QR&grant_type=authorization_code&code=c776a244c07a777aab2f550112842c398f151c133ca40f9efb89556a20f2abe5&redirect_uri=https%3A%2F%2Fdi%2Ddiod%2Dkubeflow%2Eitn%2Eintraorange%2Fdex%2Fcallback" -H "Content-Type: application/x-www-form-urlencoded" -X POST https://auth.tech.orange/oauth2/token
 6153  curl -d "client_id=c5640724-f029-4fe2-8658-47d6d097541e&client_secret=eZJyHCMBWYQ0eXWWwiy9f2QR&grant_type=authorization_code&code=2f1baba48fb76b6dca86814cc7e2e2e14cf895dd138859907b4e9591b621765f&redirect_uri=https%3A%2F%2Fdi%2Ddiod%2Dkubeflow%2Eitn%2Eintraorange%2Fdex%2Fcallback" -H "Content-Type: application/x-www-form-urlencoded" -X POST https://auth.tech.orange/oauth2/token\n
 6154  python decode-jwt.py
 6155  seldon-core-microservice-tester
 6156  cd Doc
 6157  cd Dev/
 6158  ll
 6159  cd kubeflow
 6160  ll
 6161  cd demo-cu
 6162  ll
 6163  cd 2-\ create\ container/
 6164  ll
 6165  cd src
 6166  ll
 6167  ls ../test
 6168  ll
 6169  seldon-core-microservice model_cu REST
 6170  curl -g http://localhost:5000/predict --data-urlencode 'json={"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'
 6171  cd ..
 6172  cod e.
 6173  code .
 6174  make docker-image
 6175  ll
 6176  git pull origin master \n
 6177  git pull origin master -f\n
 6178  cd ..
 6179  pwd
 6180  ll
 6181  git pull origin master -f\n
 6182  cd dex
 6183  ll
 6184  git pull origin master -f\n
 6185  docker images
 6186  docker images rm *
 6187  docker images rm 
 6188  docker images rm d3f4e813ddaf
 6189  docker rm images d3f4e813ddaf
 6190  docker rm d3f4e813ddaf
 6191  docker 
 6192  docker rmi d3f4e813ddaf
 6193  docker images
 6194  docker rmi 55fda52868f9 eb38b2c458ec 498e30b84233 4a68b913b77a 45b0036c5105 2da8bd59a664 
 6195  docker images
 6196  make docker-image
 6197  ll
 6198  make docker-image
 6199  docker run -it --rm --name test-dex -p 443:5556 -v $(pwd)/dex:/etc/dex 'quay.io/dexidp/dex:seb2' serve /etc/dex/cfg/config.yaml\n
 6200  ll
 6201  cd dex
 6202  ll
 6203  cd dex
 6204  ll
 6205  go build testcert
 6206  go build ./testcert
 6207  cd testcert
 6208  ll
 6209  go build
 6210  go build .
 6211  ll
 6212  go build .
 6213  ll
 6214  dex
 6215  ./dex
 6216  go build .
 6217  ./dex
 6218  go build . ; ./dex
 6219  docker run python 
 6220  docker run python python version 
 6221  docker run python  version 
 6222  docker run python python -v 
 6223  docker run python  -v 
 6224  docker run -it -rm python python -V 
 6225  docker run -it --rm python python -V 
 6226  docker run -it --rm python python:alpine -V 
 6227  docker run -it --rm python:alpine  python -V 
 6228  docker images
 6229  go build . ; ./dex
 6230  cd 
 6231  cd Dev/
 6232  mkdif gcp
 6233  mkdir gcp
 6234  cd gcp
 6235  ll
 6236  mkdir TestAI
 6237  cd TestAI
 6238  ll
 6239  virtualenv cmle-env
 6240  conda env
 6241  conda env create
 6242  conda env create --elp 
 6243  conda env create --help 
 6244  conda env create -n cmle-env
 6245  conda env create -n cmleenv
 6246  conda env create -n seb/cmle-env
 6247  anaconda login
 6248  conda
 6249  conda create --name cmle-env 
 6250  conda activate cmle-env
 6251  gcloud ai-platform models list
 6252  gcloud
 6253  gcloud projects list
 6254  gcloud projects --help
 6255  gcloud projects list
 6256  gcloud login
 6257  gcloud auth login
 6258  gcloud projects list
 6259  gcloud config set project test-ai-264809
 6260  gcloud ai-platform models list
 6261  gcloud components update
 6262  wget https://github.com/GoogleCloudPlatform/cloudml-samples/archive/master.zip
 6263  ll
 6264  unzip master.zip
 6265  ll
 6266  cd cloudml-samples-master
 6267  ll
 6268  cd census/estimator
 6269  ll
 6270  mkdir data\ngsutil -m cp gs://cloud-samples-data/ai-platform/census/data/* data/
 6271  mkdir data
 6272  gsutil -m cp gs://cloud-samples-data/ai-platform/census/data/* data/
 6273  gsutil -m cp 'gs://cloud-samples-data/ai-platform/census/data/*' data/
 6274  ll
 6275  ll data
 6276  TRAIN_DATA=$(pwd)/data/adult.data.csv\nEVAL_DATA=$(pwd)/data/adult.test.csv
 6277  pip install 'tensorflow==1.14.*'
 6278  conda install tensorflow==1.14.*
 6279  conda install 'tensorflow==1.14.*'
 6280  ll
 6281  MODEL_DIR=output
 6282  echo $MODEL_DIR
 6283  rm -rf $MODEL_DIR/*
 6284  \tgcloud ai-platform local train \\n    --module-name trainer.task \\n    --package-path trainer/ \\n    --job-dir $MODEL_DIR \\n    -- \\n    --train-files $TRAIN_DATA \\n    --eval-files $EVAL_DATA \\n    --train-steps 1000 \\n    --eval-steps 100
 6285  tensorboard --logdir=$MODEL_DIR
 6286  tensorboard --logdir=output
 6287  \tgcloud ai-platform local train \\n    --module-name trainer.task \\n    --package-path trainer/ \\n    --job-dir $MODEL_DIR \\n    -- \\n    --train-files $TRAIN_DATA \\n    --eval-files $EVAL_DATA \\n    --train-steps 1000 \\n    --eval-steps 100
 6288  rm -rf $MODEL_DIR/*
 6289  \tgcloud ai-platform local train \\n    --module-name trainer.task \\n    --package-path trainer/ \\n    --job-dir $MODEL_DIR \\n    -- \\n    --train-files $TRAIN_DATA \\n    --eval-files $EVAL_DATA \\n    --train-steps 1000 \\n    --eval-steps 100
 6290  gcloud ai-platform local train \\n    --module-name trainer.task \\n    --package-path trainer/ \\n    --job-dir $MODEL_DIR \\n    --distributed \\n    -- \\n    --train-files $TRAIN_DATA \\n    --eval-files $EVAL_DATA \\n    --train-steps 1000 \\n    --eval-steps 100
 6291  rm -rf $MODEL_DIR/*
 6292  gcloud ai-platform local train \\n    --module-name trainer.task \\n    --package-path trainer/ \\n    --job-dir $MODEL_DIR \\n    --distributed \\n    -- \\n    --train-files $TRAIN_DATA \\n    --eval-files $EVAL_DATA \\n    --train-steps 1000 \\n    --eval-steps 100
 6293  ll
 6294  ll output
 6295  MODEL_DIR=output
 6296  rm -rf $MODEL_DIR/*
 6297  gcloud ai-platform local train \\n    --module-name trainer.task \\n    --package-path trainer/ \\n    --job-dir $MODEL_DIR \\n    -- \\n    --train-files $TRAIN_DATA \\n    --eval-files $EVAL_DATA \\n    --train-steps 1000 \\n    --eval-steps 100
 6298  MODEL_DIR=output-dist
 6299  gcloud ai-platform local train \\n    --module-name trainer.task \\n    --package-path trainer/ \\n    --job-dir $MODEL_DIR \\n    --distributed \\n    -- \\n    --train-files $TRAIN_DATA \\n    --eval-files $EVAL_DATA \\n    --train-steps 1000 \\n    --eval-steps 100
 6300  ls -R output-dist/
 6301  ll
 6302  tensorboard --logdir=$MODEL_DIR
 6303  tensorboard --logdir=output-dist
 6304  exit
 6305  BUCKET_NAME="seb-testAI"
 6306  $(gcloud config list project --format "value(core.project)")
 6307  gcloud config list project --format "value(core.project)"
 6308  PROJECT_ID=$(gcloud config list project --format "value(core.project)")
 6309  env 
 6310  env | sort
 6311  export PROJECT_ID=$(gcloud config list project --format "value(core.project)")
 6312  env | sort
 6313  export BUCKET_NAME=${PROJECT_ID}-mlengine
 6314  echo $BUCKET_NAME
 6315  REGION=us-central1
 6316  gsutil mb -l $REGION gs://$BUCKET_NAME
 6317  gsutil cp -r data gs://$BUCKET_NAME/data
 6318  TRAIN_DATA=gs://$BUCKET_NAME/data/adult.data.csv\nEVAL_DATA=gs://$BUCKET_NAME/data/adult.test.csv
 6319  gsutil cp ../test.json gs://$BUCKET_NAME/data/test.json
 6320  TEST_JSON=gs://$BUCKET_NAME/data/test.json
 6321  JOB_NAME=census_single_1
 6322  OUTPUT_PATH=gs://$BUCKET_NAME/$JOB_NAME
 6323  gcloud ai-platform jobs submit training $JOB_NAME \\n    --job-dir $OUTPUT_PATH \\n    --runtime-version 1.14 \\n    --module-name trainer.task \\n    --package-path trainer/ \\n    --region $REGION \\n    -- \\n    --train-files $TRAIN_DATA \\n    --eval-files $EVAL_DATA \\n    --train-steps 1000 \\n    --eval-steps 100 \\n    --verbosity DEBUG
 6324  gsutil ls -r $OUTPUT_PATH
 6325  gcloud ai-platform jobs stream-logs $JOB_NAME
 6326  tensorboard --logdir=$OUTPUT_PATH
 6327  echo $OUTPUT_PAT
 6328  echo $OUTPUT_PATH
 6329  tensorboard --logdir=$OUTPUT_PATH
 6330  pip install --upgrade pip
 6331  JOB_NAME=census_dist_1
 6332  OUTPUT_PATH=gs://$BUCKET_NAME/$JOB_NAME
 6333  gcloud ai-platform jobs submit training $JOB_NAME \\n    --job-dir $OUTPUT_PATH \\n    --runtime-version 1.14 \\n    --module-name trainer.task \\n    --package-path trainer/ \\n    --region $REGION \\n    --scale-tier STANDARD_1 \\n    -- \\n    --train-files $TRAIN_DATA \\n    --eval-files $EVAL_DATA \\n    --train-steps 1000 \\n    --verbosity DEBUG  \\n    --eval-steps 100
 6334  tensorboard --logdir=$OUTPUT_PATH
 6335  code ..
 6336  HPTUNING_CONFIG=../hptuning_config.yaml\nJOB_NAME=census_core_hptune_1\nTRAIN_DATA=gs://$BUCKET_NAME/data/adult.data.csv\nEVAL_DATA=gs://$BUCKET_NAME/data/adult.test.csv
 6337  OUTPUT_PATH=gs://$BUCKET_NAME/$JOB_NAME
 6338  gcloud ai-platform jobs submit training $JOB_NAME \\n    --stream-logs \\n    --job-dir $OUTPUT_PATH \\n    --runtime-version 1.14 \\n    --config $HPTUNING_CONFIG \\n    --module-name trainer.task \\n    --package-path trainer/ \\n    --region $REGION \\n    --scale-tier STANDARD_1 \\n    -- \\n    --train-files $TRAIN_DATA \\n    --eval-files $EVAL_DATA \\n    --train-steps 1000 \\n    --verbosity DEBUG  \\n    --eval-steps 100
 6339  MODEL_NAME=census
 6340  gcloud ai-platform models create $MODEL_NAME --regions=$REGION
 6341  OUTPUT_PATH=gs://$BUCKET_NAME/census_dist_1
 6342  gsutil ls -r $OUTPUT_PATH/export
 6343  MODEL_BINARIES=gs://$BUCKET_NAME/census_dist_1/export/census/1578740919/\n
 6344  gcloud ai-platform versions create v1 \\n    --model $MODEL_NAME \\n    --origin $MODEL_BINARIES \\n    --runtime-version 1.14
 6345  MODEL_BINARIES=gs://$BUCKET_NAME/census_dist_1/export/census/1578740919/\n
 6346  gsutil ls $MODEL_BINARIES
 6347  gcloud ai-platform versions create v1 \\n    --model $MODEL_NAME \\n    --origin $MODEL_BINARIES \\n    --runtime-version 1.14
 6348  gcloud ai-platform models list
 6349  gcloud ai-platform predict \\n    --model $MODEL_NAME \\n    --version v1 \\n    --json-instances ../test.json
 6350  JOB_NAME=census_prediction_1
 6351  OUTPUT_PATH=gs://$BUCKET_NAME/$JOB_NAME
 6352  gcloud ai-platform jobs submit prediction $JOB_NAME \\n    --model $MODEL_NAME \\n    --version v1 \\n    --data-format text \\n    --region $REGION \\n    --input-paths $TEST_JSON \\n    --output-path $OUTPUT_PATH/predictions
 6353  gcloud ai-platform jobs describe $JOB_NAME
 6354  gcloud ai-platform jobs stream-logs $JOB_NAME
 6355  gsutil cat $OUTPUT_PATH/predictions/prediction.results-00000-of-00001
 6356  gsutil ls -r $OUTPUT_PATH
 6357  gsutil rm -r gs://$BUCKET_NAME/$JOB_NAME
 6358  cd ..
 6359  pwd
 6360  vagran 
 6361  vagrant
 6362  vagrant box list
 6363  brew upgrade 
 6364  vagrant box list
 6365  vagrant init arrikto/minikf
 6366  vagrant up
 6367  exit
 6368  k9s
 6369  ll
 6370  cd temp
 6371  source ~/pon
 6372  wget  https://github.com/kubeflow/manifests/archive/2b34c263cf5165339f856b50cd759db30c6cae9d.tar.gz
 6373  export KUBEFLOW_VERSION="v0.7.0"
 6374  curl -O -L https://github.com/kubeflow/kubeflow/releases/download/$\{KUBEFLOW_VERSION\}/kfctl_$\{KUBEFLOW_VERSION\}_linux.tar.gz && \n
 6375  curl -O -L https://github.com/kubeflow/kubeflow/releases/download/$\{KUBEFLOW_VERSION\}/kfctl_$\{KUBEFLOW_VERSION\}_linux.tar.gz\n
 6376  ll
 6377  ls -ltr
 6378  curl -O -L https://github.com/kubeflow/kubeflow/releases/download/${KUBEFLOW_VERSION\}/kfctl_${KUBEFLOW_VERSION\}_linux.tar.gz\n
 6379  curl -O -L https://github.com/kubeflow/kubeflow/releases/download/$KUBEFLOW_VERSION/kfctl_$KUBEFLOW_VERSION_linux.tar.gz\n
 6380  ls -ltr
 6381  env
 6382  curl https://github.com/kubeflow/manifests/archive/2b34c263cf5165339f856b50cd759db30c6cae9d.tar.gz | tar -ztv
 6383  curl https://github.com/kubeflow/manifests/archive/2b34c263cf5165339f856b50cd759db30c6cae9d.tar.gz 
 6384  curl -s https://api.github.com/repos/kubeflow/kubeflow/releases/latest | grep browser_download | grep linux | cut -d '"' -f 4 | xargs curl -O -L && tar -zvxf kfctl_*_linux.tar.gz
 6385  curl -s https://api.github.com/repos/kubeflow/kubeflow/releases/latest | grep browser_download | grep linux | cut -d '"' -f 4 
 6386  curl -s https://api.github.com/repos/kubeflow/kubeflow/releases/latest | grep browser_download | grep linux 
 6387  curl -s https://api.github.com/repos/kubeflow/kubeflow/releases/latest | grep browser_download 
 6388  curl -s https://api.github.com/repos/kubeflow/kubeflow/releases/latest
 6389  curl -S https://github.com/kubeflow/manifests/archive/2b34c263cf5165339f856b50cd759db30c6cae9d.tar.gz
 6390  curl -s https://codeload.github.com/kubeflow/manifests/tar.gz/2b34c263cf5165339f856b50cd759db30c6cae9d
 6391  ll
 6392  rm 2b34c263cf5165339f856b50cd759db30c6cae9d.tar.gz
 6393  curl -s https://codeload.github.com/kubeflow/manifests/tar.gz/2b34c263cf5165339f856b50cd759db30c6cae9d
 6394  ll
 6395  ls -ltr
 6396  curl https://codeload.github.com/kubeflow/manifests/tar.gz/2b34c263cf5165339f856b50cd759db30c6cae9d
 6397  curl https://github.com/kubeflow/manifests/archive/v0.7-branch.tar.gz
 6398  pwd
 6399  ll
 6400  ls -lr
 6401  cd kubeflow
 6402  ll
 6403  ll kustomize
 6404  ls -la
 6405  cd ..
 6406  ll
 6407  cd kubeflow
 6408  ll
 6409  diff
 6410  diff kfctl_k8s_istio.0.7.0.yaml
 6411  curl https://github.com/kubeflow/kubeflow/releases/download/v0.7.1/kfctl_v0.7.1-2-g55f9b2a_darwin.tar.gz
 6412  kk
 6413  ll
 6414  rm -rf .cache
 6415  ll
 6416  rm -rf kustomize
 6417  ll
 6418  cp ~/Downloads/kfctl_v0.7.1-2-g55f9b2a_darwin.tar .
 6419  ll
 6420  tar -xvf kfctl_v0.7.1-2-g55f9b2a_darwin.tar
 6421  ll
 6422  kfctl version
 6423  ./kfctl version
 6424  which kfctl
 6425  mv ./kfctl /usr/local/bin/kfctl
 6426  kfctl version
 6427  ll
 6428  cd ..
 6429  ll
 6430  ls -ltr
 6431  rm -rf kubeflow
 6432  cd test_install_v7
 6433  ll
 6434  cd kubeflow
 6435  ll
 6436  ../setup_config.sh
 6437  bash ../setup_config.sh
 6438  ll
 6439  ls kustomize
 6440  ../setup_config.sh
 6441  bash ../setup_config.sh
 6442  ll
 6443  ll kustomize
 6444  ll .cache
 6445  ll .cache/manifests
 6446  ll .cache/manifests/2b34c263cf5165339f856b50cd759db30c6cae9d
 6447  ll
 6448  wget https://codeload.github.com/kubeflow/manifests/tar.gz/2b34c263cf5165339f856b50cd759db30c6cae9d
 6449  ll
 6450  tar -tzvf 2b34c263cf5165339f856b50cd759db30c6cae9d
 6451  bash ../setup_config.sh
 6452  ll .cache/manifests
 6453  ls -ltr .cache
 6454  curl https://codeload.github.com/kubeflow/manifests/tar.gz/2b34c263cf5165339f856b50cd759db30c6cae9d
 6455  curl -o test https://codeload.github.com/kubeflow/manifests/tar.gz/2b34c263cf5165339f856b50cd759db30c6cae9d
 6456  ll
 6457  rm -f test
 6458  rm -f 2b34c263cf5165339f856b50cd759db30c6cae9d
 6459  ll
 6460  ll .cache/manifests
 6461  bash ../setup_config.sh
 6462  tree .cache
 6463  curl -s https://api.github.com/repos/kubeflow/kubeflow/releases
 6464  curl -s https://api.github.com/repos/kubeflow/kubeflow/releases/
 6465  git releases 
 6466  git ?
 6467  git --help
 6468  git show --help
 6469  curl https://github.com/kubeflow/kubeflow/releases/download/v0.7.0/kfctl_v0.7.0_linux.tar.gz
 6470  curl https://github-production-release-asset-2e65be.s3.amazonaws.com/112647343/1e452e80-feef-11e9-8ef2-56a275a0717e
 6471  curl https://github-production-release-asset-2e65be.s3.amazonaws.com/112647343/1e452e80-feef-11e9-8ef2-56a275a0717e\?X-Amz-Algorithm\=AWS4-HMAC-SHA256\&X-Amz-Credential\=AKIAIWNJYAX4CSVEH53A%2F20200113%2Fus-east-1%2Fs3%2Faws4_request\&X-Amz-Date\=20200113T154302Z\&X-Amz-Expires\=300\&X-Amz-Signature\=55189f7e966951659a9c26c29d963f61fa703b07a268edc6baacb1cedd00acab\&X-Amz-SignedHeaders\=host\&actor_id\=22870813\&response-content-disposition\=attachment%3B%20filename%3Dkfctl_v0.7.0_linux.tar.gz\&response-content-type\=application%2Foctet-stream
 6472  curl -o toto https://github-production-release-asset-2e65be.s3.amazonaws.com/112647343/1e452e80-feef-11e9-8ef2-56a275a0717e\?X-Amz-Algorithm\=AWS4-HMAC-SHA256\&X-Amz-Credential\=AKIAIWNJYAX4CSVEH53A%2F20200113%2Fus-east-1%2Fs3%2Faws4_request\&X-Amz-Date\=20200113T154302Z\&X-Amz-Expires\=300\&X-Amz-Signature\=55189f7e966951659a9c26c29d963f61fa703b07a268edc6baacb1cedd00acab\&X-Amz-SignedHeaders\=host\&actor_id\=22870813\&response-content-disposition\=attachment%3B%20filename%3Dkfctl_v0.7.0_linux.tar.gz\&response-content-type\=application%2Foctet-stream
 6473  ll
 6474  curl https://github.com/kubeflow/manifests/releases/tag/v0.7.0-rc.2
 6475  curl https://github.com/kubeflow/manifests/archive/v0.7.0-rc.2.tar.gz
 6476  curl https://codeload.github.com/kubeflow/manifests/tar.gz/v0.7-branch.tar.gz
 6477  curl https://codeload.github.com/kubeflow/manifests/tar.gz/v0.7-branch
 6478  curl -o tot https://codeload.github.com/kubeflow/manifests/tar.gz/v0.7-branch
 6479  curl -v https://codeload.github.com/kubeflow/manifests/tar.gz/v0.7-branch
 6480  bash ../setup_config.sh
 6481  ll .cache
 6482  ll .cache/manifests
 6483  curl  https://codeload.github.com/kubeflow/manifests/tar.gz/v0.7-branch | tar xzvf
 6484  curl  https://codeload.github.com/kubeflow/manifests/tar.gz/v0.7-branch | tar xzv
 6485  ll
 6486  source ~/poff
 6487  bash ../setup_config.sh
 6488  curl  https://codeload.github.com/kubeflow/manifests/tar.gz/v0.7-branch | tar xzv
 6489  bash ../setup_config.sh
 6490  curl --help
 6491  curl --helpcurl -s https://api.github.com/repos/kubeflow/kubeflow/releases/v0.7.0 
 6492  curl -s https://api.github.com/repos/kubeflow/kubeflow/releases/v0.7.0 
 6493  curl -v https://api.github.com/repos/kubeflow/kubeflow/releases/v0.7.0 
 6494  curl -v https://api.github.com/repos/kubeflow/kubeflow/releases/v07-branch
 6495  ll
 6496  curl -s -o kubeflow-manifest.tar.gz https://codeload.github.com/kubeflow/manifests/tar.gz/v0.7-branch
 6497  ll
 6498  curl -o kubeflow-manifest.tar.gz https://codeload.github.com/kubeflow/manifests/tar.gz/v0.7-branch
 6499  source ~/pon
 6500  curl -o kubeflow-manifest.tar.gz https://codeload.github.com/kubeflow/manifests/tar.gz/v0.7-branch
 6501  ll
 6502  curl https://codeload.github.com/kubeflow/manifests/tar.gz/v0.7-branch | tar -xzv
 6503  ll
 6504  rm -f kubeflow-manifest.tar.gz
 6505  rm -f tot
 6506  rm -f toto
 6507  ll
 6508  ll manifests-0.7-branch
 6509  ll
 6510  rm -rf manifests-0.7-branch
 6511  ll
 6512  curl https://codeload.github.com/kubeflow/manifests/tar.gz/v0.7-branch | tar -xzv
 6513  ll
 6514  cd ../
 6515  cd ..
 6516  ll
 6517  cd ..
 6518  ll
 6519  cd DIA/wassup
 6520  ll
 6521  cd ../test\ Laure
 6522  ll
 6523  code .
 6524  ls -ltr ~/Downloads
 6525  mv ~/Downloads/001DEFAULT_PUSH_MS.pkl .
 6526  ll
 6527  seldon-core-microservice model_cu REST
 6528  pip install --upgrade pip
 6529  pip install fbprophet
 6530  seldon-core-microservice model_cu REST
 6531  pip install pystan
 6532  pip install fbprophet
 6533  gcc
 6534  conda install -c conda-forge pystan
 6535  pip install fbprophet
 6536  seldon-core-microservice model_cu REST
 6537  curl -gk http://localhost/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [["2020-01-10", 50]]}}'\n
 6538  curl -gk http://localhost:5000/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [["2020-01-10", 50]]}}'\n
 6539  curl -gk http://localhost:5000/prediction -H "Content-Type: application/json" --data '{"data": {"ndarray": [["2020-01-10", 50]]}}'\n
 6540  curl -gk http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"ndarray": [["2020-01-10", 50]]}}'\n
 6541  curl -gk http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"ndarray": [["2020-01-10", 50],["2020-01-10", 51]]}}'\n
 6542  ^[[200~curl -gk http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"ndarray": [["2020-01-10 10:11:13,1234.0", 50],["2020-01-10 10:11:13,1234.0", 51]]}}'
 6543  ~
 6544  cd -
 6545  curl -gk http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"ndarray": [["2020-01-10 10:11:13,1234.0", 50],["2020-01-10 10:11:13,1234.0", 51]]}}'\n
 6546  seldon-core-microservice model_cu REST
 6547  curl -gk http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}'
 6548  seldon-core-microservice model_cu REST
 6549  curl -gk http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}'
 6550  seldon-core-microservice model_cu REST
 6551  curl -gk http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}'
 6552  seldon-core-microservice model_cu REST
 6553  curl -gk http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}'
 6554  vagrant list
 6555  vagrant box list
 6556  vagrant box 
 6557  vagrant box --help 
 6558  vagrant box list -h
 6559  vagrant box list --i
 6560  vagrant box list -i
 6561  vagrant status
 6562  vagrant box list -i
 6563  vagrant status -h
 6564  ll
 6565  cd 
 6566  cd Dev
 6567  ll
 6568  cd Dex
 6569  ll
 6570  cd kubeflow
 6571  ll
 6572  cd de
 6573  cd dex
 6574  ll
 6575  cd dex
 6576  ll
 6577  vi Dockerfile
 6578  ll
 6579  ls -la
 6580  code . 
 6581  cd ..
 6582  ll
 6583  cd ..
 6584  ll
 6585  ls -ltr
 6586  cd ..
 6587  ls -ltr
 6588  find . -name Dockerfile 
 6589  history | grep auth
 6590  history | grep push
 6591  history | grep dockerfactory
 6592  grep -r "autservice" .
 6593  cd kubeflow/install-de-di
 6594  cd kubeflow-core
 6595  ll
 6596  cd utils
 6597  mm
 6598  ll
 6599  cd orange-oidc-authservice
 6600  ll
 6601  docker login dockerfactory-unstable-iva.si.francetelecom.fr --username osbi7352
 6602  bash build_image.sh
 6603  code ~/.kube
 6604  env
 6605  env | sort
 6606  ls -ltr ~/.kube
 6607  kubectl version
 6608  kubectl get pods
 6609  kubectl get pods --all-namespaces
 6610  kubectl get dep --all-namespaces
 6611  kubectl get deploy --all-namespaces
 6612  k9s
 6613  curl -v istio-ingressgateway
 6614  curl -v https://di-diod-kubeflow.itn.intraorange
 6615  sudo vi /etc/hosts
 6616  curl -v https://di-diod-kubeflow.itn.intraorange
 6617  curl -v -g https://di-diod-kubeflow.itn.intraorange
 6618  curl -v https://di-diod-kubeflow.itn.intraorange
 6619  curl -vX https://di-diod-kubeflow.itn.intraorange
 6620  curl -vg https://di-diod-kubeflow.itn.intraorange
 6621  curl -h 
 6622  curl -vvi  https://di-diod-kubeflow.itn.intraorange
 6623  cd /Users/seb/anaconda3/ssl
 6624  ll
 6625  cd misc
 6626  ll
 6627  cat tsget
 6628  openssl s_client -showcerts -servername "di-diod-kubeflow.itn.intraorange" -connect di-diod-kubeflow.itn.intraorange:443
 6629  ll
 6630  cd
 6631  cd /tmp
 6632  ll
 6633  echo quit | openssl s_client -showcerts -servername "di-diod-kubeflow.itn.intraorange" -connect di-diod-kubeflow.itn.intraorange:443 > cacert.pem
 6634  ll
 6635  cat cacert.pem
 6636  conda config --show ssl_verify\n
 6637  conda config --get ssl_verify\n
 6638  cd
 6639  ll
 6640  cd cert
 6641  ll
 6642  history | grep Groupe_F
 6643  code .
 6644  cd ../
 6645  ll
 6646  cd .anaconda
 6647  ll
 6648  cd 
 6649  cd anaconda3
 6650  ll
 6651  find . -name cacert.pem 
 6652  pwd
 6653  cd
 6654  cd cert
 6655  ll
 6656  bash update.sh
 6657  curl -vvi  https://di-diod-kubeflow.itn.intraorange
 6658  ll
 6659  cd ../..
 6660  ll
 6661  cd ..
 6662  ll
 6663  cd DIA
 6664  ll
 6665  cd test\ Laure
 6666  ll
 6667  mkdir redisdata
 6668  ll
 6669  bash start-redis.sh
 6670  docker run --name redis-wassup -v $(pwd)/redisdata:/data -d redis redis-server --appendonly yes
 6671  docker run --name redis-wassup -d redis redis-server --appendonly yes
 6672  docker container ls -a
 6673  docker container --help 
 6674  docker container rm 1603df917248
 6675  docker container rm 262ecc3fcdac e50b9774e925 116652b17ad0 f4e602a77014 1d9bc8b13a3c
 6676  docker container ls -a
 6677  docker rm 210e88f6259a
 6678  docker stop  210e88f6259a
 6679  docker rm 210e88f6259a
 6680  docker run --name redis-wassup -v $(pwd)/redisdata:/data -d redis redis-server --appendonly yes
 6681  echo $(pwd)
 6682  docker run --name redis-wassup -v "$(pwd)/redisdata":/data redis redis-server --appendonly yes
 6683  ll
 6684  ll redisdata
 6685  chmod +x start-redis.sh
 6686  ll
 6687  cp start-redis.sh stop-redis.sh
 6688  ll
 6689  ./start-redis.sh
 6690  ./stop-redis.sh
 6691  ./start-redis.sh
 6692  ./stop-redis.sh
 6693  ./start-redis.sh
 6694  ./stop-redis.sh
 6695  ./start-redis.sh
 6696  conda install redis
 6697  source ~/pon
 6698  conda install redis
 6699  pip install redis
 6700  ll
 6701  python test_redis.py
 6702  docker log
 6703  docker container logs redis-wassup 
 6704  docker run -it --network some-network --rm redis redis-cli -h some-redis
 6705  docker run -it --rm redis redis-cli -h some-redis
 6706  ./stop-redis.sh
 6707  ./start-redis.sh
 6708  python test_redis.py
 6709  ll
 6710  mkdir data
 6711  ll -ltr ~/Downloads
 6712  mv ~/Downloads/data_train-25.csv data
 6713  ll
 6714  python test_redis.py
 6715  docker run -it --rm redis redis-cli -h some-redis
 6716  docker container ls
 6717  docker run -it --rm redis redis-cli -h redis-wassup
 6718  docker run -it --rm redis redis-cli -h localhost
 6719  docker run -it --rm redis redis-cli -h127.0.0.1
 6720  docker run -it --rm redis redis-cli -h 127.0.0.1
 6721  docker container logs redis-wassup 
 6722  python test_redis.py
 6723  ./start-redis.sh
 6724  ./stop-redis.sh
 6725  ./start-redis.sh
 6726  python test_redis.py
 6727  docker container logs redis-wassup 
 6728  ll
 6729  ll redisdata
 6730  python test_redis.py`\n
 6731  docker run -it --rm redis redis-cli -h 127.0.0.1
 6732  curl localhost:6379
 6733  docker run -it --rm redis bash -h 127.0.0.1
 6734  docker run -it --rm redis sh -h 127.0.0.1
 6735  docker run -it --rm redis redis-cli --help
 6736  docker run -it --rm redis redis-cli -h 127.0.0.1 -n 0
 6737  docker run -it --rm redis redis-cli -h 127.0.0.1 -n 0 PING
 6738  docker run -it --rm redis redis-cli --verbose -h 127.0.0.1 -n 0 PING
 6739  docker run -it --rm redis redis-cli --verbose -h 127.0.0.1 -n 0
 6740  docker container ls
 6741  docker container ls -a
 6742  docker run -it --rm redis redis-cli --verbose -h 127.0.0.1 -n 0
 6743  redis-cl
 6744  redis-cli
 6745  ./stop-redis.sh
 6746  ./start-redis.sh
 6747  python test_redis.py`\n
 6748  python test_redis.py\n
 6749  pip isntall rejson 
 6750  pip install rejson 
 6751  python test_redis.py\n
 6752  docker container logs redis-wassup 
 6753  ./stop-redis.sh
 6754  ll
 6755  ll redisdata
 6756  rm -f redisdata/appendonly.aof
 6757  ./start-redis.sh
 6758  python test_redis.py\n
 6759  ./stop-redis.sh
 6760  ./start-redis.sh
 6761  python test_redis.py\n
 6762  docker run -it --rm redis redis-cli --verbose -h 127.0.0.1 
 6763  python test_redis.py\n
 6764  python test2
 6765  ll
 6766  python tes2.py
 6767  python test_redis.py\n
 6768  seldon-core-microservice model_cu REST
 6769  exit
 6770  curl -gk http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}'\n
 6771  seldon-core-microservice model_cu REST
 6772  curl -gk http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}'\n
 6773  seldon-core-microservice model_cu REST
 6774  curl -gk http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}'\n
 6775  seldon-core-microservice model_cu REST
 6776  curl -gk http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}'\n
 6777  exit
 6778  seldon-core-microservice model_cu REST
 6779  curl -gk http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}'\n
 6780  seldon-core-microservice model_cu REST
 6781  curl -gk http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}'\n
 6782  seldon-core-microservice model_cu REST
 6783  curl -gk http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}'\n
 6784  curl -gk http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"ndarray": [["2020-01-10 10:11:15", 53200],["2020-01-10 10:11:16", 53220]]}}'\n
 6785  python tes2.py
 6786  python load_wassup.py
 6787  ll data
 6788  python load_wassup.py
 6789  seldon-core-microservice model_cu REST
 6790  python load_wassup.py
 6791  seldon-core-microservice model_cu REST
 6792  python load_wassup.py
 6793  seldon-core-microservice model_cu REST
 6794  python load_wassup.py
 6795  seldon-core-microservice model_cu REST
 6796  python load_wassup.py
 6797  seldon-core-microservice model_cu REST
 6798  python load_wassup.py
 6799  seldon-core-microservice model_cu REST
 6800  python load_wassup.py
 6801  seldon-core-microservice model_cu REST
 6802  python load_wassup.py
 6803  seldon-core-microservice model_cu REST
 6804  python load_wassup.py
 6805  exit
 6806  cd ../../..
 6807  cd ../..
 6808  cd immo
 6809  ll
 6810  code .
 6811  conda 
 6812  pip install --upgrade plotly
 6813  source ~/pon
 6814  pip install --upgrade plotly
 6815  exit
 6816  cd Dev
 6817  cd DIA
 6818  ll
 6819  cd test\ Laure
 6820  ll
 6821  cat ~/pon
 6822  source ~/poncat ~/.docker/config.json.pon
 6823  cat ~/.docker/config.json.pon
 6824  cd ~
 6825  ll
 6826  cd .pip
 6827  ll
 6828  cd Dev/DIA
 6829  ll
 6830  cd wassup
 6831  lmlm
 6832  ll
 6833  cd ..
 6834  cd test\ Laure
 6835  ll
 6836  git clone git@gitlab.tech.orange:kubeflow/models/wassup.git
 6837  cd ~.ssh
 6838  cd ~/.ssh
 6839  ll
 6840  cat config
 6841  history | grep curl 
 6842  history | grep curl | grep 5000
 6843  cd 
 6844  cd Dev/DIA
 6845  cd test\ Laure
 6846  ll
 6847  cd wassup
 6848  ll
 6849  git pill
 6850  git pull
 6851  ll
 6852  ll test
 6853  ll
 6854  cp ~/Dev/kubeflow/demo-cu/2-\ create\ container/test/env.list test/
 6855  docker run --name "model-cu" --rm --env-file env.list -p 5000:5000 dockerfactory-unstable-iva.si.francetelecom.fr/hvfd8529/wassup/wassup_tr:1.0\n
 6856  docker run --name "model-cu" --rm --env-file test/env.list -p 5000:5000 dockerfactory-unstable-iva.si.francetelecom.fr/hvfd8529/wassup/wassup_tr:1.0\n
 6857  curl http://127.0.0.1:5000/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [[7.233, 4.652, 7.39, 0.324, ""],[5,4,2,1, ""]]}}'
 6858  curl -gk http://localhost:5000/api/v0.1/predictions -H "Content-Type: application/x-www-form-urlencoded" --data '{"data": {"ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}'\n
 6859  curl -gk http://localhost:5000/api/v0.1/predictions -H "Content-Type: application/x-www-form-urlencoded" --data '{"data": {"ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}'curl -gk http://localhost:5000/api/v0.1/predictions -H "Content-Type: application/x-www-form-urlencoded" --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}'\n\n
 6860  curl -gk http://localhost:5000/api/v0.1/predictions -H "Content-Type: application/x-www-form-urlencoded" --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}'\n
 6861  curl -gk http://localhost:5000/api/v0.1/predictions -H "Content-Type: application/x-www-form-urlencoded" --data '{"data": {"names": ["ts", "nb"], "ndarray": ["2020-01-10 10:11:14", 51]}}'\n
 6862  curl -gk http://localhost:5000/api/v0.1/predictions -H "Content-Type: application/x-www-form-urlencoded" --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:14", 51]]}}'\n
 6863  curl -gk http://localhost:5000/api/v0.1/predictions -H "Content-Type: application/x-www-form-urlencoded" --data '{"data": { "ndarray": [["2020-01-10 10:11:14", 51]]}}'\n
 6864  curl -gk http://localhost:5000/api/v0.1/predictions -H "Content-Type: application/x-www-form-urlencoded" --data '{"data":{"ndarray":[["2020-01-10 10:11:14", 51]]}}'\n
 6865  curl -gk http://localhost:5000/api/v0.1/predictions -H "Content-Type: application/x-www-form-urlencoded" --data '{"data":{"ndarray":}}'\n
 6866  curl -gk http://localhost:5000/api/v0.1/predictions -H "Content-Type: application/x-www-form-urlencoded" \n
 6867  curl -gk http://localhost:5000/api/v0.1/predictions -H "Content-Type: application/x-www-form-urlencoded" --data '{}'\n
 6868  curl -H "Content-Type: application/x-www-form-urlencoded" -d 'json={"data":{"tensor":{"shape":[1,37],"values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37]}}}' http://localhost:5000/api/v0.1/predictions
 6869  docker run --name "model-cu" --rm --env-file test/env.list -p 9000:9000 dockerfactory-unstable-iva.si.francetelecom.fr/hvfd8529/wassup/wassup_tr:1.0\n
 6870  docker run --name "model-cu" --rm --env-file test/env.list -p 5000:5000 dockerfactory-unstable-iva.si.francetelecom.fr/hvfd8529/wassup/wassup_tr:1.0\n
 6871  curl -H "Content-Type: application/x-www-form-urlencoded" -d 'json={"data":{"tensor":{"shape":[1,37],"values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37]}}}' http://localhost:5000/api/v0.1/predictions
 6872  curl -H "Content-Type: application/x-www-form-urlencoded" -d 'json={"data":{"tensor":{"shape":[1,37],"values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37]}}}' -v http://localhost:5000/api/v0.1/predictions
 6873  curl -Gk http://localhost:5000/api/v0.1/predictions -H "Content-Type: application/x-www-form-urlencoded" --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}'\n
 6874  curl -H "Content-Type: application/x-www-form-urlencoded" -d 'json={"data":{"tensor":{"shape":[1,37],"values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37]}}}' -v http://localhost:5000/predict
 6875  curl -H "Content-Type: application/x-www-form-urlencoded" -d 'json={"data":{"tensor":{"shape":[1,37],"values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37]}}}' -v http://localhost:5000/predicts
 6876  curl -H "Content-Type: application/x-www-form-urlencoded" -d 'json={"data":{"tensor":{"shape":[1,37],"values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37]}}}' -v http://localhost:5000/api/v1.0/predictions
 6877  curl -H "Content-Type: application/x-www-form-urlencoded" -d 'json={"data":{"tensor":{"shape":[1,37],"values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37]}}}' -v http://localhost:5000/api/v1.0/predict
 6878  docker run --name "model-cu" --rm --env-file test/env.list -p 5000:5000 dockerfactory-unstable-iva.si.francetelecom.fr/hvfd8529/wassup/wassup_tr:1.0 bash\n
 6879  docker run --name "model-cu" --rm --env-file test/env.list -p 5000:5000 -it dockerfactory-unstable-iva.si.francetelecom.fr/hvfd8529/wassup/wassup_tr:1.0 bash0 \n
 6880  docker run --name "model-cu" --rm --env-file test/env.list -p 5000:5000 -it dockerfactory-unstable-iva.si.francetelecom.fr/hvfd8529/wassup/wassup_tr:1.0 bash\n
 6881  docker inspect dockerfactory-unstable-iva.si.francetelecom.fr/hvfd8529/wassup/wassup_tr:1.0
 6882  docker run --name "model-cu" --rm --env-file test/env.list -p 5000:5000 -it dockerfactory-unstable-iva.si.francetelecom.fr/hvfd8529/wassup/wassup_tr:1.0 bash\n
 6883  ll
 6884  docker login dockerfactory-unstable-iva.si.francetelecom.fr --username osbi7352
 6885  ./build-images.sh
 6886  docker run --name "model-cu" --rm --env-file test/env.list -p 9000:9000 dockerfactory-unstable-iva.si.francetelecom.fr/hvfd8529/wassup/wassup_tr:1.0\n
 6887  cd Dev/imm@
 6888  cd Dev/immo
 6889  ll
 6890  code .
 6891  brew install libomp
 6892  pip install --upgrade mxnet\npip install autogluon
 6893  pwd
 6894  code .
 6895  exit
 6896  cd ../
 6897  cd dia
 6898  ll
 6899  cd wassup
 6900  ll
 6901  cd ../test\ Laure
 6902  ll
 6903  cd wassup
 6904  ll
 6905  code .
 6906  vagrant status -h
 6907  vagrant status 
 6908  ll
 6909  ./build-images.sh
 6910  docker run --name "model-cu" --rm --env-file test/env.list -p 9000:9000 dockerfactory-unstable-iva.si.francetelecom.fr/osbi/wassup/wassup_tr:1.0\n
 6911  docker run --name "model-cu" --rm --env-file test/env.list -p 9000:9000 dockerfactory-unstable-iva.si.francetelecom.fr/osbi7352/wassup/wassup_tr:1.0\n
 6912  docker run --name "model-cu" --rm --env-file test/env.list -p 9000:9000 dockerfactory-unstable-iva.si.francetelecom.fr/osbi/wassup/wassup_tr:1.0\n
 6913  ./build-images.sh
 6914  docker run --name "model-cu" --rm --env-file test/env.list -p 9000:9000 dockerfactory-unstable-iva.si.francetelecom.fr/osbi7352/wassup/wassup_tr:1.0\n
 6915  ./build-images.sh
 6916  ls --inject /mydir:/container/dir 
 6917  ls ./src/.s2i/whl
 6918  ls -la  ./src/.s2i/whl 
 6919  ./build-images.sh
 6920  git config
 6921  cd .git
 6922  ll
 6923  cat config
 6924  cd 
 6925  cd - 
 6926  cd ..
 6927  ll
 6928  source /Users/seb/anaconda3/bin/activate
 6929  conda activate base
 6930  git remote --help 
 6931  git remote get-url origin
 6932  git push -u origin master
 6933  git push -u origin redis
 6934  git push 
 6935  git pull
 6936  ssh git@gitlab.tech.orange
 6937  source ~/poff
 6938  ssh git@gitlab.tech.orange
 6939  ping gitlab.tech.orange
 6940  ssh -T git@gitlab.tech.orange
 6941  git push
 6942  docker run --name "model-cu" --rm --env-file test/env.list -p 9000:9000 dockerfactory-unstable-iva.si.francetelecom.fr/osbi7352/wassup/wassup_tr:1.0\n
 6943  source ~/pon
 6944  docker run --name "model-cu" --rm --env-file test/env.list -p 9000:9000 dockerfactory-unstable-iva.si.francetelecom.fr/osbi7352/wassup/wassup_tr:1.0\n
 6945  ./build-images.sh
 6946  ipconfig
 6947  ifconfig
 6948  docker run --name "model-cu" --rm --env-file test/env.list -p 9000:9000 dockerfactory-unstable-iva.si.francetelecom.fr/osbi7352/wassup/wassup_tr:1.0\n
 6949  curl -H "Content-Type: application/x-www-form-urlencoded" -d 'json={"data":{"tensor":{"shape":[1,37],"values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37]}}}' -v http://localhost:5000/api/v1.0/predict
 6950  docker run --name "model-cu" --rm --env-file test/env.list -p 5000:5000 dockerfactory-unstable-iva.si.francetelecom.fr/osbi7352/wassup/wassup_tr:1.0\n
 6951  curl -H "Content-Type: application/x-www-form-urlencoded" -d 'json={"data":{"tensor":{"shape":[1,37],"values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37]}}}' -v http://localhost:5000/api/v1.0/predict
 6952  curl -H "Content-Type: application/x-www-form-urlencoded" -d 'json={"data":{"tensor":{"shape":[1,37],"values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37]}}}' -v http://localhost:5000/api/v1.0/predictions
 6953  code ..
 6954  cd ..
 6955  ll
 6956  ./start-redis.sh
 6957  docker container 
 6958  docker container  ls
 6959  ./stop-redis.sh
 6960  ./start-redis.sh
 6961  docker container  ls
 6962  curl -H "Content-Type: application/x-www-form-urlencoded" -d 'json={"data":{"tensor":{"shape":[1,37],"values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37]}}}' -v http://localhost:5000/api/v1.0/predictions
 6963  docker run -v "$(pwd)/redisdata":/data -p 6379:6379 -rm -it  redislabs/rejson:latest redis-server 
 6964  docker run -v "$(pwd)/redisdata":/data -p 6379:6379  -it  redislabs/rejson:latest redis-server --help 
 6965  docker run -v  -it  redislabs/rejson:latest redis-server --help 
 6966  ./stop-redis.sh
 6967  ./start-redis.sh
 6968  curl -H "Content-Type: application/x-www-form-urlencoded" -d 'json={"data":{"tensor":{"shape":[1,37],"values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37]}}}' -v http://localhost:5000/api/v1.0/predictions
 6969  curl -H "Content-Type: application/x-www-form-urlencoded" -d 'json={"data":{"tensor":{"shape":[1,37],"values":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37]}}}' http://localhost:5000/api/v1.0/predictions
 6970  curl -Gk http://localhost:5000/api/v0.1/predictions -H "Content-Type: application/x-www-form-urlencoded" --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}'\n
 6971  curl -k http://localhost:5000/api/v0.1/predictions -H "Content-Type: application/x-www-form-urlencoded" --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}'\n
 6972  curl -Gk http://localhost:5000/api/v0.1/predictions -H "Content-Type: application/x-www-form-urlencoded" --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}'curl -gk http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}'\n\n
 6973  curl -gk http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}'\n
 6974  curl -gk http://localhost:5000/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}'\n
 6975  python load_wassup.py
 6976  ll
 6977  python load_wassup.py
 6978  zsh_stats
 6979  d
 6980  upgrade_oh_my_zsh
 6981  cd
 6982  ll
 6983  ls -la
 6984  cd .zsh
 6985  cd .zshrc
 6986  ls -la
 6987  vi .zshrc
 6988  cat -v
 6989  bindkey --help
 6990  bindkey help
 6991  bindkey -d
 6992  cd .oh-my-zsh
 6993  ll
 6994  cat oh-my-zsh.sh
 6995  cd
 6996  ll
 6997  wget ftp://ftp.greyhelm.com/pub/Games/Moria/mac/
 6998  source ~/poff
 6999  wget ftp://ftp.greyhelm.com/pub/Games/Moria/mac/
 7000  exit
 7001  %3CmxGraphModel%3E%3Croot%3E%3CmxCell%20id%3D%220%22%2F%3E%3CmxCell%20id%3D%221%22%20parent%3D%220%22%2F%3E%3CmxCell%20id%3D%222%22%20value%3D%22Build%20and%20deploy%20models%22%20style%3D%22text%3Bhtml%3D1%3BstrokeColor%3Dnone%3BfillColor%3Dnone%3Balign%3Dleft%3BverticalAlign%3Dmiddle%3BwhiteSpace%3Dwrap%3Brounded%3D0%3B%22%20vertex%3D%221%22%20parent%3D%221%22%3E%3CmxGeometry%20x%3D%22-150%22%20y%3D%22270%22%20width%3D%22112%22%20height%3D%2220%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3C%2Froot%3E%3C%2FmxGraphModel%3E
 7002  curl -gk http://localhost:5000/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}'\n
 7003  "names": ["ts", "nb"], 
 7004  curl -gk http://localhost:5000/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}'
 7005  helm --help 
 7006  helm install --help 
 7007  ll
 7008  cd src
 7009  l
 7010  cd ../deploy
 7011  ll
 7012  cd redis
 7013  ll
 7014  cd 00-set-secret
 7015  cat redis.password | base64 | tr -d '\n'
 7016  cat redis.password | tr -d '\n' | base64 | tr -d '\n'
 7017  kubectl apply -f secret.yaml -n admin
 7018  kubect get cm -n admin
 7019  kubectl get cm -n admin
 7020  kubectl get all -n admin
 7021  ks9
 7022  k9s
 7023  cd ..
 7024  ll
 7025  helm install --name redis-wassuptr stable/redis --values values-production.yaml --namespace admin
 7026  cd Dev
 7027  ll
 7028  cd git
 7029  ll
 7030  code .
 7031  ll
 7032  cd 
 7033  cd Dev
 7034  cd immo
 7035  ll
 7036  mkdir ban
 7037  cd ban
 7038  ll
 7039  wget https://adresse.data.gouv.fr/data/ban/adresses-odbl/latest/addok/addok-france-bundle.zip
 7040  mkdir addok-data
 7041  unzip -d addok-data addok-france-bundle.zip
 7042  wget https://raw.githubusercontent.com/etalab/addok-docker/master/docker-compose.yml
 7043  ll
 7044  docker-compose up
 7045  source ~/poff
 7046  docker-compose up
 7047  code ..
 7048  docker pull etalab/addok
 7049  source ~/poff
 7050  exit
 7051  cat ~/poff
 7052  docker pull etalab/addok
 7053  cd ~/.docker
 7054  ll
 7055  ls -ltr
 7056  cat daemon.json
 7057  cat config.json
 7058  vi ~/poff
 7059  cat daemon.json
 7060  vi ~/pon
 7061  source ~/poff
 7062  docker pull etalab/addok
 7063  source ~/pon
 7064  docker pull etalab/addok
 7065  docker pull alpine
 7066  ll
 7067  code ~
 7068  source ~/pon
 7069  source ~/poff
 7070  docker 
 7071  docker pull alpine
 7072  docker-compose up
 7073  cd -
 7074  ll
 7075  docker-compose up
 7076  cd -
 7077  cd 
 7078  cd Dev
 7079  cd immo
 7080  ll
 7081  curl "http://localhost:7878/search?q=1+rue+de+la+paix+paris"
 7082  ll
 7083  cat logs
 7084  ll
 7085  docker-compose up
 7086  curl "http://localhost:7878/search?q=1+rue+de+la+paix+paris"
 7087  curl "http://localhost:7878/search?q=1+rue+de+la+paix+paris" | jq
 7088  code .
 7089  curl "http://localhost:7878/search/csv | jq
 7090  curl "http://localhost:7878/search/csv" | jq
 7091  curl "http://localhost:7878/search/csv"
 7092  curl "http://localhost:7878/search/csv" -v
 7093  https://maps.googleapis.com/maps/api/place/nearbysearch/json\?location\=49.768779,4.183304\&radius\=1500\&type\=restaurant\&keyword\=cruise\&key\=AIzaSyBg1f79tDipQ08sv_cDPwDrHDPUsqcew9g\n
 7094  curl https://maps.googleapis.com/maps/api/place/nearbysearch/json\?location\=49.768779,4.183304\&radius\=1500\&type\=restaurant\&keyword\=cruise\&key\=AIzaSyBg1f79tDipQ08sv_cDPwDrHDPUsqcew9g\n
 7095  curl https://maps.googleapis.com/maps/api/place/nearbysearch/json\?location\=49.768779,4.183304\&radius\=1500\&key\=AIzaSyBg1f79tDipQ08sv_cDPwDrHDPUsqcew9g\n
 7096  http://localhost:7878/search/\?q\=LE%20LAIT%201240%20LENT
 7097  curl http://localhost:7878/search/\?q\=LE%20LAIT%201240%20LENT
 7098  curl http://localhost:7878/search/\?q\=LE%20LAIT%201240%20LENT | jq
 7099  curl http://localhost:7878/search/\?q\=LE%20LAIT%2001240%20LENT | jq
 7100  head data/valeursfoncieres-2018.txt
 7101  ll
 7102  head toto.csv
 7103  cat toto.csv
 7104  ll
 7105  head data/valeursfoncieres-2018.txt 
 7106  head data/valeursfoncieres-2018.txt  > add-light.csv
 7107  http
 7108  curl -f POST http://localhost:7878/search/csv/ columns='No voie' colcurl -f POST http://localhost:7878/search/csv/ columns='No voie' columns='B/T/Q' columns='Type de voie' columns='Voie' columns='Code postal' columns='Commune' data@add-light.csv
 7109  curl http://localhost:7878/search/\?q\=LE%20LAIT%201240%20LENT | jq
 7110  exit
 7111  ll
 7112  cd deploy
 7113  ll
 7114  cd redis
 7115  ll
 7116  code ../..
 7117  ll
 7118  cd 00-set-secret
 7119  ll
 7120  cat redis.password | tr -d '\n' | base64 | tr -d '\n'
 7121  cat secret.yaml
 7122  kubectl apply -f secret.yaml -n admin
 7123  kgs
 7124  kgsec
 7125  kgsec -n admin
 7126  ll
 7127  cd ..
 7128  ll
 7129  source ~/pon
 7130  bash install.sh
 7131  helm isntall --help 
 7132  helm install --help 
 7133  bash install.sh
 7134  helm repo update
 7135  helm  list
 7136  cat install.sh
 7137  bash install.sh
 7138  source ~/pon
 7139  bash install.sh
 7140  . ./install.sh
 7141  helm  repo update
 7142  helm  repo update --help
 7143  helm  repo update -v
 7144  helm  repo update -v 10
 7145  helm init
 7146  helm pull stable/redis
 7147  helm repo add stable https://kubernetes-charts.storage.googleapis.com/
 7148  helm pull stable/redis
 7149  bash install.sh
 7150  cd ..
 7151  ll
 7152  ls ../..
 7153  cd
 7154  cd Dev
 7155  ll
 7156  cd kubeflow/demo-cu
 7157  ll
 7158  cod e. 
 7159  code . 
 7160  ll
 7161  ll ../..
 7162  code  ../..
 7163  ll
 7164  cd 0-\ base_config
 7165  ll
 7166  kubectl apply -k overlays/dom_admin
 7167  ll
 7168  cd config_maps
 7169  kubectl apply -k overlays/dom_admin
 7170  kgsec -n admin
 7171  kgsec -n admin s3-fe-secret
 7172  kgsec -n admin s3-fe-secret -o yaml
 7173  ll
 7174  pwd
 7175  cd ../
 7176  ll
 7177  cd ..
 7178  ll
 7179  cd redis
 7180  ll
 7181  cd config_maps
 7182  ll
 7183  kubectl apply -k overlays/dom_admin
 7184  kubectl get all -n admin
 7185  source ~/poff
 7186  kubectl apply -k overlays/dom_admin
 7187  curl -vvi  https://di-diod-kubeflow.itn.intraorange
 7188  kubectl get all -n admin
 7189  kubectl cluster-info
 7190  kubectl cluster-info dump
 7191  env
 7192  env | sort
 7193  kubectl cluster-info dump
 7194  kubectl cluster-info
 7195  cd 
 7196  cd .kube
 7197  ll
 7198  cat config.json
 7199  cat config
 7200  curl https://di-diod-kubeflow-cce-api.itn.intraorange:5443
 7201  curl -k https://di-diod-kubeflow-cce-api.itn.intraorange:5443
 7202  curl -k https://di-diod-kubeflow-cce-api.itn.intraorange:5443/api
 7203  ssh -T git@gitlab.tech.orange
 7204  curl -k https://di-diod-kubeflow-cce-api.itn.intraorange:5443/openapi/v2
 7205  kubectl config view -o jsonpath='{"Cluster name\tServer\n"}{range .clusters[*]}{.name}{"\t"}{.cluster.server}{"\n"}{end}'
 7206  export CLUSTER_NAME="internalCluster"
 7207  APISERVER=$(kubectl config view -o jsonpath="{.clusters[?(@.name==\"$CLUSTER_NAME\")].cluster.server}")
 7208  TOKEN=$(kubectl get secrets -o jsonpath="{.items[?(@.metadata.annotations['kubernetes\.io/service-account\.name']=='default')].data.token}"|base64 --decode)
 7209  curl -X GET $APISERVER/api --header "Authorization: Bearer $TOKEN" --insecure
 7210  kubectl cluster-info
 7211  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 7212  kubectl cluster-info
 7213  exit
 7214  l
 7215  kubectl apply -k config_map/overlays/dom_admin
 7216  cd config_maps
 7217  ll
 7218  kubectl apply -k overlays/dom_admin
 7219  kgsec -n admin
 7220  kgsec -n admin secret-redis
 7221  kdsec -n admin secret-redis
 7222  kdsec -n admin secret-redis-9fc89ghm29
 7223  kubectl apply -k overlays/dom_admin
 7224  kgs -n admin
 7225  ll
 7226  cd ..
 7227  ll
 7228  cat deploy.sh
 7229  bash deploy.sh
 7230  k9s
 7231  cat deploy.sh
 7232  kubectl delete -f wt-seldon.yaml -n admin 
 7233  bash deploy.sh
 7234  kubectl delete -f wt-seldon.yaml -n admin 
 7235  bash deploy.sh
 7236  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/admin/wassup-tr-default-push-ms/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}'
 7237  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/admin/wassup-tr-default-push-ms/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}' -v
 7238  k9s
 7239  kubectl cluster-info
 7240  k9s
 7241  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/admin/wassup-tr-default-push-ms/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}' 
 7242  kubectl cluster-info
 7243  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/admin/wassup-tr-default-push-ms/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}' 
 7244  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/admin/wassup-tr-default-push-ms/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}' -v
 7245  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/admin/wassup-tr-default-push-ms/api/v1.0/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}' -v
 7246  kubectl get vs
 7247  kubectl get vs -n admin
 7248  kubectl get vs -n admin spec-wassup-tr-wassup-tr-default-push-ms-http 
 7249  kubectl get vs -n admin spec-wassup-tr-wassup-tr-default-push-ms-http  -o yaml 
 7250  curl https://di-diod-kubeflow.itn.intraorange
 7251  curl https://di-diod-kubeflow.itn.intraorange/seldon
 7252  curl https://di-diod-kubeflow.itn.intraorange/seldon/admin
 7253  curl https://di-diod-kubeflow.itn.intraorange/seldon/admin/wassup
 7254  curl https://di-diod-kubeflow.itn.intraorange/seldon/admin/wassup-tr
 7255  curl https://di-diod-kubeflow.itn.intraorange/seldon/admin/wassup-tr-default-push-ms
 7256  curl https://di-diod-kubeflow.itn.intraorange/seldon/admin/wassup-tr-default-push-ms/
 7257  curl https://di-diod-kubeflow.itn.intraorange/seldon/admin/wassup-tr-default-push-ms/api
 7258  curl https://di-diod-kubeflow.itn.intraorange/seldon/admin/wassup-tr-default-push-ms/api/v1.0/predictions
 7259  curl -g https://di-diod-kubeflow.itn.intraorange/seldon/admin/wassup-tr-default-push-ms/api/v1.0/predictions
 7260  curl -k https://di-diod-kubeflow.itn.intraorange/seldon/admin/wassup-tr-default-push-ms/api/v1.0/predictions
 7261  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/admin/wassup-tr-default-push-ms/api/v1.0/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}' -v
 7262  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/admin/wassup-tr-default-push-ms/api/v1.0/predictions --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}' -v
 7263  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/admin/wassup-tr-default-push-ms/api/v1.0/predictions -v
 7264  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/admin/wassup-tr-default-push-ms/api/v1.0/predictions --data ''
 7265  curl https://di-diod-kubeflow.itn.intraorange/seldon/admin/wassup-tr-default-push-ms/api/v1.0/predictions --data ''
 7266  curl https://di-diod-kubeflow.itn.intraorange/seldon/admin/wassup-tr-default-push-ms/api/v1.0/predictions -d ''
 7267  curl https://di-diod-kubeflow.itn.intraorange/seldon/admin/wassup-tr-default-push-ms/api/v1.0/predictions 
 7268  curl https://di-diod-kubeflow.itn.intraorange/seldon/admin/wassup-tr-default-push-ms/api/v1.0/predictions -v 
 7269  curl https://di-diod-kubeflow.itn.intraorange/seldon/admin/wassup-tr-default-push-ms/api/v1.0/predictions -v -d ''
 7270  kubectl delete -f wt-seldon.yaml -n admin 
 7271  kubectl apply -f wt-seldon.yaml -n kubeflow
 7272  curl https://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/wassup-tr-default-push-ms/api/v1.0/predictions -v -d ''
 7273  ll
 7274  cd 0-\ base_config
 7275  ll
 7276  cat Readme.md
 7277  kubectl apply -k overlays/dom_kubeflow
 7278  ll
 7279  cd config_maps
 7280  kubectl apply -k overlays/dom_kubeflow
 7281  cd ../..
 7282  ll
 7283  cd redis
 7284  ll
 7285  cd config_maps
 7286  ll
 7287  kubectl apply -k overlays/dom_kubeflow
 7288  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/wassup-tr-default-push-ms/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}' 
 7289  helm install redis-wassuptr stable/redis --values values-production.yaml --namespace kubeflow
 7290  source ~/pon
 7291  helm install redis-wassuptr stable/redis --values values-production.yaml --namespace kubeflow
 7292  cd ..
 7293  ll
 7294  helm install redis-wassuptr stable/redis --values values-production.yaml --namespace kubeflow
 7295  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/wassup-tr-default-push-ms/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}' 
 7296  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/wassup-tr-default-push-ms/api/v1.0/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}' 
 7297  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/wassup-tr-default-push-ms/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}' 
 7298  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/wassup-tr-default-push-ms/api/v1.0/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}' 
 7299  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/wassup-tr-default-push-ms/api/v1.0/predictions -H "Content-Type: application/json" -v --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}' 
 7300  kubectl delete -f wt-seldon.yaml -n kubeflow
 7301  ll
 7302  cd ..
 7303  ll
 7304  kubectl delete -f wt-seldon.yaml -n kubeflow
 7305  kubectl apply -f wt-seldon.yaml -n kubeflow
 7306  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/wassup-tr-default-push-ms/api/v1.0/predictions -H "Content-Type: application/json" -v --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}' 
 7307  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/wassup-tr-default-push-ms/api/v0.1/predictions -H "Content-Type: application/json" -v --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}' 
 7308  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/wassup-tr-default-push-ms/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}' 
 7309  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/wassup-tr-default-push-ms/api/v1.0/predictions -H "Content-Type: application/json" -v --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}' 
 7310  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/wassup-tr-default-push-ms/api/v0.1/predictions -H "Content-Type: application/json" -v --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}' 
 7311  ll
 7312  cd ..
 7313  ll
 7314  docker login dockerfactory-unstable-iva.si.francetelecom.fr --username osbi7352
 7315  bash build_image.sh
 7316  bash ./build_image.sh
 7317  ll
 7318  bash ./build-images.sh
 7319  docker pull redis
 7320  docker status
 7321  docker --help 
 7322  docker version 
 7323  docker system
 7324  docker system info
 7325  docker system
 7326  docker status
 7327  docker --help 
 7328  docker config
 7329  docker config ls
 7330  docker config inspect
 7331  docker stack
 7332  docker stack ls
 7333  docker pull redis
 7334  docker pull redis -v
 7335  docker pull redis --help 
 7336  docker logout
 7337  docker pull redis --help 
 7338  docker pull redis
 7339  curl https://registry-1.docker.io/v2
 7340  docker run hello-world\n\n
 7341  env | sort
 7342  docker run hello-world\n\n
 7343  docker pull redis
 7344  docker run hello-world\n\n
 7345  ll
 7346  docker login dockerfactory-unstable-iva.si.francetelecom.fr --username osbi7352
 7347  bash ./build-images.sh
 7348  docker run -it alpine env
 7349  source ~/poff
 7350  docker run -it alpine env
 7351  docker run -it redis
 7352  kubectl delete -f wt-seldon.yaml -n kubeflow
 7353  ll
 7354  cd deploy
 7355  ll
 7356  kubectl delete -f wt-seldon.yaml -n kubeflow
 7357  kubectl apply -f wt-seldon.yaml -n kubeflow
 7358  cd ../..
 7359  ll
 7360  cd ..
 7361  ll
 7362  cd src
 7363  ll
 7364  cd ..
 7365  bash ./build-images.sh
 7366  kubectl delete -f wt-seldon.yaml -n kubeflow
 7367  kubectl apply -f wt-seldon.yaml -n kubeflow
 7368  kubectl delete -f wt-seldon.yaml -n kubeflow
 7369  cd ../..
 7370  cd ..
 7371  ll
 7372  cd ..
 7373  cd kubeflow
 7374  ll
 7375  cd install-de-di
 7376  ll
 7377  cd kubeflow
 7378  ll
 7379  cd ..
 7380  code .
 7381  k9s
 7382  cd ../../
 7383  ll
 7384  cd kubeflow
 7385  cd dex
 7386  ll
 7387  code .
 7388  history | grep dex
 7389  curl -d "client_id=c5640724-f029-4fe2-8658-47d6d097541e&client_secret=eZJyHCMBWYQ0eXWWwiy9f2QR&grant_type=authorization_code&code=5aaef54f111b5814640e87abb33ba0d3ee7236de6d1e0912862861b4fca95288&redirect_uri=https%3A%2F%2Fdi%2Ddiod%2Dkubeflow%2Eitn%2Eintraorange%2Fdex%2Fcallback" -H "Content-Type: application/x-www-form-urlencoded" -X POST https://auth.tech.orange/oauth2/token
 7390  curl -d "client_id=c5640724-f029-4fe2-8658-47d6d097541e&client_secret=eZJyHCMBWYQ0eXWWwiy9f2QR&grant_type=authorization_code&code=e4edaed392a12e276fac0215398d6a65139a3270b0236cf85ae2bf2654a26471&redirect_uri=https%3A%2F%2Fdi%2Ddiod%2Dkubeflow%2Eitn%2Eintraorange%2Fdex%2Fcallback" -H "Content-Type: application/x-www-form-urlencoded" -X POST https://auth.tech.orange/oauth2/token
 7391  source ~/poff
 7392  curl -d "client_id=c5640724-f029-4fe2-8658-47d6d097541e&client_secret=eZJyHCMBWYQ0eXWWwiy9f2QR&grant_type=authorization_code&code=e4edaed392a12e276fac0215398d6a65139a3270b0236cf85ae2bf2654a26471&redirect_uri=https%3A%2F%2Fdi%2Ddiod%2Dkubeflow%2Eitn%2Eintraorange%2Fdex%2Fcallback" -H "Content-Type: application/x-www-form-urlencoded" -X POST https://auth.tech.orange/oauth2/token
 7393  curl -d "client_id=c5640724-f029-4fe2-8658-47d6d097541e&client_secret=eZJyHCMBWYQ0eXWWwiy9f2QR&grant_type=authorization_code&code=a90387f7f38a15b76ee8089e7c07cef73c25318d5032d0fa70240bc468cfcfd7&redirect_uri=https%3A%2F%2Fdi%2Ddiod%2Dkubeflow%2Eitn%2Eintraorange%2Fdex%2Fcallback" -H "Content-Type: application/x-www-form-urlencoded" -X POST https://auth.tech.orange/oauth2/token
 7394  curl -d "client_id=c5640724-f029-4fe2-8658-47d6d097541e&client_secret=eZJyHCMBWYQ0eXWWwiy9f2QR&grant_type=authorization_code&code=a90387f7f38a15b76ee8089e7c07cef73c25318d5032d0fa70240bc468cfcfd7&redirect_uri=https%3A%2F%2Fdi%2Ddiod%2Dkubeflow%2Eitn%2Eintraorange%2Fdex%2Fcallback" -H "Content-Type: application/x-www-form-urlencoded" -X POST https://auth.tech.orange/oauth2/token -v
 7395  curl -d "client_id=c5640724-f029-4fe2-8658-47d6d097541e&client_secret=eZJyHCMBWYQ0eXWWwiy9f2QR&grant_type=authorization_code&code=a90387f7f38a15b76ee8089e7c07cef73c25318d5032d0fa70240bc468cfcfd7&redirect_uri=https%3A%2F%2Fdi%2Ddiod%2Dkubeflow%2Eitn%2Eintraorange%2Fdex%2Fcallback" -H "Content-Type: application/x-www-form-urlencoded"  https://auth.tech.orange/oauth2/token -v
 7396  curl https://di-diod-kubeflow.itn.intraorange/dex/auth\?client_id\=kubeflow-oidc-authservice\&redirect_uri\=%2Flogin%2Foidc\&response_type\=code\&scope\=profile+email+groups+openid\&state\=TOTO
 7397  curl -d "client_id=c5640724-f029-4fe2-8658-47d6d097541e&client_secret=eZJyHCMBWYQ0eXWWwiy9f2QR&grant_type=authorization_code&code=a90387f7f38a15b76ee8089e7c07cef73c25318d5032d0fa70240bc468cfcfd7&redirect_uri=https%3A%2F%2Fdi%2Ddiod%2Dkubeflow%2Eitn%2Eintraorange%2Fdex%2Fcallback" -H "Content-Type: application/x-www-form-urlencoded"  https://auth.tech.orange/oauth2/token 
 7398  cd /Users/seb/Dev/kubeflow/install-de-di/temp/dex/test/etc
 7399  ll
 7400  docker run -it --rm --name test-dex -p 443:5556 -v $(pwd)/dex:/etc/dex --entrypoint /bin/sh 'quay.io/dexidp/dex:v2.21.0' /usr/local/bin/dex serve /etc/dex/cfg/config.yaml
 7401  ll
 7402  cat dex
 7403  ll dex
 7404  curl https://auth.tech.orange/oauth2/token\?client_id\=c5640724-f029-4fe2-8658-47d6d097541e\&client_secret\=eZJyHCMBWYQ0eXWWwiy9f2QR\&grant_type\=authorization_code\&code\=a90387f7f38a15b76ee8089e7c07cef73c25318d5032d0fa70240bc468cfcfd7\&redirect_uri\=https%3A%2F%2Fdi%2Ddiod%2Dkubeflow%2Eitn%2Eintraorange%2Fdex%2Fcallback
 7405  curl "https://auth.tech.orange/oauth2/token?client_id=c5640724-f029-4fe2-8658-47d6d097541e&client_secret=eZJyHCMBWYQ0eXWWwiy9f2QR&grant_type=authorization_code&code=a90387f7f38a15b76ee8089e7c07cef73c25318d5032d0fa70240bc468cfcfd7&redirect_uri=https%3A%2F%2Fdi%2Ddiod%2Dkubeflow%2Eitn%2Eintraorange%2Fdex%2Fcallback"\n
 7406  curl "https://auth.tech.orange/oauth2/token?client_id=c5640724-f029-4fe2-8658-47d6d097541e&client_secret=eZJyHCMBWYQ0eXWWwiy9f2QR&grant_type=authorization_code&code=7e8b5a5c28d0bca11e1edab899f3a313f0ef5aee2244a6474c0a4f652e82a658&redirect_uri=https%3A%2F%2Fdi%2Ddiod%2Dkubeflow%2Eitn%2Eintraorange%2Fdex%2Fcallback"\n
 7407  curl -d "client_id=c5640724-f029-4fe2-8658-47d6d097541e&client_secret=eZJyHCMBWYQ0eXWWwiy9f2QR&grant_type=authorization_code&code=7e8b5a5c28d0bca11e1edab899f3a313f0ef5aee2244a6474c0a4f652e82a658&redirect_uri=https%3A%2F%2Fdi%2Ddiod%2Dkubeflow%2Eitn%2Eintraorange%2Fdex%2Fcallback" -X POST https://auth.tech.orange/oauth2/token
 7408  curl -d "client_id=c5640724-f029-4fe2-8658-47d6d097541e&client_secret=eZJyHCMBWYQ0eXWWwiy9f2QR&grant_type=authorization_code&code=7e8b5a5c28d0bca11e1edab899f3a313f0ef5aee2244a6474c0a4f652e82a658&redirect_uri=https%3A%2F%2Fdi%2Ddiod%2Dkubeflow%2Eitn%2Eintraorange%2Fdex%2Fcallback" https://auth.tech.orange/oauth2/token
 7409  curl -d "client_id=c5640724-f029-4fe2-8658-47d6d097541e&client_secret=eZJyHCMBWYQ0eXWWwiy9f2QR&grant_type=authorization_code&code=7e8b5a5c28d0bca11e1edab899f3a313f0ef5aee2244a6474c0a4f652e82a658&redirect_uri=https%3A%2F%2Fdi%2Ddiod%2Dkubeflow%2Eitn%2Eintraorange%2Fdex%2Fcallback" https://auth.tech.orange/oauth2/access_token
 7410  curl -d "client_id=c5640724-f029-4fe2-8658-47d6d097541e&client_secret=eZJyHCMBWYQ0eXWWwiy9f2QR&grant_type=authorization_code&code=7e8b5a5c28d0bca11e1edab899f3a313f0ef5aee2244a6474c0a4f652e82a658&redirect_uri=https://di-diod-kubeflow.itn.intraorange/dex/callback" -H "Content-Type: application/x-www-form-urlencoded" -X POST https://auth.tech.orange/oauth2/token
 7411  docker run -it --rm --name test-dex -p 443:5556 -v $(pwd)/dex:/etc/dex 'quay.io/dexidp/dex:v2.21.0' serve /etc/dex/cfg/config.yaml\n
 7412  vi /etc/hosts
 7413  sudo vi /etc/hosts
 7414  docker run -it --rm --name test-dex -p 443:5556 -v $(pwd)/dex:/etc/dex 'quay.io/dexidp/dex:v2.21.0' serve /etc/dex/cfg/config.yaml\n
 7415  k9s
 7416  docker run -it --rm --name test-dex -p 443:5556 -v $(pwd)/dex:/etc/dex 'quay.io/dexidp/dex:v2.21.0' serve /etc/dex/cfg/config.yaml\n
 7417  exit
 7418  ll
 7419  cd ..
 7420  ll
 7421  bash ./start-redis.sh
 7422  ll
 7423  docker run --name "wassup-tr" --rm --env-file env.list -p 5000:5000 dockerfactory-unstable-iva.si.francetelecom.fr/hvfd8529/wassup/wassup_tr:1.1
 7424  docker run --name "wassup-tr" --rm --env-file wassup/test/env.list -p 5000:5000 dockerfactory-unstable-iva.si.francetelecom.fr/hvfd8529/wassup/wassup_tr:1.1
 7425  docker run --name "wassup-tr" --rm --env-file wassup/test/env.list -p 5000:5000 dockerfactory-unstable-iva.si.francetelecom.fr/osbi7352/wassup_tr:1.1
 7426  docker run --name "wassup-tr" --rm --env-file wassup/test/env.list -p 5000:5000 dockerfactory-unstable-iva.si.francetelecom.fr/osbi7352/wassup/wassup_tr:1.1
 7427  source ~/pon
 7428  docker run --name "wassup-tr" --rm --env-file wassup/test/env.list -p 5000:5000 dockerfactory-unstable-iva.si.francetelecom.fr/osbi7352/wassup/wassup_tr:1.1
 7429  curl -Gk http://localhost:5000/api/v0.1/predictions -H "Content-Type: application/x-www-form-urlencoded" --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}'
 7430  curl -Gk http://localhost:5000/api/v1.0/predictions -H "Content-Type: application/x-www-form-urlencoded" --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}'
 7431  curl -gk http://localhost:5000/predict -H "Content-Type: application/json" --data '{"data": {"ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}'\n
 7432  ll
 7433  cd wassup
 7434  ll
 7435  cd deploy
 7436  ll
 7437  kdf 
 7438  ll
 7439  kubectl delete -f wt-seldon.yaml -n kubeflow
 7440  kubectl apply -f wt-seldon.yaml -n kubeflow
 7441  kubectl delete -f wt-seldon.yaml -n kubeflow
 7442  docker images
 7443  docker images rm 20e34aa6171f
 7444  docker rm images 20e34aa6171f
 7445  docker images
 7446  docker rm image 
 7447  docker rm 20e34aa6171f
 7448  docker rm --help 
 7449  docker images --help 
 7450  docker rmi 20e34aa6171f
 7451  docker rmi 20e34aa6171f -f
 7452  docker images
 7453  docker run --name "wassup-tr" --rm --env-file wassup/test/env.list -p 5000:5000 dockerfactory-unstable-iva.si.francetelecom.fr/osbi7352/wassup/wassup_tr:1.1
 7454  cd ../
 7455  ll
 7456  cd ..
 7457  ll
 7458  docker run --name "wassup-tr" --rm --env-file wassup/test/env.list -p 5000:5000 dockerfactory-unstable-iva.si.francetelecom.fr/osbi7352/wassup/wassup_tr:1.1
 7459  ll
 7460  cd wassup
 7461  ll
 7462  bash ./build-images.sh
 7463  cd deploy
 7464  kubectl apply -f wt-seldon.yaml -n kubeflow
 7465  cd Dev/DIA
 7466  ll
 7467  cd test\ Laure
 7468  l
 7469  docker run --name "wassup-tr" --rm --env-file wassup/test/env.list -p 5000:5000 dockerfactory-unstable-iva.si.francetelecom.fr/osbi7352/wassup/wassup_tr:1.2
 7470  cd wassup
 7471  ll
 7472  bash ./build-images.sh
 7473  docker run --name "wassup-tr" --rm --env-file test/env.list -p 5000:5000 dockerfactory-unstable-iva.si.francetelecom.fr/osbi7352/wassup/wassup_tr:1.2
 7474  ll
 7475  kubectl apply -f wt-seldon.yaml -n kubeflow
 7476  kubectl delete -f wt-seldon.yaml -n kubeflow
 7477  kubectl apply -f wt-seldon.yaml -n kubeflow
 7478  kubectl delete -f wt-seldon.yaml -n kubeflow
 7479  kubectl apply -f wt-seldon.yaml -n kubeflow
 7480  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/wassup-tr-default-push-ms/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}'
 7481  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/wassup-tr-default-push-ms/api/v1.0/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}'
 7482  kubectl delete -f wt-seldon.yaml -n kubeflow
 7483  kubectl apply -f wt-seldon.yaml -n kubeflow
 7484  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/wassup-tr-default-push-ms/api/v1.0/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}'
 7485  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/wassup-tr-default-push-ms/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}'
 7486  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/wassup-tr-default-push-ms/api/v1.0/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}'
 7487  kubectl run rediscli --generator=run-pod/v1 -i --image=redis -n kubeflow -- redis-cli -h redis-wassuptr-master.kubeflow.svc.cluster.local
 7488  kubectl run rediscli --generator=run-pod/v1 -i --image=redis -n kubeflow -- bash
 7489  kubectl run rediscli --generator=run-pod/v1 -it --image=redis -n kubeflow -- bash\n
 7490  kubectl attach rediscli -n kubeflow
 7491  k9s
 7492  kubectl attach rediscli -n kubeflow -c rediscli 
 7493  kubectl attach rediscli -n kubeflow -c rediscli bash 
 7494  kubectl get pods
 7495  kubectl get pods --all-namespaces
 7496  k9s
 7497  kubectl delete -f wt-seldon.yaml -n kubeflow
 7498  kubectl apply -f wt-seldon.yaml -n kubeflow
 7499  k9s
 7500  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/wassup-tr-default-push-ms/api/v1.0/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}'
 7501  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/wassup-tr-default-push-ms/api/v1.0/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}' -v
 7502  sudo vi /etc/hosts
 7503  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/wassup-tr-default-push-ms/api/v1.0/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}' -v
 7504  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/wassup-tr-default-push-ms/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}' -v
 7505  k9s
 7506  docker info 
 7507  docker image redislabs/rejson
 7508  docker image inspect redislabs/rejson
 7509  ll
 7510  cd redis
 7511  ll
 7512  cp install.sh uninstall.sh
 7513  bash uninstall.sh
 7514  helm delete redis-wassuptr --namespace kubeflow
 7515  helm install redis-wassuptr stable/redis --values values-production.yaml --namespace kubeflow
 7516  source ~/pon
 7517  helm install redis-wassuptr stable/redis --values values-production.yaml --namespace kubeflow
 7518  helm delete redis-wassuptr --namespace kubeflow
 7519  helm install redis-wassuptr stable/redis --values values-production.yaml --namespace kubeflow
 7520  helm delete redis-wassuptr --namespace kubeflow
 7521  helm install redis-wassuptr stable/redis --values values-production.yaml --namespace kubeflow
 7522  helm delete redis-wassuptr --namespace kubeflow
 7523  helm install redis-wassuptr stable/redis --values values-production.yaml --namespace kubeflow
 7524  helm delete redis-wassuptr --namespace kubeflow
 7525  ll
 7526  cd build_with_rejson
 7527  ll
 7528  docker build -t kubeflow/tools/redis-rejson:1.0 'https://github.com/bitnami/bitnami-docker-redis.git#master:5.0/debian-10'
 7529  docker build -e env.list -t kubeflow/tools/redis-rejson:1.0 'https://github.com/bitnami/bitnami-docker-redis.git#master:5.0/debian-10'
 7530  docker build --help 
 7531  docker run --help 
 7532  ll
 7533  bash build-image.sh
 7534  source ~/pon
 7535  bash build-image.sh
 7536  env
 7537  ll
 7538  git clone https://github.com/RedisJSON/RedisJSON\n
 7539  ll
 7540  rm -rf RedisJSON
 7541  bash build-image.sh
 7542  docker run -it -rm bitnami/redis:5.0.7-debian-10-r0 bash
 7543  docker run -it --rm bitnami/redis:5.0.7-debian-10-r0 bash
 7544  bash build-image.sh
 7545  docker images
 7546  docker run -it --rm redis-rejson  bash
 7547  docker run -it --rm redis-rejson:1.0  bash
 7548  bash build-image.sh
 7549  ll
 7550  cd redis
 7551  ll
 7552  bash install.sh
 7553  helm delete redis-wassuptr --namespace admin\n
 7554  helm install redis-wassuptr stable/redis --values values-production.yaml --namespace kubeflow\n
 7555  k9s
 7556  helm delete redis-wassuptr --namespace kubeflow\n
 7557  helm install redis-wassuptr stable/redis --values values-production.yaml --namespace kubeflow\n
 7558  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/wassup-tr-default-push-ms/api/v1.0/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}'
 7559  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/kubeflow/wassup-tr-default-push-ms/api/v0.1/predictions -H "Content-Type: application/json" --data '{"data": {"names": ["ts", "nb"], "ndarray": [["2020-01-10 10:11:13", 50],["2020-01-10 10:11:14", 51]]}}'
 7560  ll
 7561  cd build_with_rejson
 7562  ll
 7563  ll RedisJSON
 7564  ll
 7565  cd Dev/immo
 7566  ll
 7567  cd data
 7568  ll
 7569  head data/valeursfoncieres-2018.txt
 7570  head valeursfoncieres-2018.txt
 7571  k9s
 7572  cd ../..
 7573  cd ..
 7574  cd kubeflow/demo-cu
 7575  code .
 7576  k9s
 7577  cd Dev
 7578  cd kubeflow
 7579  cd install-de-di
 7580  cd temp
 7581  ll
 7582  ls -ltr
 7583  kaf pod-presets.yaml
 7584  kubectl get kind
 7585  kubectl api-resources
 7586  kubectl api-resources | sort
 7587  k9s
 7588  docker config
 7589  docker config ls
 7590  docker 
 7591  docker services
 7592  docker service
 7593  docker service ls
 7594  homebrew
 7595  brew update
 7596  brew update all
 7597  brew upgrade  all
 7598  brew upgrade
 7599  brew install htop
 7600  htop
 7601  brew install ncdu
 7602  ncdu
 7603  ncdu /
 7604  tty-clock
 7605  wget https://storage.googleapis.com/orange_contents/Accenture/Accenture%20CCAI%20-%20Sales%20Pitch%20Deck%20July%202019%20-%20Abridged.pdf
 7606  source ~/pon
 7607  wget https://storage.googleapis.com/orange_contents/Accenture/Accenture%20CCAI%20-%20Sales%20Pitch%20Deck%20July%202019%20-%20Abridged.pdf
 7608  ll
 7609  cd 
 7610  cd Documents
 7611  mkdir gcp
 7612  ll
 7613  wget https://storage.googleapis.com/orange_contents/Accenture/Accenture%20-%20Fraud%20Detection%20with%20GCP.pdf\nwget https://storage.googleapis.com/orange_contents/Accenture/Accenture%20CCAI%20-%20Sales%20Pitch%20Deck%20July%202019%20-%20Abridged.pdf\nwget https://storage.googleapis.com/orange_contents/Chatbot%20Employes/Dialogflow%20Enterprise%20pitch%20deck%20-%20Orange.pdf\nwget https://storage.googleapis.com/orange_contents/Exec%20Mtg%20MTV%2020190917/Backstory%20Overview%20-%20OCD%20-%20Orange.pdf\nwget https://storage.googleapis.com/orange_contents/Exec%20Mtg%20MTV%2020190917/Stadia%20Network%20Requirements.pdf\nwget https://storage.googleapis.com/orange_contents/Exec%20Mtg%20MTV%2020190917/Why%20Google%20Cloud%20\&%20Security%20-%20Orange.pdf\nwget https://storage.googleapis.com/orange_contents/Globecast/GCP%20\&%20Why%20Google%20Cloud%20_%20Media%20-%20Globecast%20-%2020200123.pdf\nwget https://storage.googleapis.com/orange_contents/Globecast/GCP%20Media%20Partner%20as%20of%20Jan%202020.pdf\nwget https://storage.googleapis.com/orange_contents/Globecast/Why%20Google%20Cloud%20for%20CIOs%20-%20Globecast.pdf\nwget https://storage.googleapis.com/orange_contents/OBS/Anthos%20Briefing%20Abridged%20–%20OBS%20Nov%2022.pdf\nwget https://storage.googleapis.com/orange_contents/OBS/Anthos%20Overview%20-%20Orange%20-%20OBS_OCB%20-%2020191210.pdf\nwget https://storage.googleapis.com/orange_contents/OBS/GCP%20-%20Anthos%20Overview%20Abridged%20-%20OBS_OCB%2020191105.pdf\nwget https://storage.googleapis.com/orange_contents/Orange%20Belgium/EXTERNAL_Orange%20Belgium%20Published%20-%2029%20Jan%202020%20.pdf\nwget https://storage.googleapis.com/orange_contents/Orange%20Romania/Anthos%20Customer%20Presentation%20-%20Updated%20Q3'19%20.pdf\nwget https://storage.googleapis.com/orange_contents/Orange%20Romania/GCP%20Workshop%202020-02-04/00%20-%20EXTERNAL_Orange%20Romania%20-%204%20Feb%202020%20pdf.pdf\nwget https://storage.googleapis.com/orange_contents/Orange%20Romania/GCP%20Workshop%202020-02-04/01%20-%20How%20GCP%20is%20Different.pdf\nwget https://storage.googleapis.com/orange_contents/Orange%20Romania/GCP%20Workshop%202020-02-04/02%20-%20ORO%20DWH%20&%20Big%20Data%20session.pdf\nwget https://storage.googleapis.com/orange_contents/Orange%20Romania/GCP%20Workshop%202020-02-04/03%20-%20Data%20Privacy%20Cloud%20DLP_%20Intro%20Deck%20-%20ORO%20-%2020200204.pdf\nwget https://storage.googleapis.com/orange_contents/Orange%20Romania/GCP%20Workshop%202020-02-04/04%20-%20Cloud%20AI%20Pitch%20Deck%20-%20H2%202019%20-%20ORO%2020200204.pdf\nwget https://storage.googleapis.com/orange_contents/Orange%20Romania/GCP%20Workshop%202020-02-04/05%20-%2020200204%20-%20Orange%20Romania%20-%20Anthos%20Deep-dive.pdf\nwget https://storage.googleapis.com/orange_contents/Orange%20Romania/GCP%20Workshop%202020-02-04/06%20-%20Admin%20-%20Billing%20-%20Pricing%20Pitch%20Deck%20-%20H2%202019%20-%20ORO%2020200204.pdf\nwget https://storage.googleapis.com/orange_contents/Orange%20Romania/SMAI202-How%20Vodafone%20built%20a%20data%20platform%20on%20Google%20Cloud.pdf\nwget https://storage.googleapis.com/orange_contents/TGI/Cloud%20AI%20Pitch%20Deck%20-%20H2%202019%20-%20Orange%2020200108%20-%20Published.pdf\nwget https://storage.googleapis.com/orange_contents/TGI/Cloud%20DLP_%20Intro%20Deck%20-%20Orange%20TGI%20-%2020200106%20Published.pdf\nwget https://storage.googleapis.com/orange_contents/TGI/GCP%20Isolated%20Region/Isolated%20GCP%20Regions%20-%2020200109%20Abridged%20(NDA).pdf\nwget https://storage.googleapis.com/orange_contents/TGI/GCP%20Isolated%20Region/Isolated%20Region%20Project%20Roadmap.pdf\nwget https://storage.googleapis.com/orange_contents/TGI/Isolated%20GCP%20Regions%20-%2020200109%20Abridged%20(NDA).pdf\nwget https://storage.googleapis.com/orange_contents/TGI/Orange%20TGI%20G%20Suite%20Pitch%20Deck%20Published%20-%2020200121.pdf\nwget https://storage.googleapis.com/orange_contents/TGI/SMAI202-How%20Vodafone%20built%20a%20data%20platform%20on%20Google%20Cloud.pdf\nwget https://storage.googleapis.com/orange_contents/Workshops%202019/Google%20Cloud%20-%20Orange%20Introductory%20Workshop%2020191008.pdf\n\n
 7614  wget https://storage.googleapis.com/orange_contents/Accenture/Accenture%20-%20Fraud%20Detection%20with%20GCP.pdf\nwget https://storage.googleapis.com/orange_contents/Accenture/Accenture%20CCAI%20-%20Sales%20Pitch%20Deck%20July%202019%20-%20Abridged.pdf\nwget https://storage.googleapis.com/orange_contents/Chatbot%20Employes/Dialogflow%20Enterprise%20pitch%20deck%20-%20Orange.pdf\nwget https://storage.googleapis.com/orange_contents/Exec%20Mtg%20MTV%2020190917/Backstory%20Overview%20-%20OCD%20-%20Orange.pdf\nwget https://storage.googleapis.com/orange_contents/Exec%20Mtg%20MTV%2020190917/Stadia%20Network%20Requirements.pdf\nwget https://storage.googleapis.com/orange_contents/Exec%20Mtg%20MTV%2020190917/Why%20Google%20Cloud%20\&%20Security%20-%20Orange.pdf\nwget https://storage.googleapis.com/orange_contents/Globecast/GCP%20\&%20Why%20Google%20Cloud%20_%20Media%20-%20Globecast%20-%2020200123.pdf\nwget https://storage.googleapis.com/orange_contents/Globecast/GCP%20Media%20Partner%20as%20of%20Jan%202020.pdf\nwget https://storage.googleapis.com/orange_contents/Globecast/Why%20Google%20Cloud%20for%20CIOs%20-%20Globecast.pdf\nwget https://storage.googleapis.com/orange_contents/OBS/Anthos%20Briefing%20Abridged%20–%20OBS%20Nov%2022.pdf\nwget https://storage.googleapis.com/orange_contents/OBS/Anthos%20Overview%20-%20Orange%20-%20OBS_OCB%20-%2020191210.pdf\nwget https://storage.googleapis.com/orange_contents/OBS/GCP%20-%20Anthos%20Overview%20Abridged%20-%20OBS_OCB%2020191105.pdf\nwget https://storage.googleapis.com/orange_contents/Orange%20Belgium/EXTERNAL_Orange%20Belgium%20Published%20-%2029%20Jan%202020%20.pdf\nwget https://storage.googleapis.com/orange_contents/Orange%20Romania/GCP%20Workshop%202020-02-04/00%20-%20EXTERNAL_Orange%20Romania%20-%204%20Feb%202020%20pdf.pdf\nwget https://storage.googleapis.com/orange_contents/Orange%20Romania/GCP%20Workshop%202020-02-04/01%20-%20How%20GCP%20is%20Different.pdf\nwget https://storage.googleapis.com/orange_contents/Orange%20Romania/GCP%20Workshop%202020-02-04/02%20-%20ORO%20DWH%20\&%20Big%20Data%20session.pdf\nwget https://storage.googleapis.com/orange_contents/Orange%20Romania/GCP%20Workshop%202020-02-04/03%20-%20Data%20Privacy%20Cloud%20DLP_%20Intro%20Deck%20-%20ORO%20-%2020200204.pdf\nwget https://storage.googleapis.com/orange_contents/Orange%20Romania/GCP%20Workshop%202020-02-04/04%20-%20Cloud%20AI%20Pitch%20Deck%20-%20H2%202019%20-%20ORO%2020200204.pdf\nwget https://storage.googleapis.com/orange_contents/Orange%20Romania/GCP%20Workshop%202020-02-04/05%20-%2020200204%20-%20Orange%20Romania%20-%20Anthos%20Deep-dive.pdf\nwget https://storage.googleapis.com/orange_contents/Orange%20Romania/GCP%20Workshop%202020-02-04/06%20-%20Admin%20-%20Billing%20-%20Pricing%20Pitch%20Deck%20-%20H2%202019%20-%20ORO%2020200204.pdf\nwget https://storage.googleapis.com/orange_contents/Orange%20Romania/SMAI202-How%20Vodafone%20built%20a%20data%20platform%20on%20Google%20Cloud.pdf\nwget https://storage.googleapis.com/orange_contents/TGI/Cloud%20AI%20Pitch%20Deck%20-%20H2%202019%20-%20Orange%2020200108%20-%20Published.pdf\nwget https://storage.googleapis.com/orange_contents/TGI/Cloud%20DLP_%20Intro%20Deck%20-%20Orange%20TGI%20-%2020200106%20Published.pdf\nwget https://storage.googleapis.com/orange_contents/TGI/GCP%20Isolated%20Region/Isolated%20GCP%20Regions%20-%2020200109%20Abridged%20\(NDA\).pdf\nwget https://storage.googleapis.com/orange_contents/TGI/GCP%20Isolated%20Region/Isolated%20Region%20Project%20Roadmap.pdf\nwget https://storage.googleapis.com/orange_contents/TGI/Isolated%20GCP%20Regions%20-%2020200109%20Abridged%20\(NDA\).pdf\nwget https://storage.googleapis.com/orange_contents/TGI/Orange%20TGI%20G%20Suite%20Pitch%20Deck%20Published%20-%2020200121.pdf\nwget https://storage.googleapis.com/orange_contents/TGI/SMAI202-How%20Vodafone%20built%20a%20data%20platform%20on%20Google%20Cloud.pdf\nwget https://storage.googleapis.com/orange_contents/Workshops%202019/Google%20Cloud%20-%20Orange%20Introductory%20Workshop%2020191008.pdf\n
 7615  wget https://storage.googleapis.com/orange_contents/Orange%20Romania/Anthos%20Customer%20Presentation%20-%20Updated%20Q3%2719%20.pdf
 7616  wget "https://storage.googleapis.com/orange_contents/Orange%20Romania/Anthos%20Customer%20Presentation%20-%20Updated%20Q3'19%20.pdf"
 7617  wget "https://storage.googleapis.com/orange_contents/Orange%20Romania/Anthos%20Customer%20Presentation%20-%20Updated%20Q3'19%20.pdf"ll
 7618  ll
 7619  ls -ltr
 7620  cd gcp
 7621  ll
 7622  gcloud 
 7623  gcloud filestore 
 7624  gcloud filestore operation 
 7625  gcloud filestore operation list 
 7626  gcloud filestore operation list https://storage.googleapis.com/orange_contents
 7627  gcloud filestore operations list https://storage.googleapis.com/orange_contents
 7628  gcloud filestore operations list --help 
 7629  gcloud filestore instances describe orange_content
 7630  gcloud filestore instances describe orange_contents
 7631  gsutil ls gs://orante_contents
 7632  source ~/pon
 7633  gsutil ls gs://orante_contents
 7634  gsutil ls gs://orange_contents
 7635  ll
 7636  gsutil cp -r  gs://orange_contents
 7637  gsutil cp -r gs://orange_contents .
 7638  ll
 7639  gsutil cp -r gs://orange_contents .
 7640  ls -ltR
 7641  gcloud 
 7642  gcloud iap
 7643  gcloud iap web
 7644  gcloud iam roles list
 7645  source ~/pon
 7646  gcloud iam roles list
 7647  gcloud iap web
 7648  gcloud iam roles list
 7649  gcloud auth login
 7650  gcloud iam roles list
 7651  gcloud iam list-testable-permissions 909373837610
 7652  gcloud iam list-testable-permissions empyrean-surge-267512
 7653  gcloud components update --version 188.0.0
 7654  gcloud components
 7655  gcloud components lsit
 7656  gcloud components list
 7657  exit
 7658  cat ~/pon
 7659  gcloud config set proxy/type http
 7660  gcloud config set proxy/address p-goodway.rd.francetelecom.fr
 7661  gcloud config set proxy/port 3128
 7662  gcloud components list
 7663  gcloud iam list-testable-permissions empyrean-surge-267512
 7664  gcloud iam list-testable-permissions 909373837610
 7665  gcloud auth login
 7666  gcloud iam list-testable-permissions empyrean-surge-267512
 7667  gcloud project list
 7668  gcloud projects list
 7669  gcloud projects
 7670  gcloud services lsit
 7671  gcloud services list
 7672  gcloud init
 7673  gcloud services list
 7674  gcloud config set project empyrean-surge-267512
 7675  gcloud services list
 7676  gcloud auth
 7677  gcloud auth login
 7678  gcloud config set project empyrean-surge-267512
 7679  gcloud services list
 7680  gcloud iam list-testable-permissions 
 7681  gcloud iam list-testable-permissions empyrean-surge-267512
 7682  gcloud iam list-testable-permissions --help 
 7683  gcloud organizations 
 7684  gcloud organizations lists 
 7685  gcloud organizations list
 7686  gcloud organizations list --uri
 7687  gcloud iam list-testable-permissions https://cloudresourcemanager.googleapis.com/v1/organizations/139404252524
 7688  gcloud iam list-testable-permissions https://cloudresourcemanager.googleapis.com/v1/organizations/139404252524 > listperm.txt
 7689  code . 
 7690  grep name listperm.txt
 7691  grep name: listperm.txt
 7692  grep name: listperm.txt 
 7693  gcloud services list  https://cloudresourcemanager.googleapis.com/v1/organizations/139404252524
 7694  gcloud services list 
 7695  gcloud services list --help
 7696  gcloud services list --available
 7697  gcloud 
 7698  gcloud iam 
 7699  gcloud iam list-testable-permissions https://cloudresourcemanager.googleapis.com/v1/organizations/139404252524 > listperm.txt
 7700  grep name: listperm.txt 
 7701  grep name: listperm.txt  > listeperm2.txt
 7702  cd ..
 7703  cd Dev
 7704  ll
 7705  cd
 7706  cd Dev
 7707  ll
 7708  cd gcp
 7709  ll
 7710  mkdir roles 
 7711  cp ~/Documents/gcp/*.txt . 
 7712  ll
 7713  mv l* roles
 7714  ll
 7715  cd roles
 7716  ll
 7717  python filter.py
 7718  python filter.py | uniq
 7719  cd ..
 7720  gsutil cp -r gs://orange_contents .
 7721  cd ..
 7722  ll
 7723  gcloud iam roles list
 7724  cd gcp
 7725  ll
 7726  mkdir scripts
 7727  cd scripts
 7728  code .
 7729  ll
 7730  bash ls-proj.sh
 7731  gcloud access-context-manager levels list
 7732  ll
 7733  mv ~/Downloads/credentials.json .
 7734  ll
 7735  cat credentials.json
 7736  code .
 7737  pip install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlib
 7738  source ~/pon
 7739  pip install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlib
 7740  python quickstart.py
 7741  ll
 7742  python quickstart.py
 7743  source ~/pon
 7744  python quickstart.py
 7745  source ~/poff
 7746  python quickstart.py
 7747  env
 7748  env | sort
 7749  source ~/pon
 7750  env | sort
 7751  python quickstart.py
 7752  source ~/poff
 7753  python quickstart.py
 7754  env | sort
 7755  source ~/pon
 7756  env | sort
 7757  npm i @google/clasp -g
 7758  sudo chown -R $USER /usr/local/lib/node_modules
 7759  npm i @google/clasp -g
 7760  clasp
 7761  clasp login
 7762  curl https://oauth2.googleapis.com/token
 7763  curl https://oauth2.googleapis.com/token -v
 7764  clasp open
 7765  gcloud config get project
 7766  gcloud config 
 7767  gcloud config lsit
 7768  gcloud config list
 7769  gcloud project list
 7770  gcloud projects list
 7771  gcloud config set project quickstart-1582030317058
 7772  gcloud config 
 7773  gcloud config lsit
 7774  gcloud config list
 7775  gcloud regions
 7776  gcloud compute regions list
 7777  python list-groups.py
 7778  gcloud config list
 7779  gcloud config set proxy/type http_no_tunnel
 7780  gcloud config list
 7781  python list-groups.py
 7782  gcloud config set proxy/type https
 7783  gcloud config set proxy/type http
 7784  python list-groups.py
 7785  gcloud config list
 7786  gcloud groups list
 7787  gcloud 
 7788  gcloud components list
 7789  gcloud components updaet
 7790  gcloud components update
 7791  gcloud components list
 7792  gcloud iam
 7793  gcloud 
 7794  gcloud access-context-manager
 7795  gcloud access-context-manager levels
 7796  gcloud access-context-manager levels list
 7797  python list-groups.py
 7798  gcloud access-context-manager levels list
 7799  gcloud config list
 7800  source ~/poff
 7801  python list-groups.py
 7802  ll
 7803  rm -f token.pickle
 7804  python list-groups.py
 7805  python list-groups.py 
 7806  python list-groups.py | jq
 7807  python list-groups.py | jq .
 7808  python list-groups.py 
 7809  gcloud config list
 7810  gcloud config set proxy/type http
 7811  gcloud config set proxy/address p-proxy.rd.francetelecom.fr
 7812  gcloud config set proxy/port 8080
 7813  gcloud config list
 7814  gcloud config set proxy/username osbi7352
 7815  gcloud config set proxy/password 'Tiphaine:17'
 7816  gcloud config list
 7817  python list-groups.py 
 7818  source ~/poff
 7819  python list-groups.py 
 7820  source ~/pon
 7821  python list-groups.py 
 7822  exit
 7823  exit
 7824  k9s
 7825  exit
 7826  cd Dev/gcp
 7827  cd scripts
 7828  ll
 7829  python testldap.py
 7830  pip install ldap
 7831  python -m pip install python-ldap
 7832  python testldap.py
 7833  conda search ldap
 7834  conda isntall ldap3
 7835  conda install ldap3
 7836  python testldap.py
 7837  pip install python-ldap
 7838  python testldap.py
 7839  source /Users/seb/anaconda3/bin/activate
 7840  python testldap.py
 7841  conda activate base
 7842  /Users/seb/anaconda3/bin/python
 7843  conda install -c conda-forge python-ldap 
 7844  pip remove  python-ldap
 7845  pip uninstall python-ldap
 7846  conda install -c conda-forge python-ldap 
 7847  conda install -c conda-forge python-ldap  --force
 7848  python python-ldap.py
 7849  jupyter lab
 7850  ll
 7851  scutil
 7852  scutil --proxy
 7853  scutil --help
 7854  scutil --nwi
 7855  scutil --nc
 7856  scutil --nc help
 7857  scutil --nc list
 7858  scutil --get hslp
 7859  scutil --get help
 7860  scutil --get
 7861  scutil --get test
 7862  curl https://operatorhub.io/install/kfctl.yaml
 7863  source ~/pon
 7864  curl https://operatorhub.io/install/kfctl.yaml
 7865  rev
 7866  rev --help
 7867  export KFDEF_URL=https://raw.githubusercontent.com/kubeflow/manifests/master/kfdef/kfctl_ibm.yaml
 7868  echo "${KFDEF_URL}" | rev | cut -d/ -f1 | rev
 7869  echo "${KFDEF_URL}" | rev | cut -d/ -f1 
 7870  exit
 7871  /Users/Shared/openvpn/MENU/UDPVPN ; exit;
 7872  exit
 7873  cd .ssh
 7874  ll
 7875  cat id_rsa.pub
 7876  exit
 7877  pwd
 7878  cd Dev
 7879  cd g
 7880  cd gcp
 7881  ll
 7882  jupyter lab
 7883  /Users/Shared/openvpn/MENU/UDPVPN ; exit;
 7884  ll
 7885  cd Dev/gcp/scripts
 7886  ll
 7887  cd testgroup
 7888  ll
 7889  python list-groups.py
 7890  python test-unit.py
 7891  python test-unit.py | jq
 7892  python test-unit.py | jq .
 7893  python test-unit.py 
 7894  ll
 7895  rm -f token.pickle
 7896  python test-unit.py 
 7897  python create_groups.py
 7898  ssh chaudiere
 7899  ssh pichud
 7900  ssh pichaud
 7901  ssh 192.168.1.103
 7902  ssh pi@192.168.1.103
 7903  ssh pi@192.168.1.102
 7904  ssh pi@192.168.1.103
 7905  ping 192.168.1.103
 7906  ssh pi@192.168.1.103
 7907  ping 192.168.1.103
 7908  route  192.168.1.103
 7909  traceroute 192.168.1.103
 7910  ping 192.168.1.103
 7911  ssh pi@192.168.1.103
 7912  cd ../..
 7913  cd Documents/
 7914  cd
 7915  ll
 7916  cd Downloads
 7917  ls -ltr
 7918  cat temp-output2020-03-08T19-35-00.000Z-2020-03-08T19-40-00.000Z-pane-0-last-00-of-01
 7919  ssh pi@192.168.1.103
 7920  ll
 7921  python create_groups.py
 7922  source ~/pon
 7923  python create_groups.py
 7924  ll
 7925  rm -f token.pickle
 7926  python create_groups.py
 7927  python test-unit.py 
 7928  source ~/poff
 7929  python test-unit.py 
 7930  source ~/pon
 7931  python test-unit.py 
 7932  cat ~/pon
 7933  source ~/pon
 7934  exit
 7935  ~exit
 7936  exit
 7937  vi ~/pon
 7938  source ~/pon
 7939  python test-unit.py 
 7940  source ~/pon
 7941  env
 7942  python test-unit.py 
 7943  source ~/pon
 7944  env
 7945  python test-unit.py 
 7946  source ~/pon
 7947  env
 7948  python test-unit.py 
 7949  exit
 7950  ll
 7951  python test-unitfolders.py
 7952  source ~/pon
 7953  python test-unitfolders.py
 7954  ll
 7955  rm -f token.pickle
 7956  python test-unitfolders.py
 7957  source /Users/seb/anaconda3/bin/activate
 7958  conda activate base
 7959  /Users/seb/anaconda3/bin/python
 7960  python test-unitfolders.py
 7961  python list_all_users
 7962  python test-unitfolders.py
 7963  ll
 7964  python list_all_users.py
 7965  k9s
 7966  exit
 7967  cd ..
 7968  ll
 7969  cd ..
 7970  ll
 7971  cd kubeflow
 7972  ll
 7973  mkdir notebooks
 7974  cd notebooks
 7975  git clone git@gitlab.forge.orange-labs.fr:nadia/jupyter/jupyter-notebooks.git
 7976  ll
 7977  cd jupyter-notebooks
 7978  ll
 7979  code .
 7980  pwd
 7981  ll
 7982  ls -la
 7983  cd ../..
 7984  cd ..
 7985  cd gcp
 7986  ll
 7987  cd orange_contents
 7988  ll
 7989  history | grep gcloud
 7990  history | grep orange-content
 7991  history | grep orange_content
 7992  cd ..
 7993  gsutil cp -r gs://orange_contents .\n
 7994  exit
 7995  source ~/pon
 7996  gsutil cp -r gs://orange_contents .\n
 7997  ll
 7998  ls -la
 7999  cd ..
 8000  ls -la
 8001  cd
 8002  ll
 8003  ls -la
 8004  cd .s3
 8005  cat .s3cfg
 8006  cat .boto
 8007  code .boto
 8008  env | sort
 8009  gcloud config list
 8010  cd .config
 8011  ll
 8012  cd gcloud
 8013  ll
 8014  cd configurations
 8015  ll
 8016  code .
 8017  gsutil cp -r gs://orange_contents .\n
 8018  cd kubeflow
 8019  ll
 8020  mkdir src
 8021  cd source
 8022  cd src
 8023  ll
 8024  git clone https://github.com/kubeflow/kubeflow.git
 8025  ll
 8026  cd kubeflow
 8027  ll
 8028  cd components
 8029  ll
 8030  code .
 8031  cd ../..
 8032  ll
 8033  git clone https://github.com/kubeflow/manifests.git
 8034  ll
 8035  code .
 8036  pwd
 8037  cd ../.
 8038  cd ..
 8039  k9s
 8040  docker image 
 8041  docker images --help 
 8042  docker inspect dockerfactory-unstable-iva.si.francetelecom.fr/jupyter-notebooks/minimal-notebook:develop-seb
 8043  docker l dockerfactory-unstable-iva.si.francetelecom.fr/jupyter-notebooks/minimal-notebook:develop-seb
 8044  docker ls dockerfactory-unstable-iva.si.francetelecom.fr/jupyter-notebooks/minimal-notebook:develop-seb
 8045  docker images inspect  dockerfactory-unstable-iva.si.francetelecom.fr/jupyter-notebooks/minimal-notebook:develop-seb
 8046  docker image inspect  dockerfactory-unstable-iva.si.francetelecom.fr/jupyter-notebooks/minimal-notebook:develop-seb
 8047  docker images ls
 8048  docker images ls dockerfactory-unstable-iva.si.francetelecom.fr/jupyter-notebooks/
 8049  docker images ls dockerfactory-unstable-iva.si.francetelecom.fr/jupyter-notebooks
 8050  docker images --help 
 8051  docker --help 
 8052  docker image --help 
 8053  docker image ls
 8054  docker image ls dockerfactory-unstable-iva.si.francetelecom.fr/jupyter-notebooks/
 8055  docker image ls dockerfactory-unstable-iva.si.francetelecom.fr
 8056  docker image inspect  dockerfactory-unstable-iva.si.francetelecom.fr/jupyter-notebooks/minimal-notebook:develop-seb
 8057  docker search  dockerfactory-unstable-iva.si.francetelecom.fr/jupyter-notebooks/minimal-notebook:develop-seb
 8058  docker search  dockerfactory-unstable-iva.si.francetelecom.fr 
 8059  docker search  dockerfactory-unstable-iva.si.francetelecom.fr notebook 
 8060  cd Dev 
 8061  cd kubeflow
 8062  ll
 8063  cd mkdir test_poddefault
 8064  mkdir test_poddefault
 8065  cd test_poddefault
 8066  code . 
 8067  k9s
 8068  kubectl get profiles
 8069  kubectl get profiles --name 'sebastien-blin'
 8070  kubectl get profiles 'sebastien-blin'
 8071  kubectl get profiles 'sebastien-blin' -y yaml 
 8072  kubectl get profiles 'sebastien-blin' -o yaml 
 8073  ll
 8074  cat .pon
 8075  cat pon
 8076  wget "https://storage.googleapis.com/orange_contents/Orange%20Romania/Anthos%20Customer%20Presentation%20-%20Updated%20Q3'19%20.pdf"
 8077  wget --h
 8078  wget -h
 8079  wget -V
 8080  exit
 8081  k9s
 8082  docker pull gcr.io/kubeflow-images-public/admission-webhook:v20190520-v0-139-gcee39dbc-dirty-0d8f4c
 8083  curl -i -X POST -H 'Content-Type: application/json' -d '{"text": "Hello, this is some text\nThis is more text. :tada:"}' https://mattermost.tech.orange/hooks/tg6fenckztdyx8u8w1y4rcxzfo
 8084  kubectl run tmp-shell --rm -i --tty --image nicolaka/netshoot -- /bin/bash\n
 8085  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 8086  k9s
 8087  kubectl get nodes
 8088  kubectl get nodes 172.24.137.149
 8089  kubectl get nodes 172.24.137.149 -o yaml
 8090  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 8091  k9s
 8092  exit
 8093  exit
 8094  k9s
 8095  exit
 8096  cd Dev 
 8097  ll
 8098  cd immo
 8099  ll
 8100  jupyter lab
 8101  cd Dev
 8102  ll
 8103  cd temp
 8104  ll
 8105  git clone https://github.com/jgraph/drawio-libs.git
 8106  source ~/pon
 8107  git clone https://github.com/jgraph/drawio-libs.git
 8108  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 8109  exit
 8110  cd Dev
 8111  cd kubeflow
 8112  ll
 8113  cd install-de-di
 8114  ll
 8115  cd kubeflow-core
 8116  ll
 8117  cd ../k8s
 8118  ll
 8119  git status
 8120  git branches
 8121  git branche
 8122  git branch
 8123  git remote
 8124  git remote get-url origin
 8125  git fetch
 8126  terraform --help 
 8127  vault kv get --format json  secret/products/diod-fe/diod-kubeflow/qual
 8128  ll
 8129  cd ..
 8130  ll
 8131  cd temp
 8132  ll
 8133  ll  -ltr
 8134  history | grep vault
 8135  vault kv put secret/products/diod-fe/diod-kubeflow/dev @env-diod-kubeflow-qual.json
 8136  export VAULT_ADDR=https://vault.bigdata.intraorange
 8137  vault kv put secret/products/diod-fe/diod-kubeflow/dev @env-diod-kubeflow-qual.json
 8138  source env.txt
 8139  vault kv put secret/products/diod-fe/diod-kubeflow/dev @env-diod-kubeflow-qual.json
 8140  k9s
 8141  kubectl cluster-info
 8142  kubectl cluster-info dump
 8143  cd ..
 8144  ll
 8145  cd ../..
 8146  ll
 8147  cd ..
 8148  cd Documents
 8149  ll
 8150  cd gcp
 8151  ll
 8152  gsutil cp -r gs://orange_contents .\n
 8153  cd
 8154  souce ~/poff
 8155  source ~/poff
 8156  $ curl https://sh.rustup.rs -sSf | sh\n
 8157  curl https://sh.rustup.rs -sSf | sh\n
 8158  source $HOME/.cargo/env\n
 8159  cd Dev
 8160  ll
 8161  mkdir rust
 8162  cd rust
 8163  mkdir hello 
 8164  cd hello
 8165  ll
 8166  touch main.rs
 8167  cd ..
 8168  code ? 
 8169  code .
 8170  cd ha
 8171  cd hello
 8172  ll
 8173  rustc maon.rs
 8174  rustc main.rs
 8175  ll
 8176  ./main
 8177  cd ..
 8178  cargo new guessing_game
 8179  ll
 8180  cd guessing_game
 8181  ll
 8182  gargo run
 8183  cargo run
 8184  ls -R
 8185  cargo run
 8186  ifconfig
 8187  exit
 8188  cd Dev/kubeflow
 8189  ll
 8190  cd install-
 8191  cd install-de-di
 8192  ll
 8193  code .
 8194  cd k8s
 8195  ll
 8196  git status
 8197  ll
 8198  ls -la
 8199  git fetch
 8200  cd
 8201  ll
 8202  cd .kube
 8203  ll
 8204  code .
 8205  env | sort
 8206  kubectl cluster-info dump
 8207  kubectl cluster-info
 8208  history | grep ssh
 8209  cd
 8210  cat pon
 8211  cat ~/.docker/config.json.pon
 8212  exit
 8213  cd Documents
 8214  cd gcp
 8215  ll
 8216  gsutil cp -r gs://orange_contents .\n
 8217  ls -R
 8218  ls -lR 
 8219  ls -lR | grep Data
 8220  curl https://www.thecocktaildb.com/api/json/v1/1/search.php\?i\=vodka
 8221  curl https://www.thecocktaildb.com/api/json/v1/1/search.php\?i\=vodka | jq
 8222  curl https://www.thecocktaildb.com/api/json/v1/1/lookup.php\?iid\=552
 8223  curl https://www.thecocktaildb.com/api/json/v1/1/lookup.php?iid=552
 8224  curl https://www.thecocktaildb.com/api/json/v1/1/lookup.php\?iid=552
 8225  curl https://www.thecocktaildb.com/api/json/v1/1/filter.php\?i\=Rhum
 8226  curl https://www.thecocktaildb.com/api/json/v1/1/filter.php\?i\=Gin
 8227  curl https://www.thecocktaildb.com/api/json/v1/1/search.php\?i\=vodka | jq
 8228  curl https://www.thecocktaildb.com/api/json/v1/1/search.php\?i\=rhum | jq
 8229  curl https://www.thecocktaildb.com/api/json/v1/1/search.php\?i\=Rhum | jq
 8230  curl https://www.thecocktaildb.com/api/json/v1/1/search.php\?i\= | jq
 8231  curl https://www.thecocktaildb.com/api/json/v1/1/search.php | jq
 8232  curl https://www.thecocktaildb.com/api/json/v1/1/search.php\i\=r | jq
 8233  curl https://www.thecocktaildb.com/api/json/v1/1/search.php\?i\=r | jq
 8234  curl https://www.thecocktaildb.com/api/json/v1/1/filter.php\?i\=Rum
 8235  curl https://www.thecocktaildb.com/api/json/v1/1/filter.php\?i\=Rum | jq
 8236  ll
 8237  cd 
 8238  cd Dev/gcp/
 8239  ll
 8240  cd scripts
 8241  ll
 8242  code .
 8243  ll
 8244  cd testgroup
 8245  ll
 8246  python create_suser.py
 8247  ll
 8248  python list_all_users.py
 8249  python quickstart.py
 8250  python create_suser.py
 8251  cd
 8252  cd Downloads
 8253  ll
 8254  cd ConfVPNViscosity
 8255  ll
 8256  cat 1-Connexion\ UDP\ Externe.visz
 8257  ll
 8258  unzip 1-Connexion\ UDP\ Externe.visz
 8259  ll
 8260  gunzip 1-Connexion\ UDP\ Externe.visz
 8261  ll
 8262  curl https://admin.google.com/ac/longrunning/download/yFHwdzLxjtzEyDAfJWB3-HYBzMp1ZPWHwq0-BsUimG34qGkadf4HQhfO2u9zLXVh3Z0jWw8AvUksZBy69eFJv4sjjZIdUjbIkTX1EjsOHAnA8BZxf3MJbAWnQ97UVE8W\?authuser\=0https://www.thecocktaildb.com/api/json/v1/1/filter.php\?i\=Rum | jq
 8263  curl https://admin.google.com/ac/longrunning/download/yFHwdzLxjtzEyDAfJWB3-HYBzMp1ZPWHwq0-BsUimG34qGkadf4HQhfO2u9zLXVh3Z0jWw8AvUksZBy69eFJv4sjjZIdUjbIkTX1EjsOHAnA8BZxf3MJbAWnQ97UVE8W\?authuser\=0https://www.thecocktaildb.com/api/json/v1/1/filter.php\?i\=Rum
 8264  curl https://admin.google.com/ac/longrunning/download/yFHwdzLxjtzEyDAfJWB3-HYBzMp1ZPWHwq0-BsUimG34qGkadf4HQhfO2u9zLXVh3Z0jWw8AvUksZBy69eFJv4sjjZIdUjbIkTX1EjsOHAnA8BZxf3MJbAWnQ97UVE8W\?authuser\=0
 8265  curl -v https://admin.google.com/ac/longrunning/download/yFHwdzLxjtzEyDAfJWB3-HYBzMp1ZPWHwq0-BsUimG34qGkadf4HQhfO2u9zLXVh3Z0jWw8AvUksZBy69eFJv4sjjZIdUjbIkTX1EjsOHAnA8BZxf3MJbAWnQ97UVE8W\?authuser\=0
 8266  cd
 8267  exit
 8268  ll
 8269  cd ..
 8270  ll
 8271  cd unmanaged\ export
 8272  ll
 8273  python gen_secret.py
 8274  cat /usr/share/dict
 8275  cat /usr/share/dict/words
 8276  wc /usr/share/dict/words
 8277  wc -l  /usr/share/dict/words
 8278  ll  /usr/share/dict
 8279  cat /usr/share/dict/README
 8280  python gen_secret.py
 8281  exti
 8282  exit
 8283  cd dev
 8284  cd kubeflow
 8285  ll
 8286  mkdir sources
 8287  cd sources
 8288  cd ..
 8289  l
 8290  cd src
 8291  ll
 8292  cd kubeflow
 8293  ll
 8294  cd ..
 8295  ll
 8296  mv sources sources_orange
 8297  cd sources_orange
 8298  ll
 8299  git clone git@gitlab.tech.orange:data-tools/kubeflow/kf-install.git
 8300  ll
 8301  cd kf-install
 8302  ll
 8303  git branch
 8304  git branch --help 
 8305  git branch dev-seb
 8306  git checkout dev-seb
 8307  git push
 8308  git push --set-upstream origin dev-seb
 8309  code .
 8310  cd "/Users/seb/Dev/kubeflow/sources_orange/kf-install"
 8311  git branch -m dev-seb dev-sebastien
 8312  git branch -a
 8313  git branch -a -l
 8314  git push origin :dev-seb dev-sebastien
 8315  cat ~/.kube/config
 8316  kubectl cluster-info
 8317  cd
 8318  ll
 8319  touch inject_cce_conf.py
 8320  code inject_cce_conf.py
 8321  kubectl config
 8322  kubectl config view
 8323  cd Dev
 8324  ll
 8325  cd kubeflow
 8326  ll
 8327  cd install-de-di
 8328  ll
 8329  cd k8s
 8330  ll
 8331  git status
 8332  git rebase dev
 8333  git fetch dev
 8334  git fetch 
 8335  git rebase dev
 8336  git status
 8337  git pull origin dev
 8338  git pull origin
 8339  git status
 8340  git pull origin/dev-sebastien
 8341  cd ..
 8342  mkdir s2
 8343  cd s2
 8344  git clone https://diodlab.bigdata.intraorange/diod/kubeflow/k8s.git
 8345  cd ..
 8346  ll
 8347  rm -rf s2
 8348  cd k8s
 8349  code .
 8350  git status
 8351  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 8352  k9s
 8353  code ~/.kube
 8354  k9s
 8355  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 8356  cd
 8357  cd -
 8358  cd ..
 8359  ll
 8360  cd ..
 8361  cd sources_orange
 8362  ll
 8363  cd kf-install
 8364  ll
 8365  cd von
 8366  cd utils
 8367  ll
 8368  cd orange-oidc-authservice
 8369  ll
 8370  sh ./build_image.sh
 8371  docker login dockerfactory-unstable-iva.si.francetelecom.fr --username osbi7352
 8372  sh ./build_image.sh
 8373  k9s
 8374  wget https://auth.tech.orange/
 8375  kubectl run tmp-shell --rm -i --tty --image nicolaka/netshoot -- /bin/bash\n
 8376  cd ..
 8377  ll
 8378  cd diag-network
 8379  ll
 8380  kaf net-shell.yaml
 8381  ggp
 8382  kgp
 8383  kubectl delete shell-demo
 8384  kubectl delete pod/shell-demo
 8385  kgp
 8386  wait
 8387  wait 10
 8388  sleep
 8389  sleep 1
 8390  kaf net-shell.yaml
 8391  kgp
 8392  kaf net-shell.yaml
 8393  kubectl exec -it shell-demo -- bash
 8394  kubectl exec -it shell-demo -- tcpdump -w dump.pcap
 8395  kubectl exec -it shell-demo -- wget https://auth.tech.orange
 8396  kubectl exec -it shell-demo -- bash
 8397  kubectl shell-demo:/dump.cap .
 8398  kubectl cp shell-demo:/dump.cap .
 8399  kubectl cp shell-demo:/dump.pcap .
 8400  kubectl cp shell-demo:/dump.pcap ./
 8401  kubectl cp shell-demo:/dump.pcap ./dump.pcap
 8402  ll
 8403  kubectl exec -it shell-demo -- tcpdump -w dump-curl.pcap
 8404  kubectl exec -it shell-demo -- curl https://auth.tech.orange
 8405  kubectl cp shell-demo:/dump-curl.pcap ./dump-curl.pcap
 8406  k9s
 8407  cd ..
 8408  ll
 8409  cd orange-oidc-authservice
 8410  ll
 8411  bash build_image.sh
 8412  curl https://di-diod-kubeflow.itn.intraorange/dex
 8413  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 8414  ll
 8415  kubectl get services
 8416  kubectl get services --all-namespaces
 8417  kubectl exec -it shell-demo -- bash
 8418  k9s
 8419  ll
 8420  kubectl exec -it shell-demo -- bash
 8421  exit
 8422  kubectl exec -it shell-demo -- bash
 8423  curl https://di-diod-kubeflow.itn.intraorange/dex
 8424  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 8425  kubectl get vs --all-namespaces
 8426  kubectl get vs --all-namespaces dex -o yaml
 8427  kubectl get vs -n auth dex -o yaml
 8428  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 8429  kubectl config view
 8430  kubectl cluster-info | grep 'Kubernetes master' | awk '/http/ {print $NF}'
 8431  kubectl get secret <secret name> -o jsonpath="{['data']['ca\.crt']}" | base64 --decode
 8432  kubectl get secrets
 8433  kubectl get secret default-token-xcvzt -o jsonpath="{['data']['ca\.crt']}" | base64 --decode
 8434  cd ..
 8435  ll
 8436  cd Runner
 8437  ll
 8438  kubectl apply -f gitlab-admin-service-account.yaml
 8439  kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep gitlab-admin | awk '{print $1}')
 8440  kubectl get namespace kubeflow -o yaml
 8441  k9s
 8442  cd 
 8443  cd Documents/gcp
 8444  ll
 8445  cd orange_contents
 8446  ll
 8447  cd ..
 8448  gsutil cp -r gs://orange_contents .\n
 8449  exit
 8450  source ~/poff
 8451  exit
 8452  cd
 8453  cd Documents/gcp
 8454  gsutil cp -r gs://orange_contents .\n
 8455  env
 8456  source ~/poff
 8457  ll
 8458  gsutil cp -r gs://orange_contents .\n
 8459  gsutil 
 8460  gsutil config
 8461  gsutil config get
 8462  gsutil config --help
 8463  gcloud config list
 8464  gcloud config unset proxy/type
 8465  gcloud config list
 8466  gcloud config unset proxy/port
 8467  gcloud config unset proxy/address
 8468  gcloud config unset proxy/username
 8469  gcloud config unset proxy/password
 8470  gcloud config list
 8471  gsutil cp -r gs://orange_contents .\n
 8472  code ~
 8473  source ~/ponn
 8474  source ~/pon
 8475  gsutil cp -r gs://orange_contents .\n
 8476  cd ~/Downloads
 8477  ls -ltr
 8478  cd google-cloud-sdk-1
 8479  ll
 8480  ls -ltr ..
 8481  ll
 8482  ./install.sh
 8483  source ~/poff
 8484  ./install.sh
 8485  cd
 8486  gcloud components update
 8487  gcloud components list
 8488  exit
 8489  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 8490  exit
 8491  brew install ncdu
 8492  ncdu 
 8493  cd dev
 8494  ll
 8495  cd temp
 8496  ll
 8497  touch nginx.conf
 8498  code nginx.conf
 8499  docker run --name mynginx -v ~/dev/temp/nginx.conf:/etc/nginx/nginx.conf:ro -d nginx
 8500  docker container
 8501  docker container ls
 8502  docker run --name mynginx -v ~/dev/temp/nginx.conf:/etc/nginx/nginx.conf:ro nginx
 8503  docker container 
 8504  docker container ls --help
 8505  docker container ls --a
 8506  docker container ls -a
 8507  docker container rm b2847a16f573
 8508  docker run -rm --name mynginx -v ~/dev/temp/nginx.conf:/etc/nginx/nginx.conf:ro nginx
 8509  docker run --help
 8510  docker run --rm --name mynginx -v ~/dev/temp/nginx.conf:/etc/nginx/nginx.conf:ro nginx
 8511  code ~/.kube/config
 8512  kubectl config view
 8513  kubectl cluster-info
 8514  docker run --rm --name mynginx -v ~/dev/temp/nginx.conf:/etc/nginx/nginx.conf:ro nginx
 8515  kubectl cluster-info
 8516  telnet localhost 80
 8517  docker run --rm --name mynginx -v ~/dev/temp/nginx.conf:/etc/nginx/nginx.conf:ro nginx -p 80:80
 8518  docker run --rm --name mynginx -p 80:80 -v ~/dev/temp/nginx.conf:/etc/nginx/nginx.conf:ro nginx 
 8519  telnet localhost 80
 8520  kubectl cluster-info
 8521  docker run --rm --name mynginx -p 80:80 -v ~/dev/temp/nginx.conf:/etc/nginx/nginx.conf:ro nginx 
 8522  kubectl cluster-info
 8523  curl https://di-diod-kubeflow-cce-api.itn.intraorange:5443
 8524  curl -k https://di-diod-kubeflow-cce-api.itn.intraorange:5443
 8525  curl -k https://di-diod-kubeflow-cce-api.itn.intraorange:5443/api
 8526  curl -k https://di-diod-kubeflow-cce-api.itn.intraorange:5443/apis
 8527  kubectl cluster-info
 8528  docker run --rm --name mynginx -p 80:80 -v ~/dev/temp/nginx.conf:/etc/nginx/nginx.conf:ro nginx 
 8529  kubectl cluster-info
 8530  exit
 8531  kubectl cluster-info
 8532  docker run --rm --name mynginx -p 80:80 -v ~/dev/temp/nginx.conf:/etc/nginx/nginx.conf:ro nginx 
 8533  kubectl cluster-info
 8534  ll
 8535  mkdir nginx
 8536  mv nginx.conf nginx
 8537  cd Dev/temp/nginx
 8538  ll
 8539  mkdir ssl/private
 8540  mkdir ssl
 8541  mkdir ssl/private
 8542  mkdir ssl/certs
 8543  cp /System/Library/OpenSSL/openssl.cnf openssl.cnf
 8544  sudo openssl req \\n  -x509 -nodes -days 365 -newkey rsa:2048 \\n  -subj "/CN=localhost" \\n  -config nginx/openssl.cnf \\n-keyout ssl/private/self-signed.key \\n-out ssl/certs/self-signed.crt
 8545  ll
 8546  sudo openssl req \\n  -x509 -nodes -days 365 -newkey rsa:2048 \\n  -subj "/CN=localhost" \\n  -config openssl.cnf \\n-keyout ssl/private/self-signed.key \\n-out ssl/certs/self-signed.crt
 8547  sudo openssl dhparam -out ssl/certs/dhparam.pem 128
 8548  mkdir snippets
 8549  touch snippets/self-signed.conf
 8550  touch snippets/ssl-params.conf
 8551  docker run --rm --name mynginx -p 80:80 -v ~/dev/temp/nginx/:/etc/nginx/:ro nginx 
 8552  kubectl cluster-info
 8553  docker run --rm --name mynginx -p 80:80 -v ~/dev/temp/nginx/:/etc/nginx/:ro nginx 
 8554  ll
 8555  cd nginx
 8556  ll
 8557  cd ssl
 8558  ll
 8559  ls -R 
 8560  ls -lR 
 8561  cd private
 8562  ll
 8563  chmod 644 self-signed.key
 8564  sudo chmod 644 self-signed.key
 8565  ll
 8566  docker run --rm --name mynginx -p 80:80 -v ~/dev/temp/nginx/:/etc/nginx/:ro nginx 
 8567  code ~/.kube/config
 8568  kubectl cluster-info
 8569  docker run --rm --name mynginx -p 80:80 -p 443:443 -v ~/dev/temp/nginx/:/etc/nginx/:ro nginx 
 8570  kubectl cluster-info
 8571  docker run --rm --name mynginx -p 80:80 -p 443:443 -v ~/dev/temp/nginx/:/etc/nginx/:ro nginx 
 8572  kubectl cluster-info
 8573  docker run --rm --name mynginx -p 80:80 -p 443:443 -v ~/dev/temp/nginx/:/etc/nginx/:ro nginx 
 8574  kubectl cluster-info
 8575  curl -k https://di-diod-kubeflow-cce-api.itn.intraorange:5443/api/
 8576  curl -k -v https://di-diod-kubeflow-cce-api.itn.intraorange:5443/api/
 8577  kubectl --help
 8578  kubectl auth
 8579  kubectl auth --help
 8580  kubectl 
 8581  kubectl option
 8582  kubectl optionq
 8583  kubectl options
 8584  kubectl -v cluster-info
 8585  kubectl -v 1 cluster-info
 8586  kubectl -v 10 cluster-info
 8587  curl -k -v -XGET  -H "User-Agent: kubectl/v1.17.2 (darwin/amd64) kubernetes/59603c6" -H "Accept: application/json, */*" 'https://di-diod-kubeflow-cce-api.itn.intraorange:5443/api?timeout=32s'
 8588  curl -k -v 10 -XGET  -H "User-Agent: kubectl/v1.17.2 (darwin/amd64) kubernetes/59603c6" -H "Accept: application/json, */*" 'https://di-diod-kubeflow-cce-api.itn.intraorange:5443/api?timeout=32s'
 8589  curl -k -v 10 -d @body.txt https://di-diod-kubeflow-cce-api.itn.intraorange:5443/api/
 8590  cd nginx
 8591  curl -k -v 10 -d @body.txt https://di-diod-kubeflow-cce-api.itn.intraorange:5443/api/
 8592  ll
 8593  curl -k -v 10 -d @body.txt https://di-diod-kubeflow-cce-api.itn.intraorange:5443/api/
 8594  source ~/poff
 8595  curl -k -v 10 -d @body.txt https://di-diod-kubeflow-cce-api.itn.intraorange:5443/api/
 8596  curl -k -v -d @body.txt https://di-diod-kubeflow-cce-api.itn.intraorange:5443/api/
 8597  curl -k -v -d @body.txt https://di-diod-kubeflow-cce-api.itn.intraorange:5443/api/curl -k -v -XGET  -H "User-Agent: kubectl/v1.17.2 (darwin/amd64) kubernetes/59603c6" -H "Accept: application/json, */*" 'https://di-diod-kubeflow-cce-api.itn.intraorange:5443/api?timeout=32s'
 8598  curl -k -v -XGET  -H "User-Agent: kubectl/v1.17.2 (darwin/amd64) kubernetes/59603c6" -H "Accept: application/json, */*" 'https://di-diod-kubeflow-cce-api.itn.intraorange:5443/api?timeout=32s'
 8599  curl -k -v -XGET  -H "User-Agent: kubectl/v1.17.2 (darwin/amd64) kubernetes/59603c6" -H "Accept: application/json, */*" -d @toto.txt 'https://di-diod-kubeflow-cce-api.itn.intraorange:5443/api?timeout=32s'
 8600  curl -k -v -XGET  -H "User-Agent: kubectl/v1.17.2 (darwin/amd64) kubernetes/59603c6" -H "Accept: application/json, */*" -d @body.txt 'https://di-diod-kubeflow-cce-api.itn.intraorange:5443/api?timeout=32s'
 8601  code ~/.kube
 8602  k9s
 8603  cd 
 8604  cd .kube
 8605  ll
 8606  rm -rf http-cache
 8607  rm -rf cache
 8608  ll
 8609  kubectl -v 10 cluster-info
 8610  curl -k -v -XGET  -H "User-Agent: kubectl/v1.17.2 (darwin/amd64) kubernetes/59603c6" -H "Accept: application/json, */*" 'http://di-diod-kubeflow-cce-api.itn.intraorange:5443/api?timeout=32s'
 8611  curl -k -v -XGET  -H "User-Agent: kubectl/v1.17.2 (darwin/amd64) kubernetes/59603c6" -H "Accept: application/json, */*" 'https://di-diod-kubeflow-cce-api.itn.intraorange:5443/api?timeout=32s'
 8612  kubectl -v 10 cluster-info
 8613  curl -k -v -XGET  -H "User-Agent: kubectl/v1.17.2 (darwin/amd64) kubernetes/59603c6" -H "Accept: application/json, */*" 'https://di-diod-kubeflow-cce-api.itn.intraorange:5443/api?timeout=32s'
 8614  kubectl proxy --port=8080
 8615  curl http://localhost:8080/api/
 8616  curl -k -v -XGET  -H "User-Agent: kubectl/v1.17.2 (darwin/amd64) kubernetes/59603c6" -H "Accept: application/json, */*" 'https://di-diod-kubeflow-cce-api.itn.intraorange:5443/api/?timeout=32s'
 8617  curl -k -v -XGET  -H "User-Agent: kubectl/v1.17.2 (darwin/amd64) kubernetes/59603c6" -H "Accept: application/json, */*" 'https://di-diod-kubeflow-cce-api.itn.intraorange:5443/api'
 8618  curl -k -v -XGET  -H "User-Agent: kubectl/v1.17.2 (darwin/amd64) kubernetes/59603c6" -H "Accept: application/json, */*" 'https://di-diod-kubeflow-cce-api.itn.intraorange:5443/api/'
 8619  APISERVER=$(kubectl config view | grep server | cut -f 2- -d ":" | tr -d " ")\nTOKEN=$(kubectl describe secret $(kubectl get secrets | grep default | cut -f1 -d ' ') | grep -E '^token' | cut -f2 -d':' | tr -d '\t')\ncurl $APISERVER/api --header "Authorization: Bearer $TOKEN" --insecure
 8620  PISERVER=$(kubectl config view | grep server | cut -f 2- -d ":" | tr -d " ")
 8621  APISERVER=$(kubectl config view | grep server | cut -f 2- -d ":" | tr -d " ")
 8622  env APISERVER
 8623  env 
 8624  export APISERVER=$(kubectl config view | grep server | cut -f 2- -d ":" | tr -d " ")
 8625  env 
 8626  ipconfig
 8627  ifconfig
 8628  kubectl cluster-info
 8629  kubectl -v 10 cluster-info
 8630  docker run --rm --name mynginx -p 80:80 -p 443:443 -v ~/dev/temp/nginx/:/etc/nginx/:ro nginx 
 8631  kubectl -v 10 cluster-info
 8632  docker run --rm --name mynginx -p 80:80 -p 443:443 -v ~/dev/temp/nginx/:/etc/nginx/:ro nginx 
 8633  kubectl -v 10 cluster-info
 8634  docker run --rm --name mynginx -p 80:80 -p 443:443 -v ~/dev/temp/nginx/:/etc/nginx/:ro nginx 
 8635  kubectl -v 10 cluster-info
 8636  kubectl config view -o jsonpath='{"Cluster name\tServer\n"}{range .clusters[*]}{.name}{"\t"}{.cluster.server}{"\n"}{end}'\n
 8637  export CLUSTER_NAME="pcluster"
 8638  APISERVER=$(kubectl config view -o jsonpath="{.clusters[?(@.name==\"$CLUSTER_NAME\")].cluster.server}")
 8639  TOKEN=$(kubectl get secrets -o jsonpath="{.items[?(@.metadata.annotations['kubernetes\.io/service-account\.name']=='default')].data.token}"|base64 --decode)\n
 8640  curl -X GET $APISERVER/api --header "Authorization: Bearer $TOKEN" --insecure
 8641  curl -v -X GET $APISERVER/api --header "Authorization: Bearer $TOKEN" --insecure
 8642  kubectl cluster-info
 8643  kubectl -v cluster-info
 8644  kubectl -v 1 cluster-info
 8645  kubectl -v 2 cluster-info
 8646  kubectl -v 3 cluster-info
 8647  kubectl -v 4 cluster-info
 8648  kubectl -v 5 cluster-info
 8649  kubectl -v 6 cluster-info
 8650  curl -v -X GET http://localhost:443/api --header "Authorization: Bearer $TOKEN" --insecure
 8651  curl -v -X GET https://localhost:443/api --header "Authorization: Bearer $TOKEN" --insecure
 8652  kubectl -v 5 cluster-info
 8653  ll
 8654  rm -rf cache
 8655  rm -rf http-cache
 8656  kubectl -v 5 cluster-info
 8657  docker run --rm --name mynginx -p 80:80 -p 5443:5443 -v ~/dev/temp/nginx/:/etc/nginx/:ro nginx 
 8658  kubectl -v 5 cluster-info
 8659  kubectl -v 6 cluster-info
 8660  dig di-diod-kubeflow-cce-api.itn.intraorange
 8661  kubectl -v 6 cluster-info
 8662  docker run --rm --name mynginx -p 80:80 -p 5443:5443 -v ~/dev/temp/nginx/:/etc/nginx/:ro nginx 
 8663  kubectl -v 6 cluster-info
 8664  exit
 8665  gsutil
 8666  gc
 8667  gcloud components list
 8668  cd Downloads
 8669  ll
 8670  ls -ltr
 8671  tar xzvf google-cloud-sdk-288.0.0-darwin-x86_64.tar
 8672  cd google-cloud-sdk
 8673  ll
 8674  cd ..
 8675  ./google-cloud-sdk/install.sh
 8676  gcloud
 8677  source ~/pon
 8678  which gcloud
 8679  ./google-cloud-sdk/install.sh --help
 8680  gcloud
 8681  cd ..
 8682  ll
 8683  ls -la
 8684  cat .zshrc
 8685  gcloud
 8686  gsutil
 8687  gsutil cp gs://diese-shared/test-automl/data/adult_train_full.csv gs://diese-shared-2/test-automl/data/
 8688  cd Dev
 8689  cd kubeflow
 8690  ll
 8691  cd test_poddefault
 8692  ll
 8693  kubectl apply -f podef_env.yaml
 8694  cd 
 8695  cd dev 
 8696  cd kubeflow
 8697  ll
 8698  mkdir sources_kubeflow
 8699  cd sources_kubeflow
 8700  ll
 8701  git clone https://github.com/kubeflow/kubeflow.git
 8702  ll
 8703  git clone https://github.com/kubeflow/pipelines.git
 8704  git clone https://github.com/kubeflow/manifests.git
 8705  git clone https://github.com/kubeflow/examples.git
 8706  code .
 8707  k9s
 8708  ll
 8709  cd ..
 8710  ll
 8711  find . -name "net*" 
 8712  find . -name "net-s*" 
 8713  cd sources_orange/kf-install/utils/diag-network
 8714  ll
 8715  kaf net-shell.yaml
 8716  kubectl describe net-shell.yaml
 8717  kubectl describe net-shell
 8718  kgp
 8719  kubectl describe pod/net-shell
 8720  kdel pod/net-shell 
 8721  kaf net-shell.yaml
 8722  kdel pod/net-shell 
 8723  kaf net-shell.yaml
 8724  kubectl describe pod/net-shell
 8725  kubectl get poddefautl
 8726  kubectl get poddefaults.kubeflow.org
 8727  kubectl get poddefaults.kubeflow.org -o yaml 
 8728  k9s
 8729  kubectl delete pod/shell-demo
 8730  ll
 8731  kubectl get namespaces
 8732  kaf podef_env.yaml -n eric-clavier
 8733  kaf podef_env.yaml -n sebastien-blin
 8734  kaf podef_env.yaml -n kubeflow
 8735  pwd
 8736  cd ..
 8737  ll
 8738  cd install-de-di
 8739  ll
 8740  cd temp
 8741  ll
 8742  ls -ltr
 8743  mkdir test_customize_jupyter
 8744  cd test_customize_jupyter
 8745  ll
 8746  curl -s https://codeload.github.com/kubeflow/manifests/tar.gz/v0.7-branch | tar -xzv
 8747  ll
 8748  curl -s https://codeload.github.com/kubeflow/manifests/tar.gz/v0.7-branch
 8749  ll
 8750  curl https://codeload.github.com/kubeflow/manifests/tar.gz/v0.7-branch
 8751  source ~/pon
 8752  curl -s https://codeload.github.com/kubeflow/manifests/tar.gz/v0.7-branch | tar -xzv
 8753  ll
 8754  pwd
 8755  kfctl build -V -f kfctl_k8s_istio_v0.7.0.yaml
 8756  ll
 8757  ll kustomize
 8758  ll kustomize/jupyter-web-app
 8759  ll kustomize/jupyter-web-app/overlays
 8760  ll
 8761  chmod +x test_build.sh
 8762  ./test_build.sh
 8763  ll
 8764  ./test_build.sh
 8765  k9s
 8766  kgp -n sebastien.blin
 8767  kubectl get all -n sebastien.blin
 8768  k9s
 8769  kgp -n sebastien-blin
 8770  kgp -n sebastien-blin -o yaml
 8771  cd ../..
 8772  pwd
 8773  cd ..
 8774  l
 8775  cd sources_orange/kf-install/utils/diag-network
 8776  cd ../..
 8777  ll
 8778  cd utils
 8779  ll
 8780  cd ../.
 8781  cd ..
 8782  ll
 8783  cd ..
 8784  ll
 8785  cd test_poddefault
 8786  ll
 8787  kaf podef_env.yaml -n kubeflow
 8788  kaf podef_env.yaml -n sebastien-blin
 8789  kgp -n sebastien-blin -o yaml
 8790  kgp -n sebastien-blin 
 8791  ll
 8792  kaf podef_env.yaml -n sebastien-blin
 8793  kgp -n sebastien-blin 
 8794  kgp -n sebastien-blin -o yaml
 8795  kaf podef_env.yaml -n sebastien-blin
 8796  kgp -n sebastien-blin -o yaml
 8797  kgp -n sebastien-blin 
 8798  kaf podef_env.yaml -n sebastien-blin
 8799  kgp -n sebastien-blin 
 8800  docker pull dockerfactory-iva.si.francetelecom.fr/jupyter-notebooks/minimal-notebook:develop-seb
 8801  docker pull dockerfactory-unstable-iva.si.francetelecom.fr/jupyter-notebooks/minimal-notebook:develop-seb  
 8802  kubectl logs notebook-controller-deployment-6d66d5f88d-mq6jn
 8803  kubectl logs notebook-controller-deployment-6d66d5f88d-mq6jn > log.txt
 8804  kubectl logs jupyter-web-app-deployment-5597cdfb84-sbzqf  > webapp-log.txt
 8805  ll
 8806  kaf notebooksb.json -n sebastien-blin
 8807  k9s
 8808  docker run -p 80:80 kennethreitz/httpbin
 8809  ll
 8810  kaf headers-pods.yaml -n sebastien-blin
 8811  kubectl get PodDefault --all-namesapces
 8812  kubectl get PodDefault --all-namespaces
 8813  kubectl get PodDefault --all-namespaces -o yaml
 8814  kaf podef_env.yaml -n kubeflow
 8815  kaf podef_env.yaml -n eric-clavier -clavier
 8816  kaf podef_env.yaml -n eric-clavier
 8817  kaf podef_env.yaml -n sebastien-blin
 8818  kaf headers-pods.yaml -n sebastien-blin
 8819  docker pull registry.gitlab.tech.orange/data-tools/jupyter/notebook-servers/pyspark-notebook:develop
 8820  docker login registry.gitlab.tech.orange
 8821  ipython
 8822  exit
 8823  cd ..
 8824  cd Documents/gcp
 8825  ll
 8826  cd orange_contents\n
 8827  ll
 8828  gsutil cp -r gs://orange_contents .\n
 8829  ll
 8830  rm -rf orange_contents
 8831  cd ..
 8832  source ~/poff
 8833  gsutil cp -m -r gs://orange_contents .\n
 8834  gsutil -m cp -r gs://orange_contents .\n
 8835  gsutil cp help 
 8836  gsutil help cp
 8837  ll
 8838  mkdir temp
 8839  cd temp
 8840  gsutil -m cp -r -P gs://orange_contents .\n
 8841  ll
 8842  cd orange_contents
 8843  ls -ltR 
 8844  cd ../..
 8845  ll
 8846  rm -rf temp
 8847  ll
 8848  cd orange_contents
 8849  ll
 8850  ls 
 8851  ls -R
 8852  ls -lP
 8853  ls -lR
 8854  ls -R
 8855  ls -oR
 8856  ls -xR
 8857  ls -1R
 8858  ls **
 8859  ls **txt
 8860  find . -name '*antos*'
 8861  find . -name '*anthos*'
 8862  find . -name '*Anthos*'
 8863  find . | grep -i anthos
 8864  find . | grep -i disc
 8865  find . | grep -i con
 8866  cd 
 8867  cd Documents/Arduino
 8868  ll
 8869  cd libraries
 8870  ll
 8871  exit
 8872  mv ~/Downloads/RadioHead .
 8873  ll
 8874  ssh pi@gw
 8875  jupyter lab
 8876  ssh pi@gw
 8877  cd 
 8878  cd Documents/Arduino
 8879  ll
 8880  cd Arrosage
 8881  ll
 8882  cd ..
 8883  git clone https://github.com/SebBlin/Arrosage.git
 8884  ll
 8885  ls -la
 8886  cd Arrosage
 8887  ll
 8888  ls -la
 8889  ll
 8890  git add .
 8891  git commit -m "Add code for Arduino"
 8892  git push
 8893  ll
 8894  cd Vannes_arduino
 8895  ll
 8896  cd Vanne
 8897  ll
 8898  cp ../../../libraries/Vanne/* .
 8899  ll
 8900  cd ../../..
 8901  l
 8902  cd libraries
 8903  ll
 8904  mv Vanne Vanne.old
 8905  ln -s ~/Documents/Arduino/Arrosage/Vannes_arduino/Vanne
 8906  ll
 8907  cd ..
 8908  ll
 8909  code Arrosage
 8910  exit
 8911  k9s
 8912  ll ~/.jupyter
 8913  ll -R  ~/.jupyter
 8914  cd ..
 8915  ll
 8916  cd sources_orange
 8917  ll
 8918  git clone https://gitlab.forge.orange-labs.fr/nadia/jupyter/jupyter-notebooks.git
 8919  git clone git@gitlab.forge.orange-labs.fr:nadia/jupyter/jupyter-notebooks.git
 8920  ll
 8921  code jupyter-notebooks
 8922  kubectl logs jupyter-web-app-deployment-5597cdfb84-sbzqf  > webapp-log.txt
 8923  mv webapp-log.txt ..
 8924  cd ..
 8925  vi webapp-log.txt
 8926  kubectl logs jupyter-web-app-deployment-5597cdfb84-sbzqf 
 8927  kubectl get Notebooks
 8928  kubectl get Notebooks -n sebastien-blin
 8929  kubectl get Notebooks -n sebastien-blin toto
 8930  kubectl get Notebooks -n sebastien-blin toto -o yaml
 8931  cd install-de-di
 8932  ll
 8933  cd temp
 8934  ll
 8935  cd test_customize_jupyter
 8936  ll
 8937  cd test-notebookcontroler
 8938  ll
 8939  kubectl appli -f notbook.yaml -n sebastien-blin
 8940  kubectl apply -f notbook.yaml -n sebastien-blin
 8941  kubectl rm -f notbook.yaml
 8942  kubectl delete -f notbook.yaml
 8943  kubectl get Notebooks -n sebastien-blin
 8944  kubectl get Notebooks -n sebastien-blin test-nb -o yaml
 8945  kubectl apply -f notbook.yaml 
 8946  kubctl get pv
 8947  kubectl get pv
 8948  kubectl get pv --allnamespaces
 8949  kubectl get pv --all-namespaces
 8950  ll
 8951  kaf notbook.yaml
 8952  kubectl logs jupyter-web-app-deployment-5597cdfb84-sbzqf 
 8953  kubectl logs notebook-controller-deployment-6d66d5f88d-mq6jn
 8954  kaf notbook.yaml
 8955  kubectl logs notebook-controller-deployment-6d66d5f88d-mq6jn
 8956  ll
 8957  cd ..
 8958  ll
 8959  cd test-notebookcontroler
 8960  ll
 8961  history | grep pod
 8962  history | grep Pod
 8963  find ~ -name Podset.yaml
 8964  find ~/Dev -name Podset.yaml
 8965  history | grep sebastien
 8966  find ~/Dev -name podef_env.yaml 
 8967  code /Users/seb/Dev/kubeflow/test_poddefault/
 8968  ll
 8969  kaf podef_env.yaml
 8970  kubectl get notbooks 
 8971  kubectl get notebooks 
 8972  kubectl get notebooks -n sebastien-blin
 8973  kaf notbook.yaml
 8974  k9s
 8975  kubectl rm -f notbook.yaml
 8976  kubectl delete -f notbook.yaml
 8977  kaf notbook.yaml
 8978  kubectl get notebooks -n sebastien-blin
 8979  kubectl delete -f notbook.yaml
 8980  kaf notbook.yaml
 8981  kubectl get notebooks -n sebastien-blin
 8982  kubectl get pods -n sebastien-blin
 8983  kubectl get pods/tn1-0 -n sebastien-blin
 8984  kubectl describe pods/tn1-0 -n sebastien-blin 
 8985  kubectl delete -f notbook.yaml
 8986  kaf podef_env.yaml
 8987  kaf notbook.yaml
 8988  kubectl describe pods/tn1-0 -n sebastien-blin 
 8989  kubectl delete -f notbook.yaml
 8990  kubectl get notebooks -n sebastien-blin
 8991  kaf notbook.yaml
 8992  kubectl describe pods/tn1-0 -n sebastien-blin 
 8993  kubectl delete -f notbook.yaml
 8994  kaf notbook.yaml
 8995  kubectl delete -f notbook.yaml
 8996  kaf podef_env.yaml
 8997  kaf notbook.yaml
 8998  kubectl delete -f notbook.yaml
 8999  kaf podef_env.yaml
 9000  kaf notbook.yaml
 9001  kaf podef_env.yaml
 9002  cd ../sources_orange
 9003  l
 9004  code kf-install
 9005  git config --help
 9006  ll
 9007  touch deploy_podDef.sh
 9008  kubectl get ns 
 9009  kubectl get ns sebastien-blin
 9010  kubectl get ns sebastien-blin -o yaml
 9011  kubectl get ns --field-selector metadata.ownerReferences.kind=Profile
 9012  kubectl get ns 
 9013  ll
 9014  kaf podef_env.yaml -n sebastien-blin
 9015  kaf podef_env.yaml -n eric-clavier
 9016  k9s
 9017  pstree
 9018  brew install pstree
 9019  pstree
 9020  ll
 9021  cd 
 9022  cd Dev/kubeflow
 9023  ll
 9024  mkdir minikf
 9025  cd minikf
 9026  ll
 9027  vagrant status 
 9028  vagrant init arrikto/minikf
 9029  source ~/poff
 9030  vagrant init arrikto/minikf
 9031  vagrant plugin repair\n
 9032  vagrant plugin expunge --reinstall
 9033  vagrant init arrikto/minikf
 9034  vagrant up 
 9035  ll
 9036  cat Vagrantfile
 9037  ls -la 
 9038  ls -la .vagrant
 9039  ls -la .vagrant/rgloader
 9040  vagrant up 
 9041  gcloud
 9042  ll
 9043  cd 
 9044  cat .zshrc
 9045  cat /Users/seb/Downloads/google-cloud-sdk/path.zsh.inc
 9046  cat /Users/seb/Downloads/google-cloud-sdk/bin
 9047  ls /Users/seb/Downloads/google-cloud-sdk/bin
 9048  exit
 9049  gcloud
 9050  source ~/pon
 9051  source ~/poff
 9052  gcloud components update\n
 9053  ll
 9054  vagrant up
 9055  vagrant down
 9056  vagrant halt
 9057  k9s
 9058  ll
 9059  kaf podef_env.yaml -n bruno-kauffmann
 9060  kaf podef_env.yaml -n fabien-masboncon
 9061  k9s
 9062  ll
 9063  kubectl get profiles
 9064  kubectl get profiles 'sebastien-blin' -o yaml 
 9065  cd ..
 9066  ll
 9067  cd sources_orange
 9068  ll
 9069  git clone git@gitlab.tech.orange:data-tools/kubeflow/demo-cu.git
 9070  code demo-cu
 9071  cd ../../..
 9072  cd ..
 9073  cd sources_kubeflow
 9074  ll
 9075  cd examples
 9076  ll
 9077  git pull 
 9078  source ~/pon
 9079  git pull 
 9080  git fetch
 9081  git pull 
 9082  code ?
 9083  code .
 9084  k9s
 9085  kubectl get vs
 9086  kubectl get vs --all-namespacs
 9087  kubectl get vs --all-namespaces
 9088  gcpc
 9089  kubectl get vs/metadata-grpc -n kubeflow
 9090  kubectl get vs/metadata-grpc -n kubeflow -o yaml
 9091  bloom
 9092  bloomrpc
 9093  pwd
 9094  ll
 9095  cd ..
 9096  ll
 9097  git clone https://github.com/kubeflow/metadata.git
 9098  find . | grep -i proto
 9099  cd metadata
 9100  find . | grep -i proto
 9101  k9s
 9102  cd kf-install
 9103  ll
 9104  cd utils
 9105  ll
 9106  cd conf_ns_jupyter
 9107  ll
 9108  kubectl apply -f podef_env.yaml -n sebastien-blin 
 9109  kubectl apply -f podef_env.yaml -n bruno-kauffmann
 9110  kubectl apply -f podef_env.yaml -n eric-clavier
 9111  kgns
 9112  kubectl apply -f podef_env.yaml -n fabien-masboncon
 9113  kubectl cluster-info
 9114  ll
 9115  kubectl apply -f podef_env.yaml -n eric-clavier
 9116  kubectl apply -f podef_env.yaml -n sebastien-blin 
 9117  kubectl apply -f podef_env.yaml -n bruno-kauffmann
 9118  kubectl apply -f podef_env.yaml -n fabien-masboncon
 9119  cd ../..
 9120  ll
 9121  cd kubeflow
 9122  cd install-
 9123  cd install-de-di
 9124  cd temp
 9125  ll
 9126  python test_sts.py
 9127  cd ..
 9128  ll
 9129  cd ..
 9130  cd sources_kubeflow
 9131  ll
 9132  cd examples
 9133  ll
 9134  cd xgboost_synthetic
 9135  ll
 9136  docker login dockerfactory-unstable-iva.si.francetelecom.fr --username osbi7352
 9137  docker build -t dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/buils-fairing:0.1 . 
 9138  docker push dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/buils-fairing:0.1
 9139  echo 'sebblin:Nifaseb@0502'
 9140  echo 'sebblin:Nifaseb@0502' | base64
 9141  cd ../../..
 9142  cd install-de-di
 9143  cd tmp
 9144  ll
 9145  cd temp
 9146  ll
 9147  ls -ltr
 9148  kubectl get ns
 9149  export NAMESPACE=sebastien-blin
 9150  echo ${NAMESPACE}
 9151  kubectl create --namespace ${NAMESPACE} configmap docker-config --from-file=docker-cm.json
 9152  cd ../..
 9153  ll
 9154  cd sources_kubeflow
 9155  cd examples
 9156  ll
 9157  cd mnist
 9158  ll
 9159  jupyther lob
 9160  jupyter lob
 9161  jupyter lab
 9162  pip install kubernetes
 9163  pip install kubernetes --user
 9164  pip3 install kubernetes --user
 9165  pip3 install kubernetes
 9166  pip install kubernetes
 9167  pip install kubeflow
 9168  pip3 install kubeflow
 9169  pip3 install --user azure==4.0.0
 9170  pip3 install  azure==4.0.0
 9171  pip3 install kubeflow
 9172  exit
 9173  pip install msrestazure
 9174  pip install msrest
 9175  ll
 9176  cd ../
 9177  cd ..
 9178  cd sources_orange/kf-install/utils/
 9179  ll
 9180  cd conf_ns_jupyter
 9181  ll
 9182  kubectl apply -f podef_env.yaml -n kubeflow
 9183  export NAMESPACE='sebastien-blin'\nkubectl create --namespace=kubeflow rolebinding --clusterrole=kubeflow-view --serviceaccount=${NAMESPACE}:default-editor ${NAMESPACE}-minio-view
 9184  k9s
 9185  cd ..
 9186  ll
 9187  cd ..
 9188  ll
 9189  cd demo-cu
 9190  ll
 9191  cd 2-\ create\ container
 9192  ll
 9193  docker login dockerfactory-unstable-iva.si.francetelecom.fr --username osbi7352
 9194  ./build-images.sh
 9195  docker run --name "model-cu" --rm --env-file env.list -p 5000:5000 model-cu:1.2
 9196  cd ..
 9197  ll
 9198  cd 3-\ deploy\ model
 9199  docker run --name "model-cu" --rm  -p 5000:5000 model-cu:1.2
 9200  curl -gk http://localhost:5000/api/v0.1/predictions \\n     -H "Content-Type: application/json" \\n     --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'\n
 9201  k9s
 9202  cd 
 9203  cd ../..
 9204  ll
 9205  cd ..
 9206  cd install-de-di
 9207  cd temp
 9208  ll
 9209  ls -ltr
 9210  mv docker-cm.json config.json
 9211  kubectl create --namespace ${NAMESPACE} configmap docker-config --from-file=config.json
 9212  env 
 9213  export NAMESPACE='sebastien-blin'
 9214  kubectl create --namespace ${NAMESPACE} configmap docker-config --from-file=config.json
 9215  kubectl delete --namespace ${NAMESPACE} configmap docker-config
 9216  kubectl create --namespace ${NAMESPACE} configmap docker-config --from-file=config.json
 9217  kubectl get all -n sebastien.blin
 9218  kubectl get all -n sebastie-blin
 9219  kubectl get all -n sebastien-blin
 9220  kubectl delete --namespace ${NAMESPACE} job.batch/fairing-builder-65rtx 
 9221  kubectl delete --namespace ${NAMESPACE} job.batch/fairing-builder-bzwkk
 9222  kubectl get all -n sebastien-blin
 9223  kubectl get -n sebastien-blin tfjob
 9224  kubectl delete --namespace ${NAMESPACE} tfjob/mnist-train-82ef
 9225  kubectl delete --namespace ${NAMESPACE} configmap docker-config
 9226  kubectl create --namespace ${NAMESPACE} configmap docker-config --from-file=config.json
 9227  docker login --username sebblin
 9228  cat ~/.docker/config.json
 9229  docker login https://index.docker.io/v1/ --username sebblin
 9230  cat ~/.docker/config.json
 9231  docker logout
 9232  docker login -u sebblin -p 93bf4f8d-6bc2-42ce-922c-282ad29468ba
 9233  cat ~/.docker/config.json
 9234  ls -l ~/.docker
 9235  ls -ltr ~/.docker
 9236  cat  ~/.docker/config.json
 9237  echo -n "sebblin:93bf4f8d-6bc2-42ce-922c-282ad29468ba" 
 9238  echo -n "sebblin:93bf4f8d-6bc2-42ce-922c-282ad29468ba"  | base64 
 9239  echo c2ViYmxpbjo5M2JmNGY4ZC02YmMyLTQyY2UtOTIyYy0yODJhZDI5NDY4YmE= | base64 -d
 9240  kubectl delete --namespace ${NAMESPACE} configmap docker-config
 9241  kubectl create --namespace ${NAMESPACE} configmap docker-config --from-file=config.json
 9242  kubectl get -n sebastien-blin cm
 9243  kubectl get -n sebastien-blin cm/docker-config
 9244  kubectl get -n sebastien-blin cm/docker-config -o yaml
 9245  kubectl apply --namespace ${NAMESPACE} configmap docker-config --from-file=config.json
 9246  kubectl delete --namespace ${NAMESPACE} configmap docker-config
 9247  kubectl create --namespace ${NAMESPACE} configmap docker-config --from-file=config.json
 9248  kubectl get -n sebastien-blin cm/docker-config -o yaml
 9249  kubectl delete --namespace ${NAMESPACE} configmap docker-config
 9250  kubectl create --namespace ${NAMESPACE} configmap docker-config --from-file=config.json
 9251  kubectl get pod -n kubeflow
 9252  kubectl get svc -n kubeflow
 9253  kubectl get vs -n kubeflow
 9254  kubectl proxy
 9255  kubectl port-forward -n kubeflow service/minio-service 9000:9000
 9256  kubectl delete --namespace ${NAMESPACE} configmap docker-config
 9257  kubectl create --namespace ${NAMESPACE} configmap docker-config --from-file=config.json
 9258  cat  ~/.docker/config.json
 9259  ll
 9260  env
 9261  source ~/pon
 9262  env
 9263  cd testkaniko
 9264  docker run \\n    -v ${pwd}/.config.json:/kaniko/.docker/config.json:ro \\n    -v ${pwd}/wks:/workspace \\n    gcr.io/kaniko-project/executor:latest \\n    --dockerfile /workspace/Dockerfile \\n    --destination "sebblin/test/img:1.0" \\n    --context dir:///workspace/"\n
 9265  docker run \\n    -v ${pwd}/.config.json:/kaniko/.docker/config.json:ro \\n    -v ${pwd}/wks:/workspace \\n    gcr.io/kaniko-project/executor:latest \\n    --dockerfile /workspace/Dockerfile \\n    --destination "sebblin/test/img:1.0" \\n    --context "dir:///workspace/"
 9266  docker run \\n    -v `pwd`/.config.json:/kaniko/.docker/config.json:ro \\n    -v `pwd`/wks:/workspace \\n    gcr.io/kaniko-project/executor:latest \\n    --dockerfile /workspace/Dockerfile \\n    --destination "sebblin/test/img:1.0" \\n    --context "dir:///workspace/"
 9267  docker run \\n    -v `pwd`/config.json:/kaniko/.docker/config.json:ro \\n    -v `pwd`/wks:/workspace \\n    gcr.io/kaniko-project/executor:latest \\n    --dockerfile /workspace/Dockerfile \\n    --destination "sebblin/test/img:1.0" \\n    --context "dir:///workspace/"
 9268  ll
 9269  docker buils 
 9270  docker build -t sebblin/test/img:1.0 wks
 9271  docker push sebblin/test/img:1.0
 9272  docker build -t sebblin/test:1.0 wks
 9273  docker push sebblin/test:1.0
 9274  docker run \\n    -v `pwd`/config.json:/kaniko/.docker/config.json:ro \\n    -v `pwd`/wks:/workspace \\n    gcr.io/kaniko-project/executor:latest \\n    --dockerfile /workspace/Dockerfile \\n    --destination "sebblin/test:1.20" \\n    --context "dir:///workspace/"
 9275  ll
 9276  cd ..
 9277  ll
 9278  kubectl delete --namespace ${NAMESPACE} configmap docker-config
 9279  kubectl create --namespace sebastien-blin configmap docker-config --from-file=config.json
 9280  kubectl get all -n sebastien-blin
 9281  cd testkaniko
 9282  docker run \\n    -v `pwd`/config.json:/kaniko/.docker/config.json:ro \\n    -v `pwd`/wks:/workspace \\n    gcr.io/kaniko-project/executor:v0.14.0 \\n    --dockerfile /workspace/Dockerfile \\n    --destination "sebblin/test:1.20" \\n    --context "dir:///workspace/"
 9283  docker run \\n    -v `pwd`/config.json:/kaniko/.docker/config.json:ro \\n    -v `pwd`/wks:/workspace \\n    gcr.io/kaniko-project/executor:v0.14.0 \\n    --dockerfile /workspace/Dockerfile \\n    --destination "sebblin/test:1.23" \\n    --context "dir:///workspace/"
 9284  ll wks
 9285  kubectl get pod/fairing-builder-v5r8j-zrh75 -o yaml
 9286  kubectl get pod/fairing-builder-v5r8j-zrh75 -n sebastien-blin -o yaml
 9287  kubectl get pod/fairing-builder-v5r8j-zrh75 -n sebastien-blin -o yaml > pod.yaml
 9288  kubectl apply -f pod.yaml
 9289  kubectl get pods -n sebastien-blin
 9290  kubectl get pod/fairing-builder-5lkfr-nsls7  -n sebastien-blin
 9291  kubectl get pod/fairing-builder-5lkfr-nsls7  -n sebastien-blin -o yaml
 9292  cd ../
 9293  ll
 9294  cd ..
 9295  ll
 9296  cd ../sources_orange
 9297  ll
 9298  cd kf-install
 9299  cd utils
 9300  ll
 9301  cd conf_ns_jupyter
 9302  ll
 9303  kaf podef_env.yaml -n sebastien-blin
 9304  kubectl apply -f pod.yaml
 9305  ll
 9306  kubectl apply -f pod.yaml
 9307  k9s
 9308  kubecrl get poddefault --all-naspaces
 9309  kubectl get poddefault --all-namspaces
 9310  kubectl get poddefault --all-namespaces
 9311  kaf podef_env.yaml -n sebastien-blin
 9312  kubectl get poddefault --all-namespaces
 9313  kubectl get pods -n sebastien-blin
 9314  kubectl get pods -n sebastien-blin fairing-builder-8jjf2-8s4zn
 9315  kubectl get pods -n sebastien-blin fairing-builder-8jjf2-8s4zn -o yaml
 9316  kubectl get jobss -n sebastien-blin 
 9317  kubectl get jobs -n sebastien-blin 
 9318  kubectl get jobs -n sebastien-blin fairing-builder-8jjf2
 9319  kubectl get jobs -n sebastien-blin fairing-builder-8jjf2 -o yaml
 9320  kaf podef_env.yaml -n kubeflow
 9321  kaf podef_env.yaml
 9322  ll
 9323  kubectl apply -n sebastien-blin job.yaml
 9324  kubectl apply -n sebastien-blin -f job.yaml
 9325  kubectl get jobs -n sebastien-blin 2 -o yaml
 9326  kubectl get jobs -n sebastien-blin  -o yaml
 9327  kubectl apply -n sebastien-blin -f job.yaml
 9328  kgp -n sebastien-blin 
 9329  kubectl apply -n sebastien-blin -f job.yaml
 9330  ll
 9331  cd ..
 9332  cd install-de-di
 9333  ll
 9334  cd temm
 9335  cd temp
 9336  ll
 9337  cd test
 9338  cd testkaniko
 9339  ll
 9340  mkdir clusterbuild
 9341  cd clusterbuild
 9342  ll
 9343  docker build . -tag dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/mnist-build-container:unstable
 9344  docker build -tag dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/mnist-build-container:unstable .
 9345  docker build -t dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/mnist-build-container:unstable .
 9346  docker  push
 9347  docker  push dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow/mnist-build-container:unstable\n
 9348  k9s
 9349  ll
 9350  kaf podef_env.yaml
 9351  ll
 9352  kaf test-poddef-ftjobs.yaml
 9353  ll
 9354  pwd
 9355  make build
 9356  cd ../
 9357  ll
 9358  cd debug-job-podsdefault
 9359  ll
 9360  cd admission-webhook
 9361  ll
 9362  make build
 9363  go version
 9364  ls /usr/lovcal/go
 9365  ls /usr/local/go
 9366  go version
 9367  make build
 9368  go clean -modcache
 9369  make build
 9370  ll
 9371  make build-gcr
 9372  docker push dockerfactory-unstable-iva.si.francetelecom.fr/kubeflow-images-public/admission-webhook:v20200422--e3b0c4
 9373  cd Documents/gcp
 9374  ll
 9375  cd orange_contents
 9376  gsutil -m cp -r -P gs://orange_contents .\n
 9377  source ~/poff
 9378  gsutil -m cp -r -P gs://orange_contents .\n
 9379  gcloud components update\n
 9380  gsutil rzync -r gs://orange_contents .\n
 9381  gsutil rsync -r gs://orange_contents .\n
 9382  ll
 9383  cd ..
 9384  ll
 9385  mv orange_contents orange_contents.old
 9386  ll
 9387  gsutil rsync -r gs://orange_contents .\n
 9388  ll
 9389  gsutil rsync -r gs://orange_contents orange_contents\n
 9390  gsutil rsync -r gs://orange_contents orange_contents/\n
 9391  mkdir orange_contents
 9392  gsutil rsync -r gs://orange_contents orange_contents/\n
 9393  echo gsutil rsync -r gs://orange_contents orange_contents/ >> sync_content.sh\n
 9394  ll
 9395  sh sync_content.sh
 9396  lR
 9397  ll -R 
 9398  ll -R  | grep -i anthos
 9399  cd orange_contents
 9400  ll
 9401  find . | grep -i anthos
 9402  find . | grep -i box
 9403  pip3 install -U plaidml-keras
 9404  plaidml-setup
 9405  jupyter lab
 9406  plaidml-setup
 9407  pip3 install plaidbench
 9408  pip3 install plaidml-keras
 9409  plaidml-setup
 9410  plaidbench keras --plaid vgg16
 9411  k9s
 9412  kfctl --help 
 9413  kfctl show
 9414  cd Dev/kubeflow
 9415  ll
 9416  cd test_install_kf_depuis_local
 9417  ll
 9418  code .
 9419  ll
 9420  curl -s https://codeload.github.com/kubeflow/manifests/tar.gz/v0.7-branch | tar -xzv
 9421  ll
 9422  source ~/pon
 9423  curl -s https://codeload.github.com/kubeflow/manifests/tar.gz/v0.7-branch | tar -xzv
 9424  ll
 9425  kfctl build -V -f kfctl_k8s_istio_v0.7.0.yaml
 9426  ll
 9427  cdk
 9428  kfctl build -V -f kfctl_k8s_istio_v0.7.0.yaml
 9429  ll
 9430  kfctl show 
 9431  kfctl show  all
 9432  kfctl show dex
 9433  rm -rf kustomize
 9434  ll
 9435  kfctl build -V -f kfctl_k8s_istio_v0.7.0.yaml
 9436  exit
 9437  ll
 9438  cd ..
 9439  cd install-de-di
 9440  cd temp
 9441  ll
 9442  cd testkaniko/
 9443  ll
 9444  kaf sjob.yaml
 9445  kubectl describe jobs/pi
 9446  pods=$(kubectl get pods --selector=job-name=pi --output=jsonpath='{.items[*].metadata.name}')\necho $pods
 9447  kubectl logs $pods
 9448  kaf sjob.yaml
 9449  kdelf sjob.yaml
 9450  kaf sjob.yaml
 9451  kdelf sjob.yaml
 9452  kaf sjob.yaml
 9453  kdelf sjob.yaml
 9454  kaf sjob.yaml
 9455  kdelf sjob.yaml
 9456  kaf sjob.yaml
 9457  kdelf sjob.yaml
 9458  kaf sjob.yaml
 9459  kdelf sjob.yaml
 9460  kaf sjob.yaml
 9461  kdelf sjob.yaml
 9462  kaf sjob.yaml
 9463  kdelf sjob.yaml
 9464  kubectl logs pods/tf-operator
 9465  kubectl logs pods/tf-operator -n kubeflow
 9466  kubectl get pods  -n kubeflow
 9467  kubectl logs pods/tf-job-operator-67bc9598f8-4gfxp -n kubeflow
 9468  kubectl logs pods/tf-job-operator-67bc9598f8-4gfxp -n kubeflow > log-tfop.txt
 9469  k9s
 9470  kaf sjob.yaml
 9471  kaf mnist-tb.yaml -n sebastien-blin
 9472  k9s
 9473  kubectl create --namespace=kubeflow rolebinding --clusterrole=kubeflow-view --serviceaccount=sebastien-blin:default-editor sebastien-blin-minio-view
 9474  kubectl apply  --namespace=kubeflow rolebinding --clusterrole=kubeflow-view --serviceaccount=sebastien-blin:default-editor sebastien-blin-minio-view
 9475  kubectl port-forward -n kubeflow service/minio-service 9000:9000
 9476  ll
 9477  ls -R
 9478  cd wks
 9479  ll
 9480  cat dockerfile
 9481  ll
 9482  docker pull docker pull seldonio/seldon-core-s2i-python37:1.1.0
 9483  docker pull seldonio/seldon-core-s2i-python37:1.1.0
 9484  source ~/pon
 9485  docker pull seldonio/seldon-core-s2i-python37:1.1.0
 9486  docker inspect seldonio/seldon-core-s2i-python37:1.1.0
 9487  ll
 9488  docker build .
 9489  docker run -it -rm bc2184cee2fc
 9490  docker run -it --rm bc2184cee2fc
 9491  cd ../..
 9492  ll
 9493  find . -name "*.json"
 9494  cd ..
 9495  find . -name "*.json"
 9496  cd ..
 9497  find . -name "*proxy*"
 9498  k9s
 9499  ll
 9500  ls
 9501  kubectl delete cm/docker-config -n sebastien-blin
 9502  kubectl create --namespace ${NAMESPACE} configmap docker-config --from-file=
 9503  ll
 9504  cd ..
 9505  ll
 9506  kubectl create --namespace sebastien-blin configmap docker-config --from-file=config.json
 9507  ll
 9508  cd wks
 9509  ll
 9510  cd ..
 9511  ll
 9512  cat secret.yaml
 9513  kubectl apply -k --help
 9514  cd secrets
 9515  ll
 9516  kaf kustomization.yaml
 9517  kubectl apply -k . kustomization.yaml
 9518  kubectl apply -k .
 9519  kubectl config view
 9520  kubectl
 9521  kubectl cluster-info
 9522  kubectl cluster-info | grep 'Kubernetes master' | awk '/http/ {print $NF}'
 9523  cd .kube
 9524  ll
 9525  cat config
 9526  kubectl get pods 
 9527  k9s
 9528  ll
 9529  cd ..
 9530  l
 9531  jupyter la
 9532  jupyter lab
 9533  pip3 install kubeflow-fairing
 9534  ll
 9535  mkdir buidlseldon
 9536  mv Dockerfile clusterbuild
 9537  mv requirements.txt clusterbuild
 9538  ll
 9539  cat config.json
 9540  touch run-kaniko.sh
 9541  pwd
 9542  ll
 9543  chmod +x run-kaniko.sh
 9544  ./run-kaniko.sh
 9545  ll
 9546  env
 9547  ./run-kaniko.sh
 9548  ll
 9549  ll buidlseldon
 9550  cd clusterbuild
 9551  ll
 9552  MV Dockerfile ../buidlseldon
 9553  mv Dockerfile ../buidlseldon
 9554  mv requirements.txt ../buidlseldon
 9555  cd ..
 9556  ./run-kaniko.sh
 9557  ll
 9558  ./run-kaniko.sh
 9559  ll 
 9560  ll buildseldon
 9561  ll
 9562  mv Dockerfile buildseldon
 9563  ls clusterbuild
 9564  ll buidlseldon
 9565  mv buidlseldon/* ./buildseldon
 9566  ./run-kaniko.sh
 9567  exxit
 9568  exit
 9569  jupyter --version
 9570  jupyter update
 9571  conda update jupyter
 9572  jupyter lab
 9573  conda install -c conda-forge jupyterlab
 9574  jupyter lab
 9575  cd Documents/formation/DSO
 9576  ll
 9577  jupyter lab
 9578  cd ../
 9579  ll
 9580  cd ..
 9581  cd ../Dev/kubeflow/sources_orange
 9582  lll
 9583  ll
 9584  cd kf-install
 9585  git remote
 9586  git remote --help 
 9587  git remote get url origin
 9588  git remote get-url origin
 9589  gcloud
 9590  gcloud alpha resources lsit
 9591  gcloud alpha resources list
 9592  gcloud alpha resources list --billing-project='01B6C3-D7B3E3-28890D'
 9593  gcloud alpha resources list --billing-account='01B6C3-D7B3E3-28890D'
 9594  gcloud alpha resources list --uri
 9595  gcloud alpha resources list --uri > /tmp/resgcp.txt
 9596  code /tmp/resgcp.txt
 9597  cd ..
 9598  cd install-de-di
 9599  cd temp
 9600  cd testkaniko/
 9601  ll
 9602  ./run-kaniko.sh
 9603  env http
 9604  env 
 9605  env | grep http
 9606  source ~/pon
 9607  env | grep http
 9608  env | grep no
 9609  ./run-kaniko.sh
 9610  k9s
 9611  docker images
 9612  ll
 9613  cd 
 9614  ll
 9615  cat pon
 9616  cat poff
 9617  k9s
 9618  cd 
 9619  cd dev
 9620  ll
 9621  cd test-http
 9622  ll
 9623  cat *
 9624  cd ..
 9625  mkdir arrosage
 9626  cd arrosage
 9627  ll
 9628  code . 
 9629  npm install --save @fullcalendar/core @fullcalendar/resource-timeline
 9630  ll
 9631  cd ..
 9632  npx create-react-app arrosage
 9633  cd arrosage
 9634  ll
 9635  ls -la
 9636  rm -rf arrosage
 9637  cd arrosage
 9638  npx create-react-app arrosage
 9639  cd arrosage
 9640  npm start
 9641  env | grep HOS
 9642  unset HOST
 9643  npm start
 9644  cd Dev/arrosage
 9645  ll
 9646  cd arrosage
 9647  ll
 9648  cd ..
 9649  rm -rf node_modules
 9650  rm -f package-lock.json
 9651  ll
 9652  cd arrosage
 9653  ll
 9654  npm install --save @fullcalendar/core @fullcalendar/resource-timeline
 9655  ll
 9656  npm install --save @fullcalendar/core @fullcalendar/resource-timeline
 9657  npm install --save typescript
 9658  npm install --save @fullcalendar/core @fullcalendar/resource-timeline
 9659  ll
 9660  npm install devextreme@20.1 devextreme-react@20.1 --save --save-exact
 9661  source ~/poff
 9662  npm install devextreme@20.1 devextreme-react@20.1 --save --save-exact
 9663  source ~/pon
 9664  npm install devextreme@20.1 devextreme-react@20.1 --save --save-exact
 9665  npm install typescript --save --save-exact
 9666  npm i devextreme-aspnet-data-nojquery
 9667  ll
 9668  cd ..
 9669  ll
 9670  cd Srv-api
 9671  ll
 9672  chmod a+x srv.py
 9673  ./srv.py
 9674  python srv.py
 9675  cult localhost:5000
 9676  curl localhost:5000
 9677  python srv.py
 9678  curl localhost:5000
 9679  curl localhost:5000/Post
 9680  curl -X "POST" localhost:5000/Post
 9681  curl -d '{"key1":"value1", "key2":"value2"}'-X "POST" localhost:5000/Post
 9682  curl -d '{"key1":"value1", "key2":"value2"}' -X "POST" localhost:5000/Post
 9683  curl -d 'values={"key1":"value1", "key2":"value2"}' -X "POST" localhost:5000/Post
 9684  curl -v -d 'values={"key1":"value1", "key2":"value2"}' -X "POST" localhost:5000/Post
 9685  curl -v -d 'values={"key1":"value1", "key2":"value2"}' -X "POST" https://js.devexpress.com/Demos/Mvc/api/SchedulerDatalocaPost
 9686  curl -v -d 'values={"key1":"value1", "key2":"value2"}' -X "POST" https://js.devexpress.com/Demos/Mvc/api/Scheduler/Post
 9687  curl -v -d 'values=%7B%22text%22%3A%22mjhl%22%2C%22startDate%22%3A%222020-05-07T17%3A30%3A00.000Z%22%2C%22endDate%22%3A%222020-05-07T18%3A00%3A00.000Z%22%2C%22allDay%22%3Afalse%7D' -X "POST" https://js.devexpress.com/Demos/Mvc/api/Scheduler/Post
 9688  curl -v -d 'values=%7B%22text%22%3A%22mjhl%22%2C%22startDate%22%3A%222020-05-07T17%3A30%3A00.000Z%22%2C%22endDate%22%3A%222020-05-07T18%3A00%3A00.000Z%22%2C%22allDay%22%3Afalse%7D' -X "POST" https://js.devexpress.com/Demos/Mvc/api/SchedulerData/Post
 9689  curl -v -d 'values=%7B%22text%22%3A%22mjhl%22%2C%22startDate%22%3A%222020-05-07T17%3A30%3A00.000Z%22%2C%22endDate%22%3A%222020-05-07T18%3A00%3A00.000Z%22%2C%22allDay%22%3Afalse%7D' -X "POST" localhost:5000/Post
 9690  python srv.py
 9691  curl -v -d 'values=%7B%22text%22%3A%22mjhl%22%2C%22startDate%22%3A%222020-05-07T17%3A30%3A00.000Z%22%2C%22endDate%22%3A%222020-05-07T18%3A00%3A00.000Z%22%2C%22allDay%22%3Afalse%7D' -X "POST" localhost:5000/Post
 9692  python srv.py
 9693  pythonn test.
 9694  pythonn test.py
 9695  python test.py
 9696  jupyter lab
 9697  python srv.py
 9698  gsutil ls gs://seldon-models
 9699  gcloud components update
 9700  gsutil ls gs://seldon-models
 9701  k9s
 9702  cd Dev/tmp
 9703  ll
 9704  python classe.py
 9705  cd Dev/tmp
 9706  python classe.py
 9707  OA
 9708  python classe.py
 9709  OA
 9710  python classe.py
 9711  OA
 9712  python classe.py
 9713  cd /Users/seb/Library/Application Support/Lens
 9714  cd /Users/seb/Library/Application\ Support
 9715  cd Lens
 9716  ll
 9717  cd binaries
 9718  ll
 9719  cd kubectl
 9720  ll
 9721  cd 1.13.12
 9722  ll
 9723  cd ..
 9724  ll
 9725  ls -R
 9726  cd 1.13.12
 9727  ln -s ../1.17.4/kubectl
 9728  ll
 9729  cd 
 9730  cd Downloads
 9731  ll
 9732  ls -ltr
 9733  cat iris.data
 9734  k9s
 9735  cd ..
 9736  cd Dev
 9737  ll
 9738  cd kubeflow
 9739  cd demo-cu
 9740  ll
 9741  cd ..
 9742  ll
 9743  cd sources_orange
 9744  ll
 9745  cd demo-cu
 9746  ll
 9747  cd demo_notbook
 9748  ll
 9749  cd train-src
 9750  cd test
 9751  ll
 9752  ./test.sh
 9753  chmod +x test.sh
 9754  ./test.sh
 9755  cd ..
 9756  cd dev
 9757  ll
 9758  cd kubeflow
 9759  cd demo-cu
 9760  ll
 9761  grep 
 9762  grep --help 
 9763  grep -R s3
 9764  grep -R s3 *
 9765  grep -R s3-minio *
 9766  pip list
 9767  pip list | grep yaml
 9768  k9s
 9769  kubectl label namespace sebastien-blin serving.kubeflow.org/inferenceservice=enabled
 9770  ll
 9771  cd 
 9772  cd Dev/kubeflow
 9773  ll
 9774  cd sources_orange
 9775  cd demo-cu
 9776  cd demo_notbook
 9777  ll
 9778  cd util
 9779  cd RBAC
 9780  ll
 9781  kaf set-rbac.yaml
 9782  kaf set-rbac.yaml -n sebastien-blin
 9783  kaf set-rbac.yaml -n 'sebastien-blin'
 9784  kaf set-rbac.yaml --namespace  'sebastien-blin'
 9785  kubectl apply -n 'sebastien-blin' -f set-rbac.yaml
 9786  kubectl delete  -n 'sebastien-blin' -f set-rbac.yaml
 9787  kubectl apply -n 'sebastien-blin' -f set-rbac.yaml
 9788  curl -gk https://di-diod-kubeflow.itn.intraorange/seldon/sebastien-blin/model-cu/api/v0.1/predictions \\n     -H "Content-Type: application/json" \\n     --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'\n
 9789  k9s
 9790  curl -gkv https://di-diod-kubeflow.itn.intraorange/seldon/sebastien-blin/model-cu/api/v0.1/predictions \\n     -H "Content-Type: application/json" \\n     --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'\n\n
 9791  ssh -l diod@172.24.137.169:SSH:osbi7352 diodbastion-qualif.bigdata.intraorange
 9792  curl -gkv https://di-diod-kubeflow.itn.intraorange/seldon/sebastien-blin/model-cu/api/v0.1/predictions \\n     -H "Content-Type: application/json" \\n     --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'\n\n
 9793  kubectl get vs
 9794  kubectl get vs --all-namespaces
 9795  kubectl get vs --all-namespaces notebook-sebastien-blin-test-seb  
 9796  kubectl get vs -n sebastien-blin notebook-sebastien-blin-test-seb  
 9797  kubectl get vs -n sebastien-blin notebook-sebastien-blin-test-seb  --yaml
 9798  kubectl get vs-- yaml  -n sebastien-blin notebook-sebastien-blin-test-seb
 9799  kubectl get vs --yaml  -n sebastien-blin notebook-sebastien-blin-test-seb
 9800  kubectl get vs -y  -n sebastien-blin notebook-sebastien-blin-test-seb
 9801  kubectl get vs  -n sebastien-blin notebook-sebastien-blin-test-seb
 9802  kubectl get vs  -n sebastien-blin notebook-sebastien-blin-test-seb -o yaml
 9803  kubectl get vs --all-namespaces
 9804  kubectl get vs  -n sebastien-blin demo-cu-model-cu-http -o yaml
 9805  pwd
 9806  kubectl get vs  -n sebastien-blin demo-cu-model-cu-http -o yaml > seldon-vs.yaml
 9807  kubectl apply -f seldon-vs.yaml
 9808  curl -gkv https://di-diod-kubeflow.itn.intraorange/seldon/sebastien-blin/model-cu/api/v0.1/predictions \\n     -H "Content-Type: application/json" \\n     --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'\n\n
 9809  curl -gkv https://di-diod-kubeflow.itn.intraorange/seldon/sebastien-blin/model-cu/api/v0.1/predictions\n\n
 9810  kubectl get vs  -n sebastien-blin demo-cu-model-cu-http -o yaml
 9811  kubectl delete -f seldon-vs.yaml
 9812  kubectl apply -f seldon-vs.yaml
 9813  curl -gkv https://di-diod-kubeflow.itn.intraorange/seldon/sebastien-blin/model-cu/api/v0.1/predictions\n\n
 9814  curl -gkv https://di-diod-kubeflow.itn.intraorange/seldon/sebastien-blin/model-cu/api/v0.1/predictions \\n     -H "Content-Type: application/json" \\n     --data '{"data": {"names": ["sepal_length", "sepal_width", "petal_length", "petal_width"], "ndarray": [[7.233, 4.652, 7.39, 0.324]]}}'\n\n
 9815  exit
 9816  cd Dev
 9817  cd arrosage
 9818  ll
 9819  history | grep arr
 9820  history | grep arrOS
 9821  history | grep arros
